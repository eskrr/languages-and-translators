Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID LPAREN RPAREN function_block
Rule 7     main_function -> FUNCTION MAIN LPAREN RPAREN function_block
Rule 8     function_block -> LBRACE instruction RBRACE
Rule 9     instruction -> proposition instruction
Rule 10    instruction -> empty
Rule 11    proposition -> function_call SEMICOLON
Rule 12    proposition -> assignation SEMICOLON
Rule 13    proposition -> print SEMICOLON
Rule 14    proposition -> input SEMICOLON
Rule 15    proposition -> unary_operation SEMICOLON
Rule 16    proposition -> if_sentence
Rule 17    proposition -> while_sentence
Rule 18    proposition -> do_while_sentence
Rule 19    proposition -> for_sentence
Rule 20    print -> COUT output_expression
Rule 21    output_expression -> OUTSTREAM expression output_expression
Rule 22    output_expression -> OUTSTREAM expression
Rule 23    output_expression -> OUTSTREAM TEXT output_expression
Rule 24    output_expression -> OUTSTREAM TEXT
Rule 25    input -> CIN input_expression
Rule 26    input_expression -> INSTREAM id input_expression
Rule 27    input_expression -> INSTREAM id
Rule 28    declaration -> VAR assignation
Rule 29    assignation -> variables EQUAL expression
Rule 30    assignation -> variables
Rule 31    unary_operation -> ID PLUS PLUS
Rule 32    unary_operation -> ID MINUS MINUS
Rule 33    unary_operation -> PLUS PLUS ID
Rule 34    unary_operation -> MINUS MINUS ID
Rule 35    variables -> id COMMA variables
Rule 36    variables -> id
Rule 37    id -> ID
Rule 38    id -> ID vector
Rule 39    id -> ID vector vector
Rule 40    vector -> LBRACKET integer RBRACKET
Rule 41    vector -> LBRACKET ID RBRACKET
Rule 42    vector -> LBRACKET empty RBRACKET
Rule 43    function_call -> ID LPAREN RPAREN
Rule 44    if_sentence -> IF LPAREN expression RPAREN function_block empty
Rule 45    if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block
Rule 46    while_sentence -> WHILE LPAREN expression RPAREN function_block
Rule 47    do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON
Rule 48    for_sentence -> FOR LPAREN for_expression RPAREN function_block
Rule 49    for_expression -> declaration SEMICOLON expression SEMICOLON assignation
Rule 50    for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation
Rule 51    expression -> simple_expression
Rule 52    expression -> expression LESS_THAN simple_expression
Rule 53    expression -> expression LESS_OR_EQUAL_THAN simple_expression
Rule 54    expression -> expression EQUAL_THAN simple_expression
Rule 55    expression -> expression DIFFERENT_THAN simple_expression
Rule 56    expression -> expression GREATER_THAN simple_expression
Rule 57    expression -> expression GREATER_OR_EQUAL_THAN simple_expression
Rule 58    simple_expression -> term
Rule 59    simple_expression -> PLUS term
Rule 60    simple_expression -> MINUS term
Rule 61    simple_expression -> simple_expression OR term
Rule 62    simple_expression -> simple_expression PLUS term
Rule 63    simple_expression -> simple_expression MINUS term
Rule 64    term -> factor
Rule 65    term -> term TIMES factor
Rule 66    term -> term DIVIDE factor
Rule 67    term -> term MOD factor
Rule 68    term -> term AND factor
Rule 69    factor -> id
Rule 70    factor -> number
Rule 71    factor -> function_call
Rule 72    factor -> NOT factor
Rule 73    factor -> LPAREN expression RPAREN
Rule 74    number -> real
Rule 75    number -> integer
Rule 76    real -> NUMBER DOT NUMBER
Rule 77    integer -> NUMBER
Rule 78    empty -> <empty>

Terminals, with rules where they appear

AND                  : 68
CIN                  : 25
COMMA                : 35
COUT                 : 20
DIFFERENT_THAN       : 55
DIVIDE               : 66
DO                   : 47
DOT                  : 76
ELSE                 : 45
EQUAL                : 29
EQUAL_THAN           : 54
FOR                  : 48
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 57
GREATER_THAN         : 56
ID                   : 6 31 32 33 34 37 38 39 41 43
IF                   : 44 45
INSTREAM             : 26 27
LBRACE               : 8
LBRACKET             : 40 41 42
LESS_OR_EQUAL_THAN   : 53
LESS_THAN            : 52
LPAREN               : 6 7 43 44 45 46 47 48 73
MAIN                 : 7
MINUS                : 32 32 34 34 60 63
MOD                  : 67
NOT                  : 72
NUMBER               : 76 76 77
OR                   : 61
OUTSTREAM            : 21 22 23 24
PLUS                 : 31 31 33 33 59 62
RBRACE               : 8
RBRACKET             : 40 41 42
RPAREN               : 6 7 43 44 45 46 47 48 73
SEMICOLON            : 2 3 11 12 13 14 15 47 49 49 50 50
TEXT                 : 23 24
TIMES                : 65
VAR                  : 28
WHILE                : 46 47
error                : 

Nonterminals, with rules where they appear

assignation          : 3 12 28 49
declaration          : 2 49 50
do_while_sentence    : 18
empty                : 10 42 44
expression           : 21 22 29 44 45 46 47 49 50 52 53 54 55 56 57 73
factor               : 64 65 66 67 68 72
for_expression       : 48
for_sentence         : 19
function_block       : 6 7 44 45 45 46 47 48
function_call        : 11 71
id                   : 26 27 35 36 69
if_sentence          : 16
input                : 14
input_expression     : 25 26
instruction          : 8 9
integer              : 40 75
main_function        : 5
normal_function      : 4
number               : 70
output_expression    : 20 21 23
print                : 13
program              : 0
program_block        : 1 2 3 4
proposition          : 9
real                 : 74
simple_expression    : 51 52 53 54 55 56 57 61 62 63
term                 : 58 59 60 61 62 63 65 66 67 68
unary_operation      : 15 50
variables            : 29 30 35
vector               : 38 39 39
while_sentence       : 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . VAR assignation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 1
    ID              shift and go to state 11

    main_function                  shift and go to state 2
    assignation                    shift and go to state 3
    variables                      shift and go to state 4
    normal_function                shift and go to state 5
    program_block                  shift and go to state 7
    program                        shift and go to state 8
    declaration                    shift and go to state 9
    id                             shift and go to state 6

state 1

    (6) normal_function -> FUNCTION . ID LPAREN RPAREN function_block
    (7) main_function -> FUNCTION . MAIN LPAREN RPAREN function_block

    ID              shift and go to state 13
    MAIN            shift and go to state 12


state 2

    (5) program_block -> main_function .

    $end            reduce using rule 5 (program_block -> main_function .)


state 3

    (3) program_block -> assignation . SEMICOLON program_block

    SEMICOLON       shift and go to state 14


state 4

    (29) assignation -> variables . EQUAL expression
    (30) assignation -> variables .

    EQUAL           shift and go to state 15
    SEMICOLON       reduce using rule 30 (assignation -> variables .)
    RPAREN          reduce using rule 30 (assignation -> variables .)


state 5

    (4) program_block -> normal_function . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . VAR assignation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 1
    ID              shift and go to state 11

    main_function                  shift and go to state 2
    assignation                    shift and go to state 3
    variables                      shift and go to state 4
    normal_function                shift and go to state 5
    program_block                  shift and go to state 16
    declaration                    shift and go to state 9
    id                             shift and go to state 6

state 6

    (35) variables -> id . COMMA variables
    (36) variables -> id .

    COMMA           shift and go to state 17
    EQUAL           reduce using rule 36 (variables -> id .)
    SEMICOLON       reduce using rule 36 (variables -> id .)
    RPAREN          reduce using rule 36 (variables -> id .)


state 7

    (1) program -> program_block .

    $end            reduce using rule 1 (program -> program_block .)


state 8

    (0) S' -> program .



state 9

    (2) program_block -> declaration . SEMICOLON program_block

    SEMICOLON       shift and go to state 18


state 10

    (28) declaration -> VAR . assignation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    ID              shift and go to state 11

    variables                      shift and go to state 4
    assignation                    shift and go to state 19
    id                             shift and go to state 6

state 11

    (37) id -> ID .
    (38) id -> ID . vector
    (39) id -> ID . vector vector
    (40) vector -> . LBRACKET integer RBRACKET
    (41) vector -> . LBRACKET ID RBRACKET
    (42) vector -> . LBRACKET empty RBRACKET

    COMMA           reduce using rule 37 (id -> ID .)
    EQUAL           reduce using rule 37 (id -> ID .)
    SEMICOLON       reduce using rule 37 (id -> ID .)
    RPAREN          reduce using rule 37 (id -> ID .)
    INSTREAM        reduce using rule 37 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 12

    (7) main_function -> FUNCTION MAIN . LPAREN RPAREN function_block

    LPAREN          shift and go to state 22


state 13

    (6) normal_function -> FUNCTION ID . LPAREN RPAREN function_block

    LPAREN          shift and go to state 23


state 14

    (3) program_block -> assignation SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . VAR assignation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 1
    ID              shift and go to state 11

    main_function                  shift and go to state 2
    assignation                    shift and go to state 3
    variables                      shift and go to state 4
    normal_function                shift and go to state 5
    program_block                  shift and go to state 24
    declaration                    shift and go to state 9
    id                             shift and go to state 6

state 15

    (29) assignation -> variables EQUAL . expression
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 39
    id                             shift and go to state 27

state 16

    (4) program_block -> normal_function program_block .

    $end            reduce using rule 4 (program_block -> normal_function program_block .)


state 17

    (35) variables -> id COMMA . variables
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    ID              shift and go to state 11

    variables                      shift and go to state 40
    id                             shift and go to state 6

state 18

    (2) program_block -> declaration SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . VAR assignation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 1
    ID              shift and go to state 11

    declaration                    shift and go to state 9
    main_function                  shift and go to state 2
    assignation                    shift and go to state 3
    variables                      shift and go to state 4
    normal_function                shift and go to state 5
    program_block                  shift and go to state 41
    id                             shift and go to state 6

state 19

    (28) declaration -> VAR assignation .

    SEMICOLON       reduce using rule 28 (declaration -> VAR assignation .)


state 20

    (40) vector -> LBRACKET . integer RBRACKET
    (41) vector -> LBRACKET . ID RBRACKET
    (42) vector -> LBRACKET . empty RBRACKET
    (77) integer -> . NUMBER
    (78) empty -> .

    ID              shift and go to state 44
    NUMBER          shift and go to state 42
    RBRACKET        reduce using rule 78 (empty -> .)

    integer                        shift and go to state 43
    empty                          shift and go to state 45

state 21

    (38) id -> ID vector .
    (39) id -> ID vector . vector
    (40) vector -> . LBRACKET integer RBRACKET
    (41) vector -> . LBRACKET ID RBRACKET
    (42) vector -> . LBRACKET empty RBRACKET

    COMMA           reduce using rule 38 (id -> ID vector .)
    EQUAL           reduce using rule 38 (id -> ID vector .)
    SEMICOLON       reduce using rule 38 (id -> ID vector .)
    RPAREN          reduce using rule 38 (id -> ID vector .)
    TIMES           reduce using rule 38 (id -> ID vector .)
    DIVIDE          reduce using rule 38 (id -> ID vector .)
    MOD             reduce using rule 38 (id -> ID vector .)
    AND             reduce using rule 38 (id -> ID vector .)
    OR              reduce using rule 38 (id -> ID vector .)
    PLUS            reduce using rule 38 (id -> ID vector .)
    MINUS           reduce using rule 38 (id -> ID vector .)
    LESS_THAN       reduce using rule 38 (id -> ID vector .)
    LESS_OR_EQUAL_THAN reduce using rule 38 (id -> ID vector .)
    EQUAL_THAN      reduce using rule 38 (id -> ID vector .)
    DIFFERENT_THAN  reduce using rule 38 (id -> ID vector .)
    GREATER_THAN    reduce using rule 38 (id -> ID vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 38 (id -> ID vector .)
    OUTSTREAM       reduce using rule 38 (id -> ID vector .)
    INSTREAM        reduce using rule 38 (id -> ID vector .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 46

state 22

    (7) main_function -> FUNCTION MAIN LPAREN . RPAREN function_block

    RPAREN          shift and go to state 47


state 23

    (6) normal_function -> FUNCTION ID LPAREN . RPAREN function_block

    RPAREN          shift and go to state 48


state 24

    (3) program_block -> assignation SEMICOLON program_block .

    $end            reduce using rule 3 (program_block -> assignation SEMICOLON program_block .)


state 25

    (71) factor -> function_call .

    TIMES           reduce using rule 71 (factor -> function_call .)
    DIVIDE          reduce using rule 71 (factor -> function_call .)
    MOD             reduce using rule 71 (factor -> function_call .)
    AND             reduce using rule 71 (factor -> function_call .)
    OR              reduce using rule 71 (factor -> function_call .)
    PLUS            reduce using rule 71 (factor -> function_call .)
    MINUS           reduce using rule 71 (factor -> function_call .)
    RPAREN          reduce using rule 71 (factor -> function_call .)
    LESS_THAN       reduce using rule 71 (factor -> function_call .)
    LESS_OR_EQUAL_THAN reduce using rule 71 (factor -> function_call .)
    EQUAL_THAN      reduce using rule 71 (factor -> function_call .)
    DIFFERENT_THAN  reduce using rule 71 (factor -> function_call .)
    GREATER_THAN    reduce using rule 71 (factor -> function_call .)
    GREATER_OR_EQUAL_THAN reduce using rule 71 (factor -> function_call .)
    SEMICOLON       reduce using rule 71 (factor -> function_call .)
    OUTSTREAM       reduce using rule 71 (factor -> function_call .)


state 26

    (51) expression -> simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 51 (expression -> simple_expression .)
    LESS_THAN       reduce using rule 51 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 51 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 51 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 51 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 51 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 51 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 51 (expression -> simple_expression .)
    OUTSTREAM       reduce using rule 51 (expression -> simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 27

    (69) factor -> id .

    TIMES           reduce using rule 69 (factor -> id .)
    DIVIDE          reduce using rule 69 (factor -> id .)
    MOD             reduce using rule 69 (factor -> id .)
    AND             reduce using rule 69 (factor -> id .)
    OR              reduce using rule 69 (factor -> id .)
    PLUS            reduce using rule 69 (factor -> id .)
    MINUS           reduce using rule 69 (factor -> id .)
    RPAREN          reduce using rule 69 (factor -> id .)
    LESS_THAN       reduce using rule 69 (factor -> id .)
    LESS_OR_EQUAL_THAN reduce using rule 69 (factor -> id .)
    EQUAL_THAN      reduce using rule 69 (factor -> id .)
    DIFFERENT_THAN  reduce using rule 69 (factor -> id .)
    GREATER_THAN    reduce using rule 69 (factor -> id .)
    GREATER_OR_EQUAL_THAN reduce using rule 69 (factor -> id .)
    SEMICOLON       reduce using rule 69 (factor -> id .)
    OUTSTREAM       reduce using rule 69 (factor -> id .)


state 28

    (60) simple_expression -> MINUS . term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 52
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 29

    (59) simple_expression -> PLUS . term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 53
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 30

    (64) term -> factor .

    TIMES           reduce using rule 64 (term -> factor .)
    DIVIDE          reduce using rule 64 (term -> factor .)
    MOD             reduce using rule 64 (term -> factor .)
    AND             reduce using rule 64 (term -> factor .)
    OR              reduce using rule 64 (term -> factor .)
    PLUS            reduce using rule 64 (term -> factor .)
    MINUS           reduce using rule 64 (term -> factor .)
    LESS_THAN       reduce using rule 64 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 64 (term -> factor .)
    EQUAL_THAN      reduce using rule 64 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 64 (term -> factor .)
    GREATER_THAN    reduce using rule 64 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 64 (term -> factor .)
    SEMICOLON       reduce using rule 64 (term -> factor .)
    RPAREN          reduce using rule 64 (term -> factor .)
    OUTSTREAM       reduce using rule 64 (term -> factor .)


state 31

    (74) number -> real .

    TIMES           reduce using rule 74 (number -> real .)
    DIVIDE          reduce using rule 74 (number -> real .)
    MOD             reduce using rule 74 (number -> real .)
    AND             reduce using rule 74 (number -> real .)
    OR              reduce using rule 74 (number -> real .)
    PLUS            reduce using rule 74 (number -> real .)
    MINUS           reduce using rule 74 (number -> real .)
    RPAREN          reduce using rule 74 (number -> real .)
    LESS_THAN       reduce using rule 74 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 74 (number -> real .)
    EQUAL_THAN      reduce using rule 74 (number -> real .)
    DIFFERENT_THAN  reduce using rule 74 (number -> real .)
    GREATER_THAN    reduce using rule 74 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 74 (number -> real .)
    SEMICOLON       reduce using rule 74 (number -> real .)
    OUTSTREAM       reduce using rule 74 (number -> real .)


state 32

    (76) real -> NUMBER . DOT NUMBER
    (77) integer -> NUMBER .

    DOT             shift and go to state 54
    TIMES           reduce using rule 77 (integer -> NUMBER .)
    DIVIDE          reduce using rule 77 (integer -> NUMBER .)
    MOD             reduce using rule 77 (integer -> NUMBER .)
    AND             reduce using rule 77 (integer -> NUMBER .)
    OR              reduce using rule 77 (integer -> NUMBER .)
    PLUS            reduce using rule 77 (integer -> NUMBER .)
    MINUS           reduce using rule 77 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 77 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 77 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 77 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 77 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 77 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 77 (integer -> NUMBER .)
    SEMICOLON       reduce using rule 77 (integer -> NUMBER .)
    RPAREN          reduce using rule 77 (integer -> NUMBER .)
    OUTSTREAM       reduce using rule 77 (integer -> NUMBER .)


state 33

    (58) simple_expression -> term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 58 (simple_expression -> term .)
    PLUS            reduce using rule 58 (simple_expression -> term .)
    MINUS           reduce using rule 58 (simple_expression -> term .)
    LESS_THAN       reduce using rule 58 (simple_expression -> term .)
    LESS_OR_EQUAL_THAN reduce using rule 58 (simple_expression -> term .)
    EQUAL_THAN      reduce using rule 58 (simple_expression -> term .)
    DIFFERENT_THAN  reduce using rule 58 (simple_expression -> term .)
    GREATER_THAN    reduce using rule 58 (simple_expression -> term .)
    GREATER_OR_EQUAL_THAN reduce using rule 58 (simple_expression -> term .)
    SEMICOLON       reduce using rule 58 (simple_expression -> term .)
    RPAREN          reduce using rule 58 (simple_expression -> term .)
    OUTSTREAM       reduce using rule 58 (simple_expression -> term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 34

    (70) factor -> number .

    TIMES           reduce using rule 70 (factor -> number .)
    DIVIDE          reduce using rule 70 (factor -> number .)
    MOD             reduce using rule 70 (factor -> number .)
    AND             reduce using rule 70 (factor -> number .)
    OR              reduce using rule 70 (factor -> number .)
    PLUS            reduce using rule 70 (factor -> number .)
    MINUS           reduce using rule 70 (factor -> number .)
    RPAREN          reduce using rule 70 (factor -> number .)
    LESS_THAN       reduce using rule 70 (factor -> number .)
    LESS_OR_EQUAL_THAN reduce using rule 70 (factor -> number .)
    EQUAL_THAN      reduce using rule 70 (factor -> number .)
    DIFFERENT_THAN  reduce using rule 70 (factor -> number .)
    GREATER_THAN    reduce using rule 70 (factor -> number .)
    GREATER_OR_EQUAL_THAN reduce using rule 70 (factor -> number .)
    SEMICOLON       reduce using rule 70 (factor -> number .)
    OUTSTREAM       reduce using rule 70 (factor -> number .)


state 35

    (73) factor -> LPAREN . expression RPAREN
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 59
    id                             shift and go to state 27

state 36

    (75) number -> integer .

    TIMES           reduce using rule 75 (number -> integer .)
    DIVIDE          reduce using rule 75 (number -> integer .)
    MOD             reduce using rule 75 (number -> integer .)
    AND             reduce using rule 75 (number -> integer .)
    OR              reduce using rule 75 (number -> integer .)
    PLUS            reduce using rule 75 (number -> integer .)
    MINUS           reduce using rule 75 (number -> integer .)
    RPAREN          reduce using rule 75 (number -> integer .)
    LESS_THAN       reduce using rule 75 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 75 (number -> integer .)
    EQUAL_THAN      reduce using rule 75 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 75 (number -> integer .)
    GREATER_THAN    reduce using rule 75 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 75 (number -> integer .)
    SEMICOLON       reduce using rule 75 (number -> integer .)
    OUTSTREAM       reduce using rule 75 (number -> integer .)


state 37

    (37) id -> ID .
    (38) id -> ID . vector
    (39) id -> ID . vector vector
    (43) function_call -> ID . LPAREN RPAREN
    (40) vector -> . LBRACKET integer RBRACKET
    (41) vector -> . LBRACKET ID RBRACKET
    (42) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 37 (id -> ID .)
    DIVIDE          reduce using rule 37 (id -> ID .)
    MOD             reduce using rule 37 (id -> ID .)
    AND             reduce using rule 37 (id -> ID .)
    OR              reduce using rule 37 (id -> ID .)
    PLUS            reduce using rule 37 (id -> ID .)
    MINUS           reduce using rule 37 (id -> ID .)
    RPAREN          reduce using rule 37 (id -> ID .)
    LESS_THAN       reduce using rule 37 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 37 (id -> ID .)
    EQUAL_THAN      reduce using rule 37 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 37 (id -> ID .)
    GREATER_THAN    reduce using rule 37 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 37 (id -> ID .)
    SEMICOLON       reduce using rule 37 (id -> ID .)
    OUTSTREAM       reduce using rule 37 (id -> ID .)
    LPAREN          shift and go to state 60
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 38

    (72) factor -> NOT . factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 61
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 39

    (29) assignation -> variables EQUAL expression .
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    SEMICOLON       reduce using rule 29 (assignation -> variables EQUAL expression .)
    RPAREN          reduce using rule 29 (assignation -> variables EQUAL expression .)
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 40

    (35) variables -> id COMMA variables .

    EQUAL           reduce using rule 35 (variables -> id COMMA variables .)
    SEMICOLON       reduce using rule 35 (variables -> id COMMA variables .)
    RPAREN          reduce using rule 35 (variables -> id COMMA variables .)


state 41

    (2) program_block -> declaration SEMICOLON program_block .

    $end            reduce using rule 2 (program_block -> declaration SEMICOLON program_block .)


state 42

    (77) integer -> NUMBER .

    RBRACKET        reduce using rule 77 (integer -> NUMBER .)


state 43

    (40) vector -> LBRACKET integer . RBRACKET

    RBRACKET        shift and go to state 68


state 44

    (41) vector -> LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 69


state 45

    (42) vector -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 70


state 46

    (39) id -> ID vector vector .

    COMMA           reduce using rule 39 (id -> ID vector vector .)
    EQUAL           reduce using rule 39 (id -> ID vector vector .)
    SEMICOLON       reduce using rule 39 (id -> ID vector vector .)
    RPAREN          reduce using rule 39 (id -> ID vector vector .)
    TIMES           reduce using rule 39 (id -> ID vector vector .)
    DIVIDE          reduce using rule 39 (id -> ID vector vector .)
    MOD             reduce using rule 39 (id -> ID vector vector .)
    AND             reduce using rule 39 (id -> ID vector vector .)
    OR              reduce using rule 39 (id -> ID vector vector .)
    PLUS            reduce using rule 39 (id -> ID vector vector .)
    MINUS           reduce using rule 39 (id -> ID vector vector .)
    LESS_THAN       reduce using rule 39 (id -> ID vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 39 (id -> ID vector vector .)
    EQUAL_THAN      reduce using rule 39 (id -> ID vector vector .)
    DIFFERENT_THAN  reduce using rule 39 (id -> ID vector vector .)
    GREATER_THAN    reduce using rule 39 (id -> ID vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 39 (id -> ID vector vector .)
    OUTSTREAM       reduce using rule 39 (id -> ID vector vector .)
    INSTREAM        reduce using rule 39 (id -> ID vector vector .)


state 47

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 72

state 48

    (6) normal_function -> FUNCTION ID LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 73

state 49

    (62) simple_expression -> simple_expression PLUS . term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 74
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 50

    (61) simple_expression -> simple_expression OR . term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 75
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 51

    (63) simple_expression -> simple_expression MINUS . term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 76
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 52

    (60) simple_expression -> MINUS term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 60 (simple_expression -> MINUS term .)
    PLUS            reduce using rule 60 (simple_expression -> MINUS term .)
    MINUS           reduce using rule 60 (simple_expression -> MINUS term .)
    LESS_THAN       reduce using rule 60 (simple_expression -> MINUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 60 (simple_expression -> MINUS term .)
    EQUAL_THAN      reduce using rule 60 (simple_expression -> MINUS term .)
    DIFFERENT_THAN  reduce using rule 60 (simple_expression -> MINUS term .)
    GREATER_THAN    reduce using rule 60 (simple_expression -> MINUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 60 (simple_expression -> MINUS term .)
    SEMICOLON       reduce using rule 60 (simple_expression -> MINUS term .)
    RPAREN          reduce using rule 60 (simple_expression -> MINUS term .)
    OUTSTREAM       reduce using rule 60 (simple_expression -> MINUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 53

    (59) simple_expression -> PLUS term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 59 (simple_expression -> PLUS term .)
    PLUS            reduce using rule 59 (simple_expression -> PLUS term .)
    MINUS           reduce using rule 59 (simple_expression -> PLUS term .)
    LESS_THAN       reduce using rule 59 (simple_expression -> PLUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 59 (simple_expression -> PLUS term .)
    EQUAL_THAN      reduce using rule 59 (simple_expression -> PLUS term .)
    DIFFERENT_THAN  reduce using rule 59 (simple_expression -> PLUS term .)
    GREATER_THAN    reduce using rule 59 (simple_expression -> PLUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 59 (simple_expression -> PLUS term .)
    SEMICOLON       reduce using rule 59 (simple_expression -> PLUS term .)
    RPAREN          reduce using rule 59 (simple_expression -> PLUS term .)
    OUTSTREAM       reduce using rule 59 (simple_expression -> PLUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 54

    (76) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 77


state 55

    (68) term -> term AND . factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 78
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 56

    (66) term -> term DIVIDE . factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 79
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 57

    (65) term -> term TIMES . factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 80
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 58

    (67) term -> term MOD . factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 81
    integer                        shift and go to state 36
    id                             shift and go to state 27

state 59

    (73) factor -> LPAREN expression . RPAREN
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    RPAREN          shift and go to state 82
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 60

    (43) function_call -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 83


state 61

    (72) factor -> NOT factor .

    TIMES           reduce using rule 72 (factor -> NOT factor .)
    DIVIDE          reduce using rule 72 (factor -> NOT factor .)
    MOD             reduce using rule 72 (factor -> NOT factor .)
    AND             reduce using rule 72 (factor -> NOT factor .)
    OR              reduce using rule 72 (factor -> NOT factor .)
    PLUS            reduce using rule 72 (factor -> NOT factor .)
    MINUS           reduce using rule 72 (factor -> NOT factor .)
    RPAREN          reduce using rule 72 (factor -> NOT factor .)
    LESS_THAN       reduce using rule 72 (factor -> NOT factor .)
    LESS_OR_EQUAL_THAN reduce using rule 72 (factor -> NOT factor .)
    EQUAL_THAN      reduce using rule 72 (factor -> NOT factor .)
    DIFFERENT_THAN  reduce using rule 72 (factor -> NOT factor .)
    GREATER_THAN    reduce using rule 72 (factor -> NOT factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 72 (factor -> NOT factor .)
    SEMICOLON       reduce using rule 72 (factor -> NOT factor .)
    OUTSTREAM       reduce using rule 72 (factor -> NOT factor .)


state 62

    (57) expression -> expression GREATER_OR_EQUAL_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 84
    id                             shift and go to state 27

state 63

    (54) expression -> expression EQUAL_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 85
    id                             shift and go to state 27

state 64

    (55) expression -> expression DIFFERENT_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 86
    id                             shift and go to state 27

state 65

    (56) expression -> expression GREATER_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 87
    id                             shift and go to state 27

state 66

    (53) expression -> expression LESS_OR_EQUAL_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 88
    id                             shift and go to state 27

state 67

    (52) expression -> expression LESS_THAN . simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 89
    id                             shift and go to state 27

state 68

    (40) vector -> LBRACKET integer RBRACKET .

    COMMA           reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    EQUAL           reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    SEMICOLON       reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    TIMES           reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    DIVIDE          reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    MOD             reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    AND             reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    OR              reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    PLUS            reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    MINUS           reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    LESS_THAN       reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    EQUAL_THAN      reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    DIFFERENT_THAN  reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    GREATER_THAN    reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    RPAREN          reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    OUTSTREAM       reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    INSTREAM        reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)
    LBRACKET        reduce using rule 40 (vector -> LBRACKET integer RBRACKET .)


state 69

    (41) vector -> LBRACKET ID RBRACKET .

    COMMA           reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    EQUAL           reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    SEMICOLON       reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    MOD             reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    AND             reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    OR              reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    LESS_THAN       reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    EQUAL_THAN      reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    DIFFERENT_THAN  reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    GREATER_THAN    reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    OUTSTREAM       reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    INSTREAM        reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)
    LBRACKET        reduce using rule 41 (vector -> LBRACKET ID RBRACKET .)


state 70

    (42) vector -> LBRACKET empty RBRACKET .

    COMMA           reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    EQUAL           reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    SEMICOLON       reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    TIMES           reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    DIVIDE          reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    MOD             reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    AND             reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    OR              reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    PLUS            reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    MINUS           reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    LESS_THAN       reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    EQUAL_THAN      reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    DIFFERENT_THAN  reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    GREATER_THAN    reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    RPAREN          reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    OUTSTREAM       reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    INSTREAM        reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)
    LBRACKET        reduce using rule 42 (vector -> LBRACKET empty RBRACKET .)


state 71

    (8) function_block -> LBRACE . instruction RBRACE
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (78) empty -> .
    (43) function_call -> . ID LPAREN RPAREN
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (31) unary_operation -> . ID PLUS PLUS
    (32) unary_operation -> . ID MINUS MINUS
    (33) unary_operation -> . PLUS PLUS ID
    (34) unary_operation -> . MINUS MINUS ID
    (44) if_sentence -> . IF LPAREN expression RPAREN function_block empty
    (45) if_sentence -> . IF LPAREN expression RPAREN function_block ELSE function_block
    (46) while_sentence -> . WHILE LPAREN expression RPAREN function_block
    (47) do_while_sentence -> . DO function_block WHILE LPAREN expression RPAREN SEMICOLON
    (48) for_sentence -> . FOR LPAREN for_expression RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 106
    COUT            shift and go to state 91
    CIN             shift and go to state 105
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    IF              shift and go to state 107
    WHILE           shift and go to state 94
    DO              shift and go to state 90
    FOR             shift and go to state 104

    assignation                    shift and go to state 108
    do_while_sentence              shift and go to state 92
    if_sentence                    shift and go to state 110
    variables                      shift and go to state 4
    instruction                    shift and go to state 109
    function_call                  shift and go to state 93
    proposition                    shift and go to state 95
    id                             shift and go to state 6
    while_sentence                 shift and go to state 96
    print                          shift and go to state 100
    input                          shift and go to state 101
    unary_operation                shift and go to state 102
    for_sentence                   shift and go to state 98
    empty                          shift and go to state 103

state 72

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN function_block .

    $end            reduce using rule 7 (main_function -> FUNCTION MAIN LPAREN RPAREN function_block .)


state 73

    (6) normal_function -> FUNCTION ID LPAREN RPAREN function_block .

    VAR             reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    FUNCTION        reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    ID              reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)


state 74

    (62) simple_expression -> simple_expression PLUS term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    PLUS            reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    MINUS           reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    LESS_THAN       reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    EQUAL_THAN      reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    DIFFERENT_THAN  reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    GREATER_THAN    reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    SEMICOLON       reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    RPAREN          reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    OUTSTREAM       reduce using rule 62 (simple_expression -> simple_expression PLUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 75

    (61) simple_expression -> simple_expression OR term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 61 (simple_expression -> simple_expression OR term .)
    PLUS            reduce using rule 61 (simple_expression -> simple_expression OR term .)
    MINUS           reduce using rule 61 (simple_expression -> simple_expression OR term .)
    LESS_THAN       reduce using rule 61 (simple_expression -> simple_expression OR term .)
    LESS_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> simple_expression OR term .)
    EQUAL_THAN      reduce using rule 61 (simple_expression -> simple_expression OR term .)
    DIFFERENT_THAN  reduce using rule 61 (simple_expression -> simple_expression OR term .)
    GREATER_THAN    reduce using rule 61 (simple_expression -> simple_expression OR term .)
    GREATER_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> simple_expression OR term .)
    SEMICOLON       reduce using rule 61 (simple_expression -> simple_expression OR term .)
    RPAREN          reduce using rule 61 (simple_expression -> simple_expression OR term .)
    OUTSTREAM       reduce using rule 61 (simple_expression -> simple_expression OR term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 76

    (63) simple_expression -> simple_expression MINUS term .
    (65) term -> term . TIMES factor
    (66) term -> term . DIVIDE factor
    (67) term -> term . MOD factor
    (68) term -> term . AND factor

    OR              reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    PLUS            reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    MINUS           reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    LESS_THAN       reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    EQUAL_THAN      reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    DIFFERENT_THAN  reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    GREATER_THAN    reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    SEMICOLON       reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    RPAREN          reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    OUTSTREAM       reduce using rule 63 (simple_expression -> simple_expression MINUS term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 58
    AND             shift and go to state 55


state 77

    (76) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    SEMICOLON       reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 76 (real -> NUMBER DOT NUMBER .)
    OUTSTREAM       reduce using rule 76 (real -> NUMBER DOT NUMBER .)


state 78

    (68) term -> term AND factor .

    TIMES           reduce using rule 68 (term -> term AND factor .)
    DIVIDE          reduce using rule 68 (term -> term AND factor .)
    MOD             reduce using rule 68 (term -> term AND factor .)
    AND             reduce using rule 68 (term -> term AND factor .)
    OR              reduce using rule 68 (term -> term AND factor .)
    PLUS            reduce using rule 68 (term -> term AND factor .)
    MINUS           reduce using rule 68 (term -> term AND factor .)
    LESS_THAN       reduce using rule 68 (term -> term AND factor .)
    LESS_OR_EQUAL_THAN reduce using rule 68 (term -> term AND factor .)
    EQUAL_THAN      reduce using rule 68 (term -> term AND factor .)
    DIFFERENT_THAN  reduce using rule 68 (term -> term AND factor .)
    GREATER_THAN    reduce using rule 68 (term -> term AND factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 68 (term -> term AND factor .)
    SEMICOLON       reduce using rule 68 (term -> term AND factor .)
    RPAREN          reduce using rule 68 (term -> term AND factor .)
    OUTSTREAM       reduce using rule 68 (term -> term AND factor .)


state 79

    (66) term -> term DIVIDE factor .

    TIMES           reduce using rule 66 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 66 (term -> term DIVIDE factor .)
    MOD             reduce using rule 66 (term -> term DIVIDE factor .)
    AND             reduce using rule 66 (term -> term DIVIDE factor .)
    OR              reduce using rule 66 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 66 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 66 (term -> term DIVIDE factor .)
    LESS_THAN       reduce using rule 66 (term -> term DIVIDE factor .)
    LESS_OR_EQUAL_THAN reduce using rule 66 (term -> term DIVIDE factor .)
    EQUAL_THAN      reduce using rule 66 (term -> term DIVIDE factor .)
    DIFFERENT_THAN  reduce using rule 66 (term -> term DIVIDE factor .)
    GREATER_THAN    reduce using rule 66 (term -> term DIVIDE factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 66 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 66 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 66 (term -> term DIVIDE factor .)
    OUTSTREAM       reduce using rule 66 (term -> term DIVIDE factor .)


state 80

    (65) term -> term TIMES factor .

    TIMES           reduce using rule 65 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 65 (term -> term TIMES factor .)
    MOD             reduce using rule 65 (term -> term TIMES factor .)
    AND             reduce using rule 65 (term -> term TIMES factor .)
    OR              reduce using rule 65 (term -> term TIMES factor .)
    PLUS            reduce using rule 65 (term -> term TIMES factor .)
    MINUS           reduce using rule 65 (term -> term TIMES factor .)
    LESS_THAN       reduce using rule 65 (term -> term TIMES factor .)
    LESS_OR_EQUAL_THAN reduce using rule 65 (term -> term TIMES factor .)
    EQUAL_THAN      reduce using rule 65 (term -> term TIMES factor .)
    DIFFERENT_THAN  reduce using rule 65 (term -> term TIMES factor .)
    GREATER_THAN    reduce using rule 65 (term -> term TIMES factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 65 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 65 (term -> term TIMES factor .)
    RPAREN          reduce using rule 65 (term -> term TIMES factor .)
    OUTSTREAM       reduce using rule 65 (term -> term TIMES factor .)


state 81

    (67) term -> term MOD factor .

    TIMES           reduce using rule 67 (term -> term MOD factor .)
    DIVIDE          reduce using rule 67 (term -> term MOD factor .)
    MOD             reduce using rule 67 (term -> term MOD factor .)
    AND             reduce using rule 67 (term -> term MOD factor .)
    OR              reduce using rule 67 (term -> term MOD factor .)
    PLUS            reduce using rule 67 (term -> term MOD factor .)
    MINUS           reduce using rule 67 (term -> term MOD factor .)
    LESS_THAN       reduce using rule 67 (term -> term MOD factor .)
    LESS_OR_EQUAL_THAN reduce using rule 67 (term -> term MOD factor .)
    EQUAL_THAN      reduce using rule 67 (term -> term MOD factor .)
    DIFFERENT_THAN  reduce using rule 67 (term -> term MOD factor .)
    GREATER_THAN    reduce using rule 67 (term -> term MOD factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 67 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 67 (term -> term MOD factor .)
    RPAREN          reduce using rule 67 (term -> term MOD factor .)
    OUTSTREAM       reduce using rule 67 (term -> term MOD factor .)


state 82

    (73) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    LESS_OR_EQUAL_THAN reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    EQUAL_THAN      reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    DIFFERENT_THAN  reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    GREATER_OR_EQUAL_THAN reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 73 (factor -> LPAREN expression RPAREN .)
    OUTSTREAM       reduce using rule 73 (factor -> LPAREN expression RPAREN .)


state 83

    (43) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    MOD             reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    EQUAL_THAN      reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    DIFFERENT_THAN  reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (function_call -> ID LPAREN RPAREN .)
    OUTSTREAM       reduce using rule 43 (function_call -> ID LPAREN RPAREN .)


state 84

    (57) expression -> expression GREATER_OR_EQUAL_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    LESS_THAN       reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    OUTSTREAM       reduce using rule 57 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 85

    (54) expression -> expression EQUAL_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    LESS_THAN       reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    OUTSTREAM       reduce using rule 54 (expression -> expression EQUAL_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 86

    (55) expression -> expression DIFFERENT_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    LESS_THAN       reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    GREATER_THAN    reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    OUTSTREAM       reduce using rule 55 (expression -> expression DIFFERENT_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 87

    (56) expression -> expression GREATER_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    LESS_THAN       reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    GREATER_THAN    reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    OUTSTREAM       reduce using rule 56 (expression -> expression GREATER_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 88

    (53) expression -> expression LESS_OR_EQUAL_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    LESS_THAN       reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    OUTSTREAM       reduce using rule 53 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 89

    (52) expression -> expression LESS_THAN simple_expression .
    (61) simple_expression -> simple_expression . OR term
    (62) simple_expression -> simple_expression . PLUS term
    (63) simple_expression -> simple_expression . MINUS term

    RPAREN          reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    LESS_THAN       reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    GREATER_THAN    reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    OUTSTREAM       reduce using rule 52 (expression -> expression LESS_THAN simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 51


state 90

    (47) do_while_sentence -> DO . function_block WHILE LPAREN expression RPAREN SEMICOLON
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 111

state 91

    (20) print -> COUT . output_expression
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    OUTSTREAM       shift and go to state 112

    output_expression              shift and go to state 113

state 92

    (18) proposition -> do_while_sentence .

    ID              reduce using rule 18 (proposition -> do_while_sentence .)
    COUT            reduce using rule 18 (proposition -> do_while_sentence .)
    CIN             reduce using rule 18 (proposition -> do_while_sentence .)
    PLUS            reduce using rule 18 (proposition -> do_while_sentence .)
    MINUS           reduce using rule 18 (proposition -> do_while_sentence .)
    IF              reduce using rule 18 (proposition -> do_while_sentence .)
    WHILE           reduce using rule 18 (proposition -> do_while_sentence .)
    DO              reduce using rule 18 (proposition -> do_while_sentence .)
    FOR             reduce using rule 18 (proposition -> do_while_sentence .)
    RBRACE          reduce using rule 18 (proposition -> do_while_sentence .)


state 93

    (11) proposition -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 114


state 94

    (46) while_sentence -> WHILE . LPAREN expression RPAREN function_block

    LPAREN          shift and go to state 115


state 95

    (9) instruction -> proposition . instruction
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (78) empty -> .
    (43) function_call -> . ID LPAREN RPAREN
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (31) unary_operation -> . ID PLUS PLUS
    (32) unary_operation -> . ID MINUS MINUS
    (33) unary_operation -> . PLUS PLUS ID
    (34) unary_operation -> . MINUS MINUS ID
    (44) if_sentence -> . IF LPAREN expression RPAREN function_block empty
    (45) if_sentence -> . IF LPAREN expression RPAREN function_block ELSE function_block
    (46) while_sentence -> . WHILE LPAREN expression RPAREN function_block
    (47) do_while_sentence -> . DO function_block WHILE LPAREN expression RPAREN SEMICOLON
    (48) for_sentence -> . FOR LPAREN for_expression RPAREN function_block
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 106
    COUT            shift and go to state 91
    CIN             shift and go to state 105
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    IF              shift and go to state 107
    WHILE           shift and go to state 94
    DO              shift and go to state 90
    FOR             shift and go to state 104

    assignation                    shift and go to state 108
    do_while_sentence              shift and go to state 92
    if_sentence                    shift and go to state 110
    variables                      shift and go to state 4
    instruction                    shift and go to state 116
    function_call                  shift and go to state 93
    proposition                    shift and go to state 95
    id                             shift and go to state 6
    while_sentence                 shift and go to state 96
    print                          shift and go to state 100
    input                          shift and go to state 101
    unary_operation                shift and go to state 102
    for_sentence                   shift and go to state 98
    empty                          shift and go to state 103

state 96

    (17) proposition -> while_sentence .

    ID              reduce using rule 17 (proposition -> while_sentence .)
    COUT            reduce using rule 17 (proposition -> while_sentence .)
    CIN             reduce using rule 17 (proposition -> while_sentence .)
    PLUS            reduce using rule 17 (proposition -> while_sentence .)
    MINUS           reduce using rule 17 (proposition -> while_sentence .)
    IF              reduce using rule 17 (proposition -> while_sentence .)
    WHILE           reduce using rule 17 (proposition -> while_sentence .)
    DO              reduce using rule 17 (proposition -> while_sentence .)
    FOR             reduce using rule 17 (proposition -> while_sentence .)
    RBRACE          reduce using rule 17 (proposition -> while_sentence .)


state 97

    (34) unary_operation -> MINUS . MINUS ID

    MINUS           shift and go to state 117


state 98

    (19) proposition -> for_sentence .

    ID              reduce using rule 19 (proposition -> for_sentence .)
    COUT            reduce using rule 19 (proposition -> for_sentence .)
    CIN             reduce using rule 19 (proposition -> for_sentence .)
    PLUS            reduce using rule 19 (proposition -> for_sentence .)
    MINUS           reduce using rule 19 (proposition -> for_sentence .)
    IF              reduce using rule 19 (proposition -> for_sentence .)
    WHILE           reduce using rule 19 (proposition -> for_sentence .)
    DO              reduce using rule 19 (proposition -> for_sentence .)
    FOR             reduce using rule 19 (proposition -> for_sentence .)
    RBRACE          reduce using rule 19 (proposition -> for_sentence .)


state 99

    (33) unary_operation -> PLUS . PLUS ID

    PLUS            shift and go to state 118


state 100

    (13) proposition -> print . SEMICOLON

    SEMICOLON       shift and go to state 119


state 101

    (14) proposition -> input . SEMICOLON

    SEMICOLON       shift and go to state 120


state 102

    (15) proposition -> unary_operation . SEMICOLON

    SEMICOLON       shift and go to state 121


state 103

    (10) instruction -> empty .

    RBRACE          reduce using rule 10 (instruction -> empty .)


state 104

    (48) for_sentence -> FOR . LPAREN for_expression RPAREN function_block

    LPAREN          shift and go to state 122


state 105

    (25) input -> CIN . input_expression
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    INSTREAM        shift and go to state 123

    input_expression               shift and go to state 124

state 106

    (43) function_call -> ID . LPAREN RPAREN
    (31) unary_operation -> ID . PLUS PLUS
    (32) unary_operation -> ID . MINUS MINUS
    (37) id -> ID .
    (38) id -> ID . vector
    (39) id -> ID . vector vector
    (40) vector -> . LBRACKET integer RBRACKET
    (41) vector -> . LBRACKET ID RBRACKET
    (42) vector -> . LBRACKET empty RBRACKET

    LPAREN          shift and go to state 60
    PLUS            shift and go to state 126
    MINUS           shift and go to state 125
    COMMA           reduce using rule 37 (id -> ID .)
    EQUAL           reduce using rule 37 (id -> ID .)
    SEMICOLON       reduce using rule 37 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 107

    (44) if_sentence -> IF . LPAREN expression RPAREN function_block empty
    (45) if_sentence -> IF . LPAREN expression RPAREN function_block ELSE function_block

    LPAREN          shift and go to state 127


state 108

    (12) proposition -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 128


state 109

    (8) function_block -> LBRACE instruction . RBRACE

    RBRACE          shift and go to state 129


state 110

    (16) proposition -> if_sentence .

    ID              reduce using rule 16 (proposition -> if_sentence .)
    COUT            reduce using rule 16 (proposition -> if_sentence .)
    CIN             reduce using rule 16 (proposition -> if_sentence .)
    PLUS            reduce using rule 16 (proposition -> if_sentence .)
    MINUS           reduce using rule 16 (proposition -> if_sentence .)
    IF              reduce using rule 16 (proposition -> if_sentence .)
    WHILE           reduce using rule 16 (proposition -> if_sentence .)
    DO              reduce using rule 16 (proposition -> if_sentence .)
    FOR             reduce using rule 16 (proposition -> if_sentence .)
    RBRACE          reduce using rule 16 (proposition -> if_sentence .)


state 111

    (47) do_while_sentence -> DO function_block . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 130


state 112

    (21) output_expression -> OUTSTREAM . expression output_expression
    (22) output_expression -> OUTSTREAM . expression
    (23) output_expression -> OUTSTREAM . TEXT output_expression
    (24) output_expression -> OUTSTREAM . TEXT
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    TEXT            shift and go to state 131
    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 132
    id                             shift and go to state 27

state 113

    (20) print -> COUT output_expression .

    SEMICOLON       reduce using rule 20 (print -> COUT output_expression .)


state 114

    (11) proposition -> function_call SEMICOLON .

    ID              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    COUT            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    CIN             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    PLUS            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    MINUS           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    IF              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    WHILE           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    DO              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    FOR             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    RBRACE          reduce using rule 11 (proposition -> function_call SEMICOLON .)


state 115

    (46) while_sentence -> WHILE LPAREN . expression RPAREN function_block
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 133
    id                             shift and go to state 27

state 116

    (9) instruction -> proposition instruction .

    RBRACE          reduce using rule 9 (instruction -> proposition instruction .)


state 117

    (34) unary_operation -> MINUS MINUS . ID

    ID              shift and go to state 134


state 118

    (33) unary_operation -> PLUS PLUS . ID

    ID              shift and go to state 135


state 119

    (13) proposition -> print SEMICOLON .

    ID              reduce using rule 13 (proposition -> print SEMICOLON .)
    COUT            reduce using rule 13 (proposition -> print SEMICOLON .)
    CIN             reduce using rule 13 (proposition -> print SEMICOLON .)
    PLUS            reduce using rule 13 (proposition -> print SEMICOLON .)
    MINUS           reduce using rule 13 (proposition -> print SEMICOLON .)
    IF              reduce using rule 13 (proposition -> print SEMICOLON .)
    WHILE           reduce using rule 13 (proposition -> print SEMICOLON .)
    DO              reduce using rule 13 (proposition -> print SEMICOLON .)
    FOR             reduce using rule 13 (proposition -> print SEMICOLON .)
    RBRACE          reduce using rule 13 (proposition -> print SEMICOLON .)


state 120

    (14) proposition -> input SEMICOLON .

    ID              reduce using rule 14 (proposition -> input SEMICOLON .)
    COUT            reduce using rule 14 (proposition -> input SEMICOLON .)
    CIN             reduce using rule 14 (proposition -> input SEMICOLON .)
    PLUS            reduce using rule 14 (proposition -> input SEMICOLON .)
    MINUS           reduce using rule 14 (proposition -> input SEMICOLON .)
    IF              reduce using rule 14 (proposition -> input SEMICOLON .)
    WHILE           reduce using rule 14 (proposition -> input SEMICOLON .)
    DO              reduce using rule 14 (proposition -> input SEMICOLON .)
    FOR             reduce using rule 14 (proposition -> input SEMICOLON .)
    RBRACE          reduce using rule 14 (proposition -> input SEMICOLON .)


state 121

    (15) proposition -> unary_operation SEMICOLON .

    ID              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    COUT            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    CIN             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    PLUS            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    MINUS           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    IF              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    WHILE           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    DO              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    FOR             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    RBRACE          reduce using rule 15 (proposition -> unary_operation SEMICOLON .)


state 122

    (48) for_sentence -> FOR LPAREN . for_expression RPAREN function_block
    (49) for_expression -> . declaration SEMICOLON expression SEMICOLON assignation
    (50) for_expression -> . declaration SEMICOLON expression SEMICOLON unary_operation
    (28) declaration -> . VAR assignation

    VAR             shift and go to state 10

    for_expression                 shift and go to state 136
    declaration                    shift and go to state 137

state 123

    (26) input_expression -> INSTREAM . id input_expression
    (27) input_expression -> INSTREAM . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    ID              shift and go to state 11

    id                             shift and go to state 138

state 124

    (25) input -> CIN input_expression .

    SEMICOLON       reduce using rule 25 (input -> CIN input_expression .)


state 125

    (32) unary_operation -> ID MINUS . MINUS

    MINUS           shift and go to state 139


state 126

    (31) unary_operation -> ID PLUS . PLUS

    PLUS            shift and go to state 140


state 127

    (44) if_sentence -> IF LPAREN . expression RPAREN function_block empty
    (45) if_sentence -> IF LPAREN . expression RPAREN function_block ELSE function_block
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 141
    id                             shift and go to state 27

state 128

    (12) proposition -> assignation SEMICOLON .

    ID              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    COUT            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    CIN             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    PLUS            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    MINUS           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    IF              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    WHILE           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    DO              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    FOR             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    RBRACE          reduce using rule 12 (proposition -> assignation SEMICOLON .)


state 129

    (8) function_block -> LBRACE instruction RBRACE .

    WHILE           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    ID              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    COUT            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    CIN             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    PLUS            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    MINUS           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    IF              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    DO              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FOR             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    RBRACE          reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    ELSE            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    $end            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    VAR             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FUNCTION        reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)


state 130

    (47) do_while_sentence -> DO function_block WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 142


state 131

    (23) output_expression -> OUTSTREAM TEXT . output_expression
    (24) output_expression -> OUTSTREAM TEXT .
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 24 (output_expression -> OUTSTREAM TEXT .)
    OUTSTREAM       shift and go to state 112

    output_expression              shift and go to state 143

state 132

    (21) output_expression -> OUTSTREAM expression . output_expression
    (22) output_expression -> OUTSTREAM expression .
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 22 (output_expression -> OUTSTREAM expression .)
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62
    OUTSTREAM       shift and go to state 112

    output_expression              shift and go to state 144

state 133

    (46) while_sentence -> WHILE LPAREN expression . RPAREN function_block
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    RPAREN          shift and go to state 145
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 134

    (34) unary_operation -> MINUS MINUS ID .

    SEMICOLON       reduce using rule 34 (unary_operation -> MINUS MINUS ID .)
    RPAREN          reduce using rule 34 (unary_operation -> MINUS MINUS ID .)


state 135

    (33) unary_operation -> PLUS PLUS ID .

    SEMICOLON       reduce using rule 33 (unary_operation -> PLUS PLUS ID .)
    RPAREN          reduce using rule 33 (unary_operation -> PLUS PLUS ID .)


state 136

    (48) for_sentence -> FOR LPAREN for_expression . RPAREN function_block

    RPAREN          shift and go to state 146


state 137

    (49) for_expression -> declaration . SEMICOLON expression SEMICOLON assignation
    (50) for_expression -> declaration . SEMICOLON expression SEMICOLON unary_operation

    SEMICOLON       shift and go to state 147


state 138

    (26) input_expression -> INSTREAM id . input_expression
    (27) input_expression -> INSTREAM id .
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    SEMICOLON       reduce using rule 27 (input_expression -> INSTREAM id .)
    INSTREAM        shift and go to state 123

    input_expression               shift and go to state 148

state 139

    (32) unary_operation -> ID MINUS MINUS .

    SEMICOLON       reduce using rule 32 (unary_operation -> ID MINUS MINUS .)
    RPAREN          reduce using rule 32 (unary_operation -> ID MINUS MINUS .)


state 140

    (31) unary_operation -> ID PLUS PLUS .

    SEMICOLON       reduce using rule 31 (unary_operation -> ID PLUS PLUS .)
    RPAREN          reduce using rule 31 (unary_operation -> ID PLUS PLUS .)


state 141

    (44) if_sentence -> IF LPAREN expression . RPAREN function_block empty
    (45) if_sentence -> IF LPAREN expression . RPAREN function_block ELSE function_block
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    RPAREN          shift and go to state 149
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 142

    (47) do_while_sentence -> DO function_block WHILE LPAREN . expression RPAREN SEMICOLON
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    factor                         shift and go to state 30
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    expression                     shift and go to state 150
    id                             shift and go to state 27

state 143

    (23) output_expression -> OUTSTREAM TEXT output_expression .

    SEMICOLON       reduce using rule 23 (output_expression -> OUTSTREAM TEXT output_expression .)


state 144

    (21) output_expression -> OUTSTREAM expression output_expression .

    SEMICOLON       reduce using rule 21 (output_expression -> OUTSTREAM expression output_expression .)


state 145

    (46) while_sentence -> WHILE LPAREN expression RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 151

state 146

    (48) for_sentence -> FOR LPAREN for_expression RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 152

state 147

    (49) for_expression -> declaration SEMICOLON . expression SEMICOLON assignation
    (50) for_expression -> declaration SEMICOLON . expression SEMICOLON unary_operation
    (51) expression -> . simple_expression
    (52) expression -> . expression LESS_THAN simple_expression
    (53) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> . expression EQUAL_THAN simple_expression
    (55) expression -> . expression DIFFERENT_THAN simple_expression
    (56) expression -> . expression GREATER_THAN simple_expression
    (57) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (58) simple_expression -> . term
    (59) simple_expression -> . PLUS term
    (60) simple_expression -> . MINUS term
    (61) simple_expression -> . simple_expression OR term
    (62) simple_expression -> . simple_expression PLUS term
    (63) simple_expression -> . simple_expression MINUS term
    (64) term -> . factor
    (65) term -> . term TIMES factor
    (66) term -> . term DIVIDE factor
    (67) term -> . term MOD factor
    (68) term -> . term AND factor
    (69) factor -> . id
    (70) factor -> . number
    (71) factor -> . function_call
    (72) factor -> . NOT factor
    (73) factor -> . LPAREN expression RPAREN
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector
    (74) number -> . real
    (75) number -> . integer
    (43) function_call -> . ID LPAREN RPAREN
    (76) real -> . NUMBER DOT NUMBER
    (77) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 28
    NOT             shift and go to state 38
    LPAREN          shift and go to state 35
    ID              shift and go to state 37
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 153
    factor                         shift and go to state 30
    number                         shift and go to state 34
    function_call                  shift and go to state 25
    integer                        shift and go to state 36
    simple_expression              shift and go to state 26
    id                             shift and go to state 27

state 148

    (26) input_expression -> INSTREAM id input_expression .

    SEMICOLON       reduce using rule 26 (input_expression -> INSTREAM id input_expression .)


state 149

    (44) if_sentence -> IF LPAREN expression RPAREN . function_block empty
    (45) if_sentence -> IF LPAREN expression RPAREN . function_block ELSE function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 154

state 150

    (47) do_while_sentence -> DO function_block WHILE LPAREN expression . RPAREN SEMICOLON
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    RPAREN          shift and go to state 155
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 151

    (46) while_sentence -> WHILE LPAREN expression RPAREN function_block .

    ID              reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    COUT            reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    CIN             reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    PLUS            reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    MINUS           reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    IF              reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    WHILE           reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    DO              reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    FOR             reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    RBRACE          reduce using rule 46 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)


state 152

    (48) for_sentence -> FOR LPAREN for_expression RPAREN function_block .

    ID              reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    COUT            reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    CIN             reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    PLUS            reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    MINUS           reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    IF              reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    WHILE           reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    DO              reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    FOR             reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    RBRACE          reduce using rule 48 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)


state 153

    (49) for_expression -> declaration SEMICOLON expression . SEMICOLON assignation
    (50) for_expression -> declaration SEMICOLON expression . SEMICOLON unary_operation
    (52) expression -> expression . LESS_THAN simple_expression
    (53) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (54) expression -> expression . EQUAL_THAN simple_expression
    (55) expression -> expression . DIFFERENT_THAN simple_expression
    (56) expression -> expression . GREATER_THAN simple_expression
    (57) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    SEMICOLON       shift and go to state 156
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 66
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 154

    (44) if_sentence -> IF LPAREN expression RPAREN function_block . empty
    (45) if_sentence -> IF LPAREN expression RPAREN function_block . ELSE function_block
    (78) empty -> .

    ELSE            shift and go to state 157
    ID              reduce using rule 78 (empty -> .)
    COUT            reduce using rule 78 (empty -> .)
    CIN             reduce using rule 78 (empty -> .)
    PLUS            reduce using rule 78 (empty -> .)
    MINUS           reduce using rule 78 (empty -> .)
    IF              reduce using rule 78 (empty -> .)
    WHILE           reduce using rule 78 (empty -> .)
    DO              reduce using rule 78 (empty -> .)
    FOR             reduce using rule 78 (empty -> .)
    RBRACE          reduce using rule 78 (empty -> .)

    empty                          shift and go to state 158

state 155

    (47) do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 156

    (49) for_expression -> declaration SEMICOLON expression SEMICOLON . assignation
    (50) for_expression -> declaration SEMICOLON expression SEMICOLON . unary_operation
    (29) assignation -> . variables EQUAL expression
    (30) assignation -> . variables
    (31) unary_operation -> . ID PLUS PLUS
    (32) unary_operation -> . ID MINUS MINUS
    (33) unary_operation -> . PLUS PLUS ID
    (34) unary_operation -> . MINUS MINUS ID
    (35) variables -> . id COMMA variables
    (36) variables -> . id
    (37) id -> . ID
    (38) id -> . ID vector
    (39) id -> . ID vector vector

    ID              shift and go to state 162
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97

    assignation                    shift and go to state 160
    variables                      shift and go to state 4
    unary_operation                shift and go to state 161
    id                             shift and go to state 6

state 157

    (45) if_sentence -> IF LPAREN expression RPAREN function_block ELSE . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 71

    function_block                 shift and go to state 163

state 158

    (44) if_sentence -> IF LPAREN expression RPAREN function_block empty .

    ID              reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    COUT            reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    CIN             reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    PLUS            reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    MINUS           reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    IF              reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    WHILE           reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    DO              reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    FOR             reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    RBRACE          reduce using rule 44 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)


state 159

    (47) do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 47 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)


state 160

    (49) for_expression -> declaration SEMICOLON expression SEMICOLON assignation .

    RPAREN          reduce using rule 49 (for_expression -> declaration SEMICOLON expression SEMICOLON assignation .)


state 161

    (50) for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation .

    RPAREN          reduce using rule 50 (for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation .)


state 162

    (31) unary_operation -> ID . PLUS PLUS
    (32) unary_operation -> ID . MINUS MINUS
    (37) id -> ID .
    (38) id -> ID . vector
    (39) id -> ID . vector vector
    (40) vector -> . LBRACKET integer RBRACKET
    (41) vector -> . LBRACKET ID RBRACKET
    (42) vector -> . LBRACKET empty RBRACKET

    PLUS            shift and go to state 126
    MINUS           shift and go to state 125
    COMMA           reduce using rule 37 (id -> ID .)
    EQUAL           reduce using rule 37 (id -> ID .)
    RPAREN          reduce using rule 37 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 163

    (45) if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .

    ID              reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    COUT            reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    CIN             reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    PLUS            reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    MINUS           reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    IF              reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    WHILE           reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    DO              reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    FOR             reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    RBRACE          reduce using rule 45 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)

