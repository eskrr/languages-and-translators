Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
Rule 7     main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
Rule 8     start_function_action -> <empty>
Rule 9     start_main_function_action -> <empty>
Rule 10    end_function_action -> <empty>
Rule 11    function_block -> LBRACE instruction RBRACE
Rule 12    instruction -> proposition instruction
Rule 13    instruction -> empty
Rule 14    proposition -> function_call SEMICOLON
Rule 15    proposition -> assignation SEMICOLON
Rule 16    proposition -> print SEMICOLON
Rule 17    proposition -> input SEMICOLON
Rule 18    proposition -> unary_operation SEMICOLON
Rule 19    proposition -> if_sentence
Rule 20    proposition -> while_sentence
Rule 21    proposition -> do_while_sentence
Rule 22    proposition -> for_sentence
Rule 23    print -> COUT output_expression
Rule 24    output_expression -> OUTSTREAM expression print_action output_expression
Rule 25    output_expression -> OUTSTREAM expression print_action
Rule 26    output_expression -> OUTSTREAM TEXT print_action output_expression
Rule 27    output_expression -> OUTSTREAM TEXT print_action
Rule 28    print_action -> <empty>
Rule 29    input -> CIN input_expression
Rule 30    input_expression -> INSTREAM id input_action input_expression
Rule 31    input_expression -> INSTREAM id input_action
Rule 32    input_action -> <empty>
Rule 33    declaration -> type variables
Rule 34    type -> INT
Rule 35    type -> FLOAT
Rule 36    assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
Rule 37    assignation_action_1 -> <empty>
Rule 38    assignation_action_2 -> <empty>
Rule 39    assignation_action_3 -> <empty>
Rule 40    unary_operation -> ID PLUS PLUS
Rule 41    unary_operation -> ID MINUS MINUS
Rule 42    unary_operation -> PLUS PLUS ID
Rule 43    unary_operation -> MINUS MINUS ID
Rule 44    variables -> id COMMA variables
Rule 45    variables -> id
Rule 46    id -> ID
Rule 47    id -> ID vector
Rule 48    id -> ID vector vector
Rule 49    vector -> LBRACKET integer RBRACKET
Rule 50    vector -> LBRACKET ID RBRACKET
Rule 51    vector -> LBRACKET empty RBRACKET
Rule 52    function_call -> ID function_call_action LPAREN RPAREN
Rule 53    function_call_action -> <empty>
Rule 54    if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
Rule 55    if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
Rule 56    if_action_1 -> <empty>
Rule 57    if_action_2 -> <empty>
Rule 58    if_action_3 -> <empty>
Rule 59    while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
Rule 60    while_action_1 -> <empty>
Rule 61    while_action_2 -> <empty>
Rule 62    while_action_3 -> <empty>
Rule 63    do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
Rule 64    do_while_action_1 -> <empty>
Rule 65    do_while_action_2 -> <empty>
Rule 66    for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4
Rule 67    for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
Rule 68    for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
Rule 69    for_action_1 -> <empty>
Rule 70    for_action_2 -> <empty>
Rule 71    for_action_3 -> <empty>
Rule 72    for_action_4 -> <empty>
Rule 73    expression -> simple_expression
Rule 74    expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9
Rule 75    expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 76    expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 77    expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
Rule 78    expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9
Rule 79    expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 80    simple_expression -> term expression_action_4
Rule 81    simple_expression -> PLUS term expression_action_4
Rule 82    simple_expression -> MINUS term expression_action_4
Rule 83    simple_expression -> simple_expression OR expression_action_2 term expression_action_4
Rule 84    simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4
Rule 85    simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4
Rule 86    term -> factor
Rule 87    term -> term TIMES expression_action_3 factor expression_action_5
Rule 88    term -> term DIVIDE expression_action_3 factor expression_action_5
Rule 89    term -> term MOD expression_action_3 factor expression_action_5
Rule 90    term -> term AND expression_action_3 factor expression_action_5
Rule 91    factor -> id expression_action_1
Rule 92    factor -> number expression_action_1
Rule 93    factor -> NOT id expression_action_1
Rule 94    factor -> expression_action_6 LPAREN expression RPAREN expression_action_7
Rule 95    number -> real
Rule 96    number -> integer
Rule 97    real -> NUMBER DOT NUMBER
Rule 98    integer -> NUMBER
Rule 99    empty -> <empty>
Rule 100   expression_action_1 -> <empty>
Rule 101   expression_action_2 -> <empty>
Rule 102   expression_action_3 -> <empty>
Rule 103   expression_action_4 -> <empty>
Rule 104   expression_action_5 -> <empty>
Rule 105   expression_action_6 -> <empty>
Rule 106   expression_action_7 -> <empty>
Rule 107   expression_action_8 -> <empty>
Rule 108   expression_action_9 -> <empty>

Terminals, with rules where they appear

AND                  : 90
CIN                  : 29
COMMA                : 44
COUT                 : 23
DIFFERENT_THAN       : 77
DIVIDE               : 88
DO                   : 63
DOT                  : 97
ELSE                 : 55
EQUAL                : 36
EQUAL_THAN           : 76
FLOAT                : 35
FOR                  : 66
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 79
GREATER_THAN         : 78
ID                   : 6 40 41 42 43 46 47 48 50 52
IF                   : 54 55
INSTREAM             : 30 31
INT                  : 34
LBRACE               : 11
LBRACKET             : 49 50 51
LESS_OR_EQUAL_THAN   : 75
LESS_THAN            : 74
LPAREN               : 6 7 52 54 55 59 63 66 94
MAIN                 : 7
MINUS                : 41 41 43 43 82 85
MOD                  : 89
NOT                  : 93
NUMBER               : 97 97 98
OR                   : 83
OUTSTREAM            : 24 25 26 27
PLUS                 : 40 40 42 42 81 84
RBRACE               : 11
RBRACKET             : 49 50 51
RPAREN               : 6 7 52 54 55 59 63 66 94
SEMICOLON            : 2 3 14 15 16 17 18 63 67 67 68 68
TEXT                 : 26 27
TIMES                : 87
WHILE                : 59 63
error                : 

Nonterminals, with rules where they appear

assignation          : 3 15 67 67 68
assignation_action_1 : 36
assignation_action_2 : 36
assignation_action_3 : 36
declaration          : 2
do_while_action_1    : 63
do_while_action_2    : 63
do_while_sentence    : 21
empty                : 13 51 54
end_function_action  : 6
expression           : 24 25 36 54 55 59 63 67 68 74 75 76 77 78 79 94
expression_action_1  : 91 92 93
expression_action_2  : 83 84 85
expression_action_3  : 87 88 89 90
expression_action_4  : 80 81 82 83 84 85
expression_action_5  : 87 88 89 90
expression_action_6  : 94
expression_action_7  : 94
expression_action_8  : 74 75 76 77 78 79
expression_action_9  : 74 75 76 77 78 79
factor               : 86 87 88 89 90
for_action_1         : 67 68
for_action_2         : 67 68
for_action_3         : 67 68
for_action_4         : 66
for_expression       : 66
for_sentence         : 22
function_block       : 6 7 54 55 55 59 63 66
function_call        : 14
function_call_action : 52
id                   : 30 31 36 44 45 91 93
if_action_1          : 54 55
if_action_2          : 54 55
if_action_3          : 55
if_sentence          : 19
input                : 17
input_action         : 30 31
input_expression     : 29 30
instruction          : 11 12
integer              : 49 96
main_function        : 5
normal_function      : 4
number               : 92
output_expression    : 23 24 26
print                : 16
print_action         : 24 25 26 27
program              : 0
program_block        : 1 2 3 4
proposition          : 12
real                 : 95
simple_expression    : 73 74 75 76 77 78 79 83 84 85
start_function_action : 6
start_main_function_action : 7
term                 : 80 81 82 83 84 85 87 88 89 90
type                 : 33
unary_operation      : 18 68
variables            : 33 44
vector               : 47 48 48
while_action_1       : 59
while_action_2       : 59
while_action_3       : 59
while_sentence       : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (33) declaration -> . type variables
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (34) type -> . INT
    (35) type -> . FLOAT
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 4
    program                        shift and go to state 3
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 1

    (5) program_block -> main_function .

    $end            reduce using rule 5 (program_block -> main_function .)


state 2

    (36) assignation -> id . assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (37) assignation_action_1 -> .

    EQUAL           reduce using rule 37 (assignation_action_1 -> .)

    assignation_action_1           shift and go to state 13

state 3

    (0) S' -> program .



state 4

    (1) program -> program_block .

    $end            reduce using rule 1 (program -> program_block .)


state 5

    (33) declaration -> type . variables
    (44) variables -> . id COMMA variables
    (45) variables -> . id
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 14
    id                             shift and go to state 15

state 6

    (6) normal_function -> FUNCTION . ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> FUNCTION . MAIN start_main_function_action LPAREN RPAREN function_block

    ID              shift and go to state 17
    MAIN            shift and go to state 16


state 7

    (2) program_block -> declaration . SEMICOLON program_block

    SEMICOLON       shift and go to state 18


state 8

    (46) id -> ID .
    (47) id -> ID . vector
    (48) id -> ID . vector vector
    (49) vector -> . LBRACKET integer RBRACKET
    (50) vector -> . LBRACKET ID RBRACKET
    (51) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 46 (id -> ID .)
    DIVIDE          reduce using rule 46 (id -> ID .)
    MOD             reduce using rule 46 (id -> ID .)
    AND             reduce using rule 46 (id -> ID .)
    OR              reduce using rule 46 (id -> ID .)
    PLUS            reduce using rule 46 (id -> ID .)
    MINUS           reduce using rule 46 (id -> ID .)
    LESS_THAN       reduce using rule 46 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 46 (id -> ID .)
    EQUAL_THAN      reduce using rule 46 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 46 (id -> ID .)
    GREATER_THAN    reduce using rule 46 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 46 (id -> ID .)
    SEMICOLON       reduce using rule 46 (id -> ID .)
    RPAREN          reduce using rule 46 (id -> ID .)
    OUTSTREAM       reduce using rule 46 (id -> ID .)
    INSTREAM        reduce using rule 46 (id -> ID .)
    EQUAL           reduce using rule 46 (id -> ID .)
    COMMA           reduce using rule 46 (id -> ID .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20

state 9

    (3) program_block -> assignation . SEMICOLON program_block

    SEMICOLON       shift and go to state 21


state 10

    (34) type -> INT .

    ID              reduce using rule 34 (type -> INT .)


state 11

    (4) program_block -> normal_function . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (33) declaration -> . type variables
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (34) type -> . INT
    (35) type -> . FLOAT
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 22
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 12

    (35) type -> FLOAT .

    ID              reduce using rule 35 (type -> FLOAT .)


state 13

    (36) assignation -> id assignation_action_1 . EQUAL assignation_action_2 expression assignation_action_3

    EQUAL           shift and go to state 23


state 14

    (33) declaration -> type variables .

    SEMICOLON       reduce using rule 33 (declaration -> type variables .)


state 15

    (44) variables -> id . COMMA variables
    (45) variables -> id .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 45 (variables -> id .)


state 16

    (7) main_function -> FUNCTION MAIN . start_main_function_action LPAREN RPAREN function_block
    (9) start_main_function_action -> .

    LPAREN          reduce using rule 9 (start_main_function_action -> .)

    start_main_function_action     shift and go to state 25

state 17

    (6) normal_function -> FUNCTION ID . start_function_action LPAREN RPAREN function_block end_function_action
    (8) start_function_action -> .

    LPAREN          reduce using rule 8 (start_function_action -> .)

    start_function_action          shift and go to state 26

state 18

    (2) program_block -> declaration SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (33) declaration -> . type variables
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (34) type -> . INT
    (35) type -> . FLOAT
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    declaration                    shift and go to state 7
    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 27
    type                           shift and go to state 5
    id                             shift and go to state 2

state 19

    (49) vector -> LBRACKET . integer RBRACKET
    (50) vector -> LBRACKET . ID RBRACKET
    (51) vector -> LBRACKET . empty RBRACKET
    (98) integer -> . NUMBER
    (99) empty -> .

    ID              shift and go to state 30
    NUMBER          shift and go to state 28
    RBRACKET        reduce using rule 99 (empty -> .)

    integer                        shift and go to state 29
    empty                          shift and go to state 31

state 20

    (47) id -> ID vector .
    (48) id -> ID vector . vector
    (49) vector -> . LBRACKET integer RBRACKET
    (50) vector -> . LBRACKET ID RBRACKET
    (51) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 47 (id -> ID vector .)
    DIVIDE          reduce using rule 47 (id -> ID vector .)
    MOD             reduce using rule 47 (id -> ID vector .)
    AND             reduce using rule 47 (id -> ID vector .)
    OR              reduce using rule 47 (id -> ID vector .)
    PLUS            reduce using rule 47 (id -> ID vector .)
    MINUS           reduce using rule 47 (id -> ID vector .)
    LESS_THAN       reduce using rule 47 (id -> ID vector .)
    LESS_OR_EQUAL_THAN reduce using rule 47 (id -> ID vector .)
    EQUAL_THAN      reduce using rule 47 (id -> ID vector .)
    DIFFERENT_THAN  reduce using rule 47 (id -> ID vector .)
    GREATER_THAN    reduce using rule 47 (id -> ID vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 47 (id -> ID vector .)
    SEMICOLON       reduce using rule 47 (id -> ID vector .)
    RPAREN          reduce using rule 47 (id -> ID vector .)
    OUTSTREAM       reduce using rule 47 (id -> ID vector .)
    EQUAL           reduce using rule 47 (id -> ID vector .)
    INSTREAM        reduce using rule 47 (id -> ID vector .)
    COMMA           reduce using rule 47 (id -> ID vector .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 32

state 21

    (3) program_block -> assignation SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (33) declaration -> . type variables
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (34) type -> . INT
    (35) type -> . FLOAT
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 33
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 22

    (4) program_block -> normal_function program_block .

    $end            reduce using rule 4 (program_block -> normal_function program_block .)


state 23

    (36) assignation -> id assignation_action_1 EQUAL . assignation_action_2 expression assignation_action_3
    (38) assignation_action_2 -> .

    PLUS            reduce using rule 38 (assignation_action_2 -> .)
    MINUS           reduce using rule 38 (assignation_action_2 -> .)
    NOT             reduce using rule 38 (assignation_action_2 -> .)
    ID              reduce using rule 38 (assignation_action_2 -> .)
    NUMBER          reduce using rule 38 (assignation_action_2 -> .)
    LPAREN          reduce using rule 38 (assignation_action_2 -> .)

    assignation_action_2           shift and go to state 34

state 24

    (44) variables -> id COMMA . variables
    (44) variables -> . id COMMA variables
    (45) variables -> . id
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 35
    id                             shift and go to state 15

state 25

    (7) main_function -> FUNCTION MAIN start_main_function_action . LPAREN RPAREN function_block

    LPAREN          shift and go to state 36


state 26

    (6) normal_function -> FUNCTION ID start_function_action . LPAREN RPAREN function_block end_function_action

    LPAREN          shift and go to state 37


state 27

    (2) program_block -> declaration SEMICOLON program_block .

    $end            reduce using rule 2 (program_block -> declaration SEMICOLON program_block .)


state 28

    (98) integer -> NUMBER .

    RBRACKET        reduce using rule 98 (integer -> NUMBER .)


state 29

    (49) vector -> LBRACKET integer . RBRACKET

    RBRACKET        shift and go to state 38


state 30

    (50) vector -> LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 39


state 31

    (51) vector -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 40


state 32

    (48) id -> ID vector vector .

    TIMES           reduce using rule 48 (id -> ID vector vector .)
    DIVIDE          reduce using rule 48 (id -> ID vector vector .)
    MOD             reduce using rule 48 (id -> ID vector vector .)
    AND             reduce using rule 48 (id -> ID vector vector .)
    OR              reduce using rule 48 (id -> ID vector vector .)
    PLUS            reduce using rule 48 (id -> ID vector vector .)
    MINUS           reduce using rule 48 (id -> ID vector vector .)
    LESS_THAN       reduce using rule 48 (id -> ID vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 48 (id -> ID vector vector .)
    EQUAL_THAN      reduce using rule 48 (id -> ID vector vector .)
    DIFFERENT_THAN  reduce using rule 48 (id -> ID vector vector .)
    GREATER_THAN    reduce using rule 48 (id -> ID vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 48 (id -> ID vector vector .)
    SEMICOLON       reduce using rule 48 (id -> ID vector vector .)
    RPAREN          reduce using rule 48 (id -> ID vector vector .)
    OUTSTREAM       reduce using rule 48 (id -> ID vector vector .)
    EQUAL           reduce using rule 48 (id -> ID vector vector .)
    INSTREAM        reduce using rule 48 (id -> ID vector vector .)
    COMMA           reduce using rule 48 (id -> ID vector vector .)


state 33

    (3) program_block -> assignation SEMICOLON program_block .

    $end            reduce using rule 3 (program_block -> assignation SEMICOLON program_block .)


state 34

    (36) assignation -> id assignation_action_1 EQUAL assignation_action_2 . expression assignation_action_3
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    integer                        shift and go to state 41
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    simple_expression              shift and go to state 48
    expression                     shift and go to state 52
    id                             shift and go to state 44

state 35

    (44) variables -> id COMMA variables .

    SEMICOLON       reduce using rule 44 (variables -> id COMMA variables .)


state 36

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN . RPAREN function_block

    RPAREN          shift and go to state 54


state 37

    (6) normal_function -> FUNCTION ID start_function_action LPAREN . RPAREN function_block end_function_action

    RPAREN          shift and go to state 55


state 38

    (49) vector -> LBRACKET integer RBRACKET .

    LBRACKET        reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    EQUAL           reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    COMMA           reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    SEMICOLON       reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    TIMES           reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    DIVIDE          reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    MOD             reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    AND             reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    OR              reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    PLUS            reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    MINUS           reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    LESS_THAN       reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    EQUAL_THAN      reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    DIFFERENT_THAN  reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    GREATER_THAN    reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    RPAREN          reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    OUTSTREAM       reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)
    INSTREAM        reduce using rule 49 (vector -> LBRACKET integer RBRACKET .)


state 39

    (50) vector -> LBRACKET ID RBRACKET .

    LBRACKET        reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    EQUAL           reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    COMMA           reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    SEMICOLON       reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    MOD             reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    AND             reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    OR              reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    LESS_THAN       reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    EQUAL_THAN      reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    DIFFERENT_THAN  reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    GREATER_THAN    reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    OUTSTREAM       reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)
    INSTREAM        reduce using rule 50 (vector -> LBRACKET ID RBRACKET .)


state 40

    (51) vector -> LBRACKET empty RBRACKET .

    LBRACKET        reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    EQUAL           reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    COMMA           reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    SEMICOLON       reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    TIMES           reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    DIVIDE          reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    MOD             reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    AND             reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    OR              reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    PLUS            reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    MINUS           reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    LESS_THAN       reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    EQUAL_THAN      reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    DIFFERENT_THAN  reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    GREATER_THAN    reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    RPAREN          reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    OUTSTREAM       reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)
    INSTREAM        reduce using rule 51 (vector -> LBRACKET empty RBRACKET .)


state 41

    (96) number -> integer .

    TIMES           reduce using rule 96 (number -> integer .)
    DIVIDE          reduce using rule 96 (number -> integer .)
    MOD             reduce using rule 96 (number -> integer .)
    AND             reduce using rule 96 (number -> integer .)
    OR              reduce using rule 96 (number -> integer .)
    PLUS            reduce using rule 96 (number -> integer .)
    MINUS           reduce using rule 96 (number -> integer .)
    LESS_THAN       reduce using rule 96 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 96 (number -> integer .)
    EQUAL_THAN      reduce using rule 96 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 96 (number -> integer .)
    GREATER_THAN    reduce using rule 96 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 96 (number -> integer .)
    SEMICOLON       reduce using rule 96 (number -> integer .)
    RPAREN          reduce using rule 96 (number -> integer .)
    OUTSTREAM       reduce using rule 96 (number -> integer .)


state 42

    (82) simple_expression -> MINUS . term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 56
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 43

    (92) factor -> number . expression_action_1
    (100) expression_action_1 -> .

    TIMES           reduce using rule 100 (expression_action_1 -> .)
    DIVIDE          reduce using rule 100 (expression_action_1 -> .)
    MOD             reduce using rule 100 (expression_action_1 -> .)
    AND             reduce using rule 100 (expression_action_1 -> .)
    OR              reduce using rule 100 (expression_action_1 -> .)
    PLUS            reduce using rule 100 (expression_action_1 -> .)
    MINUS           reduce using rule 100 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 100 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 100 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 100 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 100 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 100 (expression_action_1 -> .)
    RPAREN          reduce using rule 100 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 100 (expression_action_1 -> .)

    expression_action_1            shift and go to state 57

state 44

    (91) factor -> id . expression_action_1
    (100) expression_action_1 -> .

    TIMES           reduce using rule 100 (expression_action_1 -> .)
    DIVIDE          reduce using rule 100 (expression_action_1 -> .)
    MOD             reduce using rule 100 (expression_action_1 -> .)
    AND             reduce using rule 100 (expression_action_1 -> .)
    OR              reduce using rule 100 (expression_action_1 -> .)
    PLUS            reduce using rule 100 (expression_action_1 -> .)
    MINUS           reduce using rule 100 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 100 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 100 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 100 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 100 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 100 (expression_action_1 -> .)
    RPAREN          reduce using rule 100 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 100 (expression_action_1 -> .)

    expression_action_1            shift and go to state 58

state 45

    (81) simple_expression -> PLUS . term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 59
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 46

    (86) term -> factor .

    TIMES           reduce using rule 86 (term -> factor .)
    DIVIDE          reduce using rule 86 (term -> factor .)
    MOD             reduce using rule 86 (term -> factor .)
    AND             reduce using rule 86 (term -> factor .)
    OR              reduce using rule 86 (term -> factor .)
    PLUS            reduce using rule 86 (term -> factor .)
    MINUS           reduce using rule 86 (term -> factor .)
    LESS_THAN       reduce using rule 86 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 86 (term -> factor .)
    EQUAL_THAN      reduce using rule 86 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 86 (term -> factor .)
    GREATER_THAN    reduce using rule 86 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 86 (term -> factor .)
    SEMICOLON       reduce using rule 86 (term -> factor .)
    RPAREN          reduce using rule 86 (term -> factor .)
    OUTSTREAM       reduce using rule 86 (term -> factor .)


state 47

    (95) number -> real .

    TIMES           reduce using rule 95 (number -> real .)
    DIVIDE          reduce using rule 95 (number -> real .)
    MOD             reduce using rule 95 (number -> real .)
    AND             reduce using rule 95 (number -> real .)
    OR              reduce using rule 95 (number -> real .)
    PLUS            reduce using rule 95 (number -> real .)
    MINUS           reduce using rule 95 (number -> real .)
    LESS_THAN       reduce using rule 95 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 95 (number -> real .)
    EQUAL_THAN      reduce using rule 95 (number -> real .)
    DIFFERENT_THAN  reduce using rule 95 (number -> real .)
    GREATER_THAN    reduce using rule 95 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 95 (number -> real .)
    SEMICOLON       reduce using rule 95 (number -> real .)
    RPAREN          reduce using rule 95 (number -> real .)
    OUTSTREAM       reduce using rule 95 (number -> real .)


state 48

    (73) expression -> simple_expression .
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4

    RPAREN          reduce using rule 73 (expression -> simple_expression .)
    LESS_THAN       reduce using rule 73 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 73 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 73 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 73 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 73 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 73 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 73 (expression -> simple_expression .)
    OUTSTREAM       reduce using rule 73 (expression -> simple_expression .)
    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60


state 49

    (97) real -> NUMBER . DOT NUMBER
    (98) integer -> NUMBER .

    DOT             shift and go to state 63
    TIMES           reduce using rule 98 (integer -> NUMBER .)
    DIVIDE          reduce using rule 98 (integer -> NUMBER .)
    MOD             reduce using rule 98 (integer -> NUMBER .)
    AND             reduce using rule 98 (integer -> NUMBER .)
    OR              reduce using rule 98 (integer -> NUMBER .)
    PLUS            reduce using rule 98 (integer -> NUMBER .)
    MINUS           reduce using rule 98 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 98 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 98 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 98 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 98 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (integer -> NUMBER .)
    SEMICOLON       reduce using rule 98 (integer -> NUMBER .)
    RPAREN          reduce using rule 98 (integer -> NUMBER .)
    OUTSTREAM       reduce using rule 98 (integer -> NUMBER .)


state 50

    (94) factor -> expression_action_6 . LPAREN expression RPAREN expression_action_7

    LPAREN          shift and go to state 64


state 51

    (80) simple_expression -> term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 68

state 52

    (36) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression . assignation_action_3
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (39) assignation_action_3 -> .

    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70
    SEMICOLON       reduce using rule 39 (assignation_action_3 -> .)
    RPAREN          reduce using rule 39 (assignation_action_3 -> .)

    assignation_action_3           shift and go to state 72

state 53

    (93) factor -> NOT . id expression_action_1
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 8

    id                             shift and go to state 77

state 54

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN . function_block
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 79

state 55

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN . function_block end_function_action
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 80

state 56

    (82) simple_expression -> MINUS term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 81

state 57

    (92) factor -> number expression_action_1 .

    TIMES           reduce using rule 92 (factor -> number expression_action_1 .)
    DIVIDE          reduce using rule 92 (factor -> number expression_action_1 .)
    MOD             reduce using rule 92 (factor -> number expression_action_1 .)
    AND             reduce using rule 92 (factor -> number expression_action_1 .)
    OR              reduce using rule 92 (factor -> number expression_action_1 .)
    PLUS            reduce using rule 92 (factor -> number expression_action_1 .)
    MINUS           reduce using rule 92 (factor -> number expression_action_1 .)
    LESS_THAN       reduce using rule 92 (factor -> number expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 92 (factor -> number expression_action_1 .)
    EQUAL_THAN      reduce using rule 92 (factor -> number expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 92 (factor -> number expression_action_1 .)
    GREATER_THAN    reduce using rule 92 (factor -> number expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 92 (factor -> number expression_action_1 .)
    SEMICOLON       reduce using rule 92 (factor -> number expression_action_1 .)
    RPAREN          reduce using rule 92 (factor -> number expression_action_1 .)
    OUTSTREAM       reduce using rule 92 (factor -> number expression_action_1 .)


state 58

    (91) factor -> id expression_action_1 .

    TIMES           reduce using rule 91 (factor -> id expression_action_1 .)
    DIVIDE          reduce using rule 91 (factor -> id expression_action_1 .)
    MOD             reduce using rule 91 (factor -> id expression_action_1 .)
    AND             reduce using rule 91 (factor -> id expression_action_1 .)
    OR              reduce using rule 91 (factor -> id expression_action_1 .)
    PLUS            reduce using rule 91 (factor -> id expression_action_1 .)
    MINUS           reduce using rule 91 (factor -> id expression_action_1 .)
    LESS_THAN       reduce using rule 91 (factor -> id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 91 (factor -> id expression_action_1 .)
    EQUAL_THAN      reduce using rule 91 (factor -> id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 91 (factor -> id expression_action_1 .)
    GREATER_THAN    reduce using rule 91 (factor -> id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 91 (factor -> id expression_action_1 .)
    SEMICOLON       reduce using rule 91 (factor -> id expression_action_1 .)
    RPAREN          reduce using rule 91 (factor -> id expression_action_1 .)
    OUTSTREAM       reduce using rule 91 (factor -> id expression_action_1 .)


state 59

    (81) simple_expression -> PLUS term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 82

state 60

    (85) simple_expression -> simple_expression MINUS . expression_action_2 term expression_action_4
    (101) expression_action_2 -> .

    NOT             reduce using rule 101 (expression_action_2 -> .)
    ID              reduce using rule 101 (expression_action_2 -> .)
    NUMBER          reduce using rule 101 (expression_action_2 -> .)
    LPAREN          reduce using rule 101 (expression_action_2 -> .)

    expression_action_2            shift and go to state 83

state 61

    (84) simple_expression -> simple_expression PLUS . expression_action_2 term expression_action_4
    (101) expression_action_2 -> .

    NOT             reduce using rule 101 (expression_action_2 -> .)
    ID              reduce using rule 101 (expression_action_2 -> .)
    NUMBER          reduce using rule 101 (expression_action_2 -> .)
    LPAREN          reduce using rule 101 (expression_action_2 -> .)

    expression_action_2            shift and go to state 84

state 62

    (83) simple_expression -> simple_expression OR . expression_action_2 term expression_action_4
    (101) expression_action_2 -> .

    NOT             reduce using rule 101 (expression_action_2 -> .)
    ID              reduce using rule 101 (expression_action_2 -> .)
    NUMBER          reduce using rule 101 (expression_action_2 -> .)
    LPAREN          reduce using rule 101 (expression_action_2 -> .)

    expression_action_2            shift and go to state 85

state 63

    (97) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 86


state 64

    (94) factor -> expression_action_6 LPAREN . expression RPAREN expression_action_7
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    expression                     shift and go to state 87
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 48

state 65

    (90) term -> term AND . expression_action_3 factor expression_action_5
    (102) expression_action_3 -> .

    NOT             reduce using rule 102 (expression_action_3 -> .)
    ID              reduce using rule 102 (expression_action_3 -> .)
    NUMBER          reduce using rule 102 (expression_action_3 -> .)
    LPAREN          reduce using rule 102 (expression_action_3 -> .)

    expression_action_3            shift and go to state 88

state 66

    (88) term -> term DIVIDE . expression_action_3 factor expression_action_5
    (102) expression_action_3 -> .

    NOT             reduce using rule 102 (expression_action_3 -> .)
    ID              reduce using rule 102 (expression_action_3 -> .)
    NUMBER          reduce using rule 102 (expression_action_3 -> .)
    LPAREN          reduce using rule 102 (expression_action_3 -> .)

    expression_action_3            shift and go to state 89

state 67

    (87) term -> term TIMES . expression_action_3 factor expression_action_5
    (102) expression_action_3 -> .

    NOT             reduce using rule 102 (expression_action_3 -> .)
    ID              reduce using rule 102 (expression_action_3 -> .)
    NUMBER          reduce using rule 102 (expression_action_3 -> .)
    LPAREN          reduce using rule 102 (expression_action_3 -> .)

    expression_action_3            shift and go to state 90

state 68

    (80) simple_expression -> term expression_action_4 .

    OR              reduce using rule 80 (simple_expression -> term expression_action_4 .)
    PLUS            reduce using rule 80 (simple_expression -> term expression_action_4 .)
    MINUS           reduce using rule 80 (simple_expression -> term expression_action_4 .)
    RPAREN          reduce using rule 80 (simple_expression -> term expression_action_4 .)
    LESS_THAN       reduce using rule 80 (simple_expression -> term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 80 (simple_expression -> term expression_action_4 .)
    EQUAL_THAN      reduce using rule 80 (simple_expression -> term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 80 (simple_expression -> term expression_action_4 .)
    GREATER_THAN    reduce using rule 80 (simple_expression -> term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 80 (simple_expression -> term expression_action_4 .)
    SEMICOLON       reduce using rule 80 (simple_expression -> term expression_action_4 .)
    OUTSTREAM       reduce using rule 80 (simple_expression -> term expression_action_4 .)


state 69

    (89) term -> term MOD . expression_action_3 factor expression_action_5
    (102) expression_action_3 -> .

    NOT             reduce using rule 102 (expression_action_3 -> .)
    ID              reduce using rule 102 (expression_action_3 -> .)
    NUMBER          reduce using rule 102 (expression_action_3 -> .)
    LPAREN          reduce using rule 102 (expression_action_3 -> .)

    expression_action_3            shift and go to state 91

state 70

    (79) expression -> expression GREATER_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 92

state 71

    (76) expression -> expression EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 93

state 72

    (36) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .

    SEMICOLON       reduce using rule 36 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .)
    RPAREN          reduce using rule 36 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .)


state 73

    (78) expression -> expression GREATER_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 94

state 74

    (77) expression -> expression DIFFERENT_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 95

state 75

    (75) expression -> expression LESS_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 96

state 76

    (74) expression -> expression LESS_THAN . expression_action_8 simple_expression expression_action_9
    (107) expression_action_8 -> .

    PLUS            reduce using rule 107 (expression_action_8 -> .)
    MINUS           reduce using rule 107 (expression_action_8 -> .)
    NOT             reduce using rule 107 (expression_action_8 -> .)
    ID              reduce using rule 107 (expression_action_8 -> .)
    NUMBER          reduce using rule 107 (expression_action_8 -> .)
    LPAREN          reduce using rule 107 (expression_action_8 -> .)

    expression_action_8            shift and go to state 97

state 77

    (93) factor -> NOT id . expression_action_1
    (100) expression_action_1 -> .

    TIMES           reduce using rule 100 (expression_action_1 -> .)
    DIVIDE          reduce using rule 100 (expression_action_1 -> .)
    MOD             reduce using rule 100 (expression_action_1 -> .)
    AND             reduce using rule 100 (expression_action_1 -> .)
    OR              reduce using rule 100 (expression_action_1 -> .)
    PLUS            reduce using rule 100 (expression_action_1 -> .)
    MINUS           reduce using rule 100 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 100 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 100 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 100 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 100 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 100 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 100 (expression_action_1 -> .)
    RPAREN          reduce using rule 100 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 100 (expression_action_1 -> .)

    expression_action_1            shift and go to state 98

state 78

    (11) function_block -> LBRACE . instruction RBRACE
    (12) instruction -> . proposition instruction
    (13) instruction -> . empty
    (14) proposition -> . function_call SEMICOLON
    (15) proposition -> . assignation SEMICOLON
    (16) proposition -> . print SEMICOLON
    (17) proposition -> . input SEMICOLON
    (18) proposition -> . unary_operation SEMICOLON
    (19) proposition -> . if_sentence
    (20) proposition -> . while_sentence
    (21) proposition -> . do_while_sentence
    (22) proposition -> . for_sentence
    (99) empty -> .
    (52) function_call -> . ID function_call_action LPAREN RPAREN
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (23) print -> . COUT output_expression
    (29) input -> . CIN input_expression
    (40) unary_operation -> . ID PLUS PLUS
    (41) unary_operation -> . ID MINUS MINUS
    (42) unary_operation -> . PLUS PLUS ID
    (43) unary_operation -> . MINUS MINUS ID
    (54) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (55) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (59) while_sentence -> . WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (63) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (66) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    RBRACE          reduce using rule 99 (empty -> .)
    ID              shift and go to state 115
    COUT            shift and go to state 100
    CIN             shift and go to state 114
    PLUS            shift and go to state 108
    MINUS           shift and go to state 106
    IF              shift and go to state 116
    WHILE           shift and go to state 103
    DO              shift and go to state 99
    FOR             shift and go to state 113

    do_while_sentence              shift and go to state 101
    function_call                  shift and go to state 102
    proposition                    shift and go to state 104
    while_sentence                 shift and go to state 105
    id                             shift and go to state 2
    for_sentence                   shift and go to state 107
    print                          shift and go to state 109
    input                          shift and go to state 110
    unary_operation                shift and go to state 111
    empty                          shift and go to state 112
    assignation                    shift and go to state 117
    instruction                    shift and go to state 118
    if_sentence                    shift and go to state 119

state 79

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block .

    $end            reduce using rule 7 (main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block .)


state 80

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block . end_function_action
    (10) end_function_action -> .

    FUNCTION        reduce using rule 10 (end_function_action -> .)
    INT             reduce using rule 10 (end_function_action -> .)
    FLOAT           reduce using rule 10 (end_function_action -> .)
    ID              reduce using rule 10 (end_function_action -> .)

    end_function_action            shift and go to state 120

state 81

    (82) simple_expression -> MINUS term expression_action_4 .

    OR              reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    PLUS            reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    MINUS           reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    RPAREN          reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    LESS_THAN       reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    SEMICOLON       reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 82 (simple_expression -> MINUS term expression_action_4 .)


state 82

    (81) simple_expression -> PLUS term expression_action_4 .

    OR              reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    PLUS            reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    MINUS           reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    RPAREN          reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    LESS_THAN       reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    SEMICOLON       reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 81 (simple_expression -> PLUS term expression_action_4 .)


state 83

    (85) simple_expression -> simple_expression MINUS expression_action_2 . term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 121
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 84

    (84) simple_expression -> simple_expression PLUS expression_action_2 . term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 122
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 85

    (83) simple_expression -> simple_expression OR expression_action_2 . term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 123
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 86

    (97) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    SEMICOLON       reduce using rule 97 (real -> NUMBER DOT NUMBER .)
    OUTSTREAM       reduce using rule 97 (real -> NUMBER DOT NUMBER .)


state 87

    (94) factor -> expression_action_6 LPAREN expression . RPAREN expression_action_7
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 124
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70


state 88

    (90) term -> term AND expression_action_3 . factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 125
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 89

    (88) term -> term DIVIDE expression_action_3 . factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 126
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 90

    (87) term -> term TIMES expression_action_3 . factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 127
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 91

    (89) term -> term MOD expression_action_3 . factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 128
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 92

    (79) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 129

state 93

    (76) expression -> expression EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 130

state 94

    (78) expression -> expression GREATER_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 131

state 95

    (77) expression -> expression DIFFERENT_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 132

state 96

    (75) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 133

state 97

    (74) expression -> expression LESS_THAN expression_action_8 . simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 134

state 98

    (93) factor -> NOT id expression_action_1 .

    TIMES           reduce using rule 93 (factor -> NOT id expression_action_1 .)
    DIVIDE          reduce using rule 93 (factor -> NOT id expression_action_1 .)
    MOD             reduce using rule 93 (factor -> NOT id expression_action_1 .)
    AND             reduce using rule 93 (factor -> NOT id expression_action_1 .)
    OR              reduce using rule 93 (factor -> NOT id expression_action_1 .)
    PLUS            reduce using rule 93 (factor -> NOT id expression_action_1 .)
    MINUS           reduce using rule 93 (factor -> NOT id expression_action_1 .)
    LESS_THAN       reduce using rule 93 (factor -> NOT id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 93 (factor -> NOT id expression_action_1 .)
    EQUAL_THAN      reduce using rule 93 (factor -> NOT id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 93 (factor -> NOT id expression_action_1 .)
    GREATER_THAN    reduce using rule 93 (factor -> NOT id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 93 (factor -> NOT id expression_action_1 .)
    SEMICOLON       reduce using rule 93 (factor -> NOT id expression_action_1 .)
    RPAREN          reduce using rule 93 (factor -> NOT id expression_action_1 .)
    OUTSTREAM       reduce using rule 93 (factor -> NOT id expression_action_1 .)


state 99

    (63) do_while_sentence -> DO . do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (64) do_while_action_1 -> .

    LBRACE          reduce using rule 64 (do_while_action_1 -> .)

    do_while_action_1              shift and go to state 135

state 100

    (23) print -> COUT . output_expression
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action

    OUTSTREAM       shift and go to state 136

    output_expression              shift and go to state 137

state 101

    (21) proposition -> do_while_sentence .

    ID              reduce using rule 21 (proposition -> do_while_sentence .)
    COUT            reduce using rule 21 (proposition -> do_while_sentence .)
    CIN             reduce using rule 21 (proposition -> do_while_sentence .)
    PLUS            reduce using rule 21 (proposition -> do_while_sentence .)
    MINUS           reduce using rule 21 (proposition -> do_while_sentence .)
    IF              reduce using rule 21 (proposition -> do_while_sentence .)
    WHILE           reduce using rule 21 (proposition -> do_while_sentence .)
    DO              reduce using rule 21 (proposition -> do_while_sentence .)
    FOR             reduce using rule 21 (proposition -> do_while_sentence .)
    RBRACE          reduce using rule 21 (proposition -> do_while_sentence .)


state 102

    (14) proposition -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 138


state 103

    (59) while_sentence -> WHILE . while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (60) while_action_1 -> .

    LPAREN          reduce using rule 60 (while_action_1 -> .)

    while_action_1                 shift and go to state 139

state 104

    (12) instruction -> proposition . instruction
    (12) instruction -> . proposition instruction
    (13) instruction -> . empty
    (14) proposition -> . function_call SEMICOLON
    (15) proposition -> . assignation SEMICOLON
    (16) proposition -> . print SEMICOLON
    (17) proposition -> . input SEMICOLON
    (18) proposition -> . unary_operation SEMICOLON
    (19) proposition -> . if_sentence
    (20) proposition -> . while_sentence
    (21) proposition -> . do_while_sentence
    (22) proposition -> . for_sentence
    (99) empty -> .
    (52) function_call -> . ID function_call_action LPAREN RPAREN
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (23) print -> . COUT output_expression
    (29) input -> . CIN input_expression
    (40) unary_operation -> . ID PLUS PLUS
    (41) unary_operation -> . ID MINUS MINUS
    (42) unary_operation -> . PLUS PLUS ID
    (43) unary_operation -> . MINUS MINUS ID
    (54) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (55) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (59) while_sentence -> . WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (63) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (66) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    RBRACE          reduce using rule 99 (empty -> .)
    ID              shift and go to state 115
    COUT            shift and go to state 100
    CIN             shift and go to state 114
    PLUS            shift and go to state 108
    MINUS           shift and go to state 106
    IF              shift and go to state 116
    WHILE           shift and go to state 103
    DO              shift and go to state 99
    FOR             shift and go to state 113

    do_while_sentence              shift and go to state 101
    function_call                  shift and go to state 102
    proposition                    shift and go to state 104
    while_sentence                 shift and go to state 105
    id                             shift and go to state 2
    for_sentence                   shift and go to state 107
    print                          shift and go to state 109
    input                          shift and go to state 110
    unary_operation                shift and go to state 111
    empty                          shift and go to state 112
    assignation                    shift and go to state 117
    instruction                    shift and go to state 140
    if_sentence                    shift and go to state 119

state 105

    (20) proposition -> while_sentence .

    ID              reduce using rule 20 (proposition -> while_sentence .)
    COUT            reduce using rule 20 (proposition -> while_sentence .)
    CIN             reduce using rule 20 (proposition -> while_sentence .)
    PLUS            reduce using rule 20 (proposition -> while_sentence .)
    MINUS           reduce using rule 20 (proposition -> while_sentence .)
    IF              reduce using rule 20 (proposition -> while_sentence .)
    WHILE           reduce using rule 20 (proposition -> while_sentence .)
    DO              reduce using rule 20 (proposition -> while_sentence .)
    FOR             reduce using rule 20 (proposition -> while_sentence .)
    RBRACE          reduce using rule 20 (proposition -> while_sentence .)


state 106

    (43) unary_operation -> MINUS . MINUS ID

    MINUS           shift and go to state 141


state 107

    (22) proposition -> for_sentence .

    ID              reduce using rule 22 (proposition -> for_sentence .)
    COUT            reduce using rule 22 (proposition -> for_sentence .)
    CIN             reduce using rule 22 (proposition -> for_sentence .)
    PLUS            reduce using rule 22 (proposition -> for_sentence .)
    MINUS           reduce using rule 22 (proposition -> for_sentence .)
    IF              reduce using rule 22 (proposition -> for_sentence .)
    WHILE           reduce using rule 22 (proposition -> for_sentence .)
    DO              reduce using rule 22 (proposition -> for_sentence .)
    FOR             reduce using rule 22 (proposition -> for_sentence .)
    RBRACE          reduce using rule 22 (proposition -> for_sentence .)


state 108

    (42) unary_operation -> PLUS . PLUS ID

    PLUS            shift and go to state 142


state 109

    (16) proposition -> print . SEMICOLON

    SEMICOLON       shift and go to state 143


state 110

    (17) proposition -> input . SEMICOLON

    SEMICOLON       shift and go to state 144


state 111

    (18) proposition -> unary_operation . SEMICOLON

    SEMICOLON       shift and go to state 145


state 112

    (13) instruction -> empty .

    RBRACE          reduce using rule 13 (instruction -> empty .)


state 113

    (66) for_sentence -> FOR . LPAREN for_expression RPAREN function_block for_action_4

    LPAREN          shift and go to state 146


state 114

    (29) input -> CIN . input_expression
    (30) input_expression -> . INSTREAM id input_action input_expression
    (31) input_expression -> . INSTREAM id input_action

    INSTREAM        shift and go to state 147

    input_expression               shift and go to state 148

state 115

    (52) function_call -> ID . function_call_action LPAREN RPAREN
    (40) unary_operation -> ID . PLUS PLUS
    (41) unary_operation -> ID . MINUS MINUS
    (46) id -> ID .
    (47) id -> ID . vector
    (48) id -> ID . vector vector
    (53) function_call_action -> .
    (49) vector -> . LBRACKET integer RBRACKET
    (50) vector -> . LBRACKET ID RBRACKET
    (51) vector -> . LBRACKET empty RBRACKET

    PLUS            shift and go to state 149
    MINUS           shift and go to state 151
    EQUAL           reduce using rule 46 (id -> ID .)
    LPAREN          reduce using rule 53 (function_call_action -> .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20
    function_call_action           shift and go to state 150

state 116

    (54) if_sentence -> IF . LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (55) if_sentence -> IF . LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3

    LPAREN          shift and go to state 152


state 117

    (15) proposition -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 153


state 118

    (11) function_block -> LBRACE instruction . RBRACE

    RBRACE          shift and go to state 154


state 119

    (19) proposition -> if_sentence .

    ID              reduce using rule 19 (proposition -> if_sentence .)
    COUT            reduce using rule 19 (proposition -> if_sentence .)
    CIN             reduce using rule 19 (proposition -> if_sentence .)
    PLUS            reduce using rule 19 (proposition -> if_sentence .)
    MINUS           reduce using rule 19 (proposition -> if_sentence .)
    IF              reduce using rule 19 (proposition -> if_sentence .)
    WHILE           reduce using rule 19 (proposition -> if_sentence .)
    DO              reduce using rule 19 (proposition -> if_sentence .)
    FOR             reduce using rule 19 (proposition -> if_sentence .)
    RBRACE          reduce using rule 19 (proposition -> if_sentence .)


state 120

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .

    FUNCTION        reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    INT             reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    FLOAT           reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    ID              reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)


state 121

    (85) simple_expression -> simple_expression MINUS expression_action_2 term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 155

state 122

    (84) simple_expression -> simple_expression PLUS expression_action_2 term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 156

state 123

    (83) simple_expression -> simple_expression OR expression_action_2 term . expression_action_4
    (87) term -> term . TIMES expression_action_3 factor expression_action_5
    (88) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (89) term -> term . MOD expression_action_3 factor expression_action_5
    (90) term -> term . AND expression_action_3 factor expression_action_5
    (103) expression_action_4 -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 69
    AND             shift and go to state 65
    OR              reduce using rule 103 (expression_action_4 -> .)
    PLUS            reduce using rule 103 (expression_action_4 -> .)
    MINUS           reduce using rule 103 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 103 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 103 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 103 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 103 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 103 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 103 (expression_action_4 -> .)
    RPAREN          reduce using rule 103 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 103 (expression_action_4 -> .)

    expression_action_4            shift and go to state 157

state 124

    (94) factor -> expression_action_6 LPAREN expression RPAREN . expression_action_7
    (106) expression_action_7 -> .

    TIMES           reduce using rule 106 (expression_action_7 -> .)
    DIVIDE          reduce using rule 106 (expression_action_7 -> .)
    MOD             reduce using rule 106 (expression_action_7 -> .)
    AND             reduce using rule 106 (expression_action_7 -> .)
    OR              reduce using rule 106 (expression_action_7 -> .)
    PLUS            reduce using rule 106 (expression_action_7 -> .)
    MINUS           reduce using rule 106 (expression_action_7 -> .)
    LESS_THAN       reduce using rule 106 (expression_action_7 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 106 (expression_action_7 -> .)
    EQUAL_THAN      reduce using rule 106 (expression_action_7 -> .)
    DIFFERENT_THAN  reduce using rule 106 (expression_action_7 -> .)
    GREATER_THAN    reduce using rule 106 (expression_action_7 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 106 (expression_action_7 -> .)
    SEMICOLON       reduce using rule 106 (expression_action_7 -> .)
    RPAREN          reduce using rule 106 (expression_action_7 -> .)
    OUTSTREAM       reduce using rule 106 (expression_action_7 -> .)

    expression_action_7            shift and go to state 158

state 125

    (90) term -> term AND expression_action_3 factor . expression_action_5
    (104) expression_action_5 -> .

    TIMES           reduce using rule 104 (expression_action_5 -> .)
    DIVIDE          reduce using rule 104 (expression_action_5 -> .)
    MOD             reduce using rule 104 (expression_action_5 -> .)
    AND             reduce using rule 104 (expression_action_5 -> .)
    OR              reduce using rule 104 (expression_action_5 -> .)
    PLUS            reduce using rule 104 (expression_action_5 -> .)
    MINUS           reduce using rule 104 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_5 -> .)
    RPAREN          reduce using rule 104 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_5 -> .)

    expression_action_5            shift and go to state 159

state 126

    (88) term -> term DIVIDE expression_action_3 factor . expression_action_5
    (104) expression_action_5 -> .

    TIMES           reduce using rule 104 (expression_action_5 -> .)
    DIVIDE          reduce using rule 104 (expression_action_5 -> .)
    MOD             reduce using rule 104 (expression_action_5 -> .)
    AND             reduce using rule 104 (expression_action_5 -> .)
    OR              reduce using rule 104 (expression_action_5 -> .)
    PLUS            reduce using rule 104 (expression_action_5 -> .)
    MINUS           reduce using rule 104 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_5 -> .)
    RPAREN          reduce using rule 104 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_5 -> .)

    expression_action_5            shift and go to state 160

state 127

    (87) term -> term TIMES expression_action_3 factor . expression_action_5
    (104) expression_action_5 -> .

    TIMES           reduce using rule 104 (expression_action_5 -> .)
    DIVIDE          reduce using rule 104 (expression_action_5 -> .)
    MOD             reduce using rule 104 (expression_action_5 -> .)
    AND             reduce using rule 104 (expression_action_5 -> .)
    OR              reduce using rule 104 (expression_action_5 -> .)
    PLUS            reduce using rule 104 (expression_action_5 -> .)
    MINUS           reduce using rule 104 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_5 -> .)
    RPAREN          reduce using rule 104 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_5 -> .)

    expression_action_5            shift and go to state 161

state 128

    (89) term -> term MOD expression_action_3 factor . expression_action_5
    (104) expression_action_5 -> .

    TIMES           reduce using rule 104 (expression_action_5 -> .)
    DIVIDE          reduce using rule 104 (expression_action_5 -> .)
    MOD             reduce using rule 104 (expression_action_5 -> .)
    AND             reduce using rule 104 (expression_action_5 -> .)
    OR              reduce using rule 104 (expression_action_5 -> .)
    PLUS            reduce using rule 104 (expression_action_5 -> .)
    MINUS           reduce using rule 104 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_5 -> .)
    RPAREN          reduce using rule 104 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_5 -> .)

    expression_action_5            shift and go to state 162

state 129

    (79) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 163

state 130

    (76) expression -> expression EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 164

state 131

    (78) expression -> expression GREATER_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 165

state 132

    (77) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 166

state 133

    (75) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 167

state 134

    (74) expression -> expression LESS_THAN expression_action_8 simple_expression . expression_action_9
    (83) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (84) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (108) expression_action_9 -> .

    OR              shift and go to state 62
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    LESS_THAN       reduce using rule 108 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_9 -> .)
    RPAREN          reduce using rule 108 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_9 -> .)

    expression_action_9            shift and go to state 168

state 135

    (63) do_while_sentence -> DO do_while_action_1 . function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 169

state 136

    (24) output_expression -> OUTSTREAM . expression print_action output_expression
    (25) output_expression -> OUTSTREAM . expression print_action
    (26) output_expression -> OUTSTREAM . TEXT print_action output_expression
    (27) output_expression -> OUTSTREAM . TEXT print_action
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    TEXT            shift and go to state 170
    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    expression                     shift and go to state 171
    factor                         shift and go to state 46
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    id                             shift and go to state 44
    integer                        shift and go to state 41
    simple_expression              shift and go to state 48

state 137

    (23) print -> COUT output_expression .

    SEMICOLON       reduce using rule 23 (print -> COUT output_expression .)


state 138

    (14) proposition -> function_call SEMICOLON .

    ID              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    COUT            reduce using rule 14 (proposition -> function_call SEMICOLON .)
    CIN             reduce using rule 14 (proposition -> function_call SEMICOLON .)
    PLUS            reduce using rule 14 (proposition -> function_call SEMICOLON .)
    MINUS           reduce using rule 14 (proposition -> function_call SEMICOLON .)
    IF              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    WHILE           reduce using rule 14 (proposition -> function_call SEMICOLON .)
    DO              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    FOR             reduce using rule 14 (proposition -> function_call SEMICOLON .)
    RBRACE          reduce using rule 14 (proposition -> function_call SEMICOLON .)


state 139

    (59) while_sentence -> WHILE while_action_1 . LPAREN expression RPAREN while_action_2 function_block while_action_3

    LPAREN          shift and go to state 172


state 140

    (12) instruction -> proposition instruction .

    RBRACE          reduce using rule 12 (instruction -> proposition instruction .)


state 141

    (43) unary_operation -> MINUS MINUS . ID

    ID              shift and go to state 173


state 142

    (42) unary_operation -> PLUS PLUS . ID

    ID              shift and go to state 174


state 143

    (16) proposition -> print SEMICOLON .

    ID              reduce using rule 16 (proposition -> print SEMICOLON .)
    COUT            reduce using rule 16 (proposition -> print SEMICOLON .)
    CIN             reduce using rule 16 (proposition -> print SEMICOLON .)
    PLUS            reduce using rule 16 (proposition -> print SEMICOLON .)
    MINUS           reduce using rule 16 (proposition -> print SEMICOLON .)
    IF              reduce using rule 16 (proposition -> print SEMICOLON .)
    WHILE           reduce using rule 16 (proposition -> print SEMICOLON .)
    DO              reduce using rule 16 (proposition -> print SEMICOLON .)
    FOR             reduce using rule 16 (proposition -> print SEMICOLON .)
    RBRACE          reduce using rule 16 (proposition -> print SEMICOLON .)


state 144

    (17) proposition -> input SEMICOLON .

    ID              reduce using rule 17 (proposition -> input SEMICOLON .)
    COUT            reduce using rule 17 (proposition -> input SEMICOLON .)
    CIN             reduce using rule 17 (proposition -> input SEMICOLON .)
    PLUS            reduce using rule 17 (proposition -> input SEMICOLON .)
    MINUS           reduce using rule 17 (proposition -> input SEMICOLON .)
    IF              reduce using rule 17 (proposition -> input SEMICOLON .)
    WHILE           reduce using rule 17 (proposition -> input SEMICOLON .)
    DO              reduce using rule 17 (proposition -> input SEMICOLON .)
    FOR             reduce using rule 17 (proposition -> input SEMICOLON .)
    RBRACE          reduce using rule 17 (proposition -> input SEMICOLON .)


state 145

    (18) proposition -> unary_operation SEMICOLON .

    ID              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    COUT            reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    CIN             reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    PLUS            reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    MINUS           reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    IF              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    WHILE           reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    DO              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    FOR             reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    RBRACE          reduce using rule 18 (proposition -> unary_operation SEMICOLON .)


state 146

    (66) for_sentence -> FOR LPAREN . for_expression RPAREN function_block for_action_4
    (67) for_expression -> . assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (68) for_expression -> . assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 8

    assignation                    shift and go to state 175
    for_expression                 shift and go to state 176
    id                             shift and go to state 2

state 147

    (30) input_expression -> INSTREAM . id input_action input_expression
    (31) input_expression -> INSTREAM . id input_action
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 8

    id                             shift and go to state 177

state 148

    (29) input -> CIN input_expression .

    SEMICOLON       reduce using rule 29 (input -> CIN input_expression .)


state 149

    (40) unary_operation -> ID PLUS . PLUS

    PLUS            shift and go to state 178


state 150

    (52) function_call -> ID function_call_action . LPAREN RPAREN

    LPAREN          shift and go to state 179


state 151

    (41) unary_operation -> ID MINUS . MINUS

    MINUS           shift and go to state 180


state 152

    (54) if_sentence -> IF LPAREN . expression RPAREN if_action_1 function_block empty if_action_2
    (55) if_sentence -> IF LPAREN . expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    term                           shift and go to state 51
    expression                     shift and go to state 181

state 153

    (15) proposition -> assignation SEMICOLON .

    ID              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    COUT            reduce using rule 15 (proposition -> assignation SEMICOLON .)
    CIN             reduce using rule 15 (proposition -> assignation SEMICOLON .)
    PLUS            reduce using rule 15 (proposition -> assignation SEMICOLON .)
    MINUS           reduce using rule 15 (proposition -> assignation SEMICOLON .)
    IF              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    WHILE           reduce using rule 15 (proposition -> assignation SEMICOLON .)
    DO              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    FOR             reduce using rule 15 (proposition -> assignation SEMICOLON .)
    RBRACE          reduce using rule 15 (proposition -> assignation SEMICOLON .)


state 154

    (11) function_block -> LBRACE instruction RBRACE .

    ID              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    COUT            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    CIN             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    PLUS            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    MINUS           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    IF              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    WHILE           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    DO              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FOR             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    RBRACE          reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    ELSE            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    $end            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FUNCTION        reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    INT             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FLOAT           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)


state 155

    (85) simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 85 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)


state 156

    (84) simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 84 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)


state 157

    (83) simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .

    OR              reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 83 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)


state 158

    (94) factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .

    TIMES           reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIVIDE          reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MOD             reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    AND             reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OR              reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    PLUS            reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MINUS           reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_THAN       reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_OR_EQUAL_THAN reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    EQUAL_THAN      reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIFFERENT_THAN  reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_THAN    reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_OR_EQUAL_THAN reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    SEMICOLON       reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    RPAREN          reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OUTSTREAM       reduce using rule 94 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)


state 159

    (90) term -> term AND expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 90 (term -> term AND expression_action_3 factor expression_action_5 .)


state 160

    (88) term -> term DIVIDE expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 88 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)


state 161

    (87) term -> term TIMES expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 87 (term -> term TIMES expression_action_3 factor expression_action_5 .)


state 162

    (89) term -> term MOD expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 89 (term -> term MOD expression_action_3 factor expression_action_5 .)


state 163

    (79) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 79 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 164

    (76) expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 76 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 165

    (78) expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 78 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)


state 166

    (77) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 77 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)


state 167

    (75) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 75 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 168

    (74) expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 74 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)


state 169

    (63) do_while_sentence -> DO do_while_action_1 function_block . WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON

    WHILE           shift and go to state 182


state 170

    (26) output_expression -> OUTSTREAM TEXT . print_action output_expression
    (27) output_expression -> OUTSTREAM TEXT . print_action
    (28) print_action -> .

    OUTSTREAM       reduce using rule 28 (print_action -> .)
    SEMICOLON       reduce using rule 28 (print_action -> .)

    print_action                   shift and go to state 183

state 171

    (24) output_expression -> OUTSTREAM expression . print_action output_expression
    (25) output_expression -> OUTSTREAM expression . print_action
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (28) print_action -> .

    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70
    OUTSTREAM       reduce using rule 28 (print_action -> .)
    SEMICOLON       reduce using rule 28 (print_action -> .)

    print_action                   shift and go to state 184

state 172

    (59) while_sentence -> WHILE while_action_1 LPAREN . expression RPAREN while_action_2 function_block while_action_3
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    term                           shift and go to state 51
    expression                     shift and go to state 185

state 173

    (43) unary_operation -> MINUS MINUS ID .

    SEMICOLON       reduce using rule 43 (unary_operation -> MINUS MINUS ID .)
    RPAREN          reduce using rule 43 (unary_operation -> MINUS MINUS ID .)


state 174

    (42) unary_operation -> PLUS PLUS ID .

    SEMICOLON       reduce using rule 42 (unary_operation -> PLUS PLUS ID .)
    RPAREN          reduce using rule 42 (unary_operation -> PLUS PLUS ID .)


state 175

    (67) for_expression -> assignation . for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (68) for_expression -> assignation . for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
    (69) for_action_1 -> .

    SEMICOLON       reduce using rule 69 (for_action_1 -> .)

    for_action_1                   shift and go to state 186

state 176

    (66) for_sentence -> FOR LPAREN for_expression . RPAREN function_block for_action_4

    RPAREN          shift and go to state 187


state 177

    (30) input_expression -> INSTREAM id . input_action input_expression
    (31) input_expression -> INSTREAM id . input_action
    (32) input_action -> .

    INSTREAM        reduce using rule 32 (input_action -> .)
    SEMICOLON       reduce using rule 32 (input_action -> .)

    input_action                   shift and go to state 188

state 178

    (40) unary_operation -> ID PLUS PLUS .

    SEMICOLON       reduce using rule 40 (unary_operation -> ID PLUS PLUS .)
    RPAREN          reduce using rule 40 (unary_operation -> ID PLUS PLUS .)


state 179

    (52) function_call -> ID function_call_action LPAREN . RPAREN

    RPAREN          shift and go to state 189


state 180

    (41) unary_operation -> ID MINUS MINUS .

    SEMICOLON       reduce using rule 41 (unary_operation -> ID MINUS MINUS .)
    RPAREN          reduce using rule 41 (unary_operation -> ID MINUS MINUS .)


state 181

    (54) if_sentence -> IF LPAREN expression . RPAREN if_action_1 function_block empty if_action_2
    (55) if_sentence -> IF LPAREN expression . RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 190
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70


state 182

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE . LPAREN expression RPAREN do_while_action_2 SEMICOLON

    LPAREN          shift and go to state 191


state 183

    (26) output_expression -> OUTSTREAM TEXT print_action . output_expression
    (27) output_expression -> OUTSTREAM TEXT print_action .
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action

    SEMICOLON       reduce using rule 27 (output_expression -> OUTSTREAM TEXT print_action .)
    OUTSTREAM       shift and go to state 136

    output_expression              shift and go to state 192

state 184

    (24) output_expression -> OUTSTREAM expression print_action . output_expression
    (25) output_expression -> OUTSTREAM expression print_action .
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action

    SEMICOLON       reduce using rule 25 (output_expression -> OUTSTREAM expression print_action .)
    OUTSTREAM       shift and go to state 136

    output_expression              shift and go to state 193

state 185

    (59) while_sentence -> WHILE while_action_1 LPAREN expression . RPAREN while_action_2 function_block while_action_3
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 194
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70


state 186

    (67) for_expression -> assignation for_action_1 . SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (68) for_expression -> assignation for_action_1 . SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 195


state 187

    (66) for_sentence -> FOR LPAREN for_expression RPAREN . function_block for_action_4
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 196

state 188

    (30) input_expression -> INSTREAM id input_action . input_expression
    (31) input_expression -> INSTREAM id input_action .
    (30) input_expression -> . INSTREAM id input_action input_expression
    (31) input_expression -> . INSTREAM id input_action

    SEMICOLON       reduce using rule 31 (input_expression -> INSTREAM id input_action .)
    INSTREAM        shift and go to state 147

    input_expression               shift and go to state 197

state 189

    (52) function_call -> ID function_call_action LPAREN RPAREN .

    SEMICOLON       reduce using rule 52 (function_call -> ID function_call_action LPAREN RPAREN .)


state 190

    (54) if_sentence -> IF LPAREN expression RPAREN . if_action_1 function_block empty if_action_2
    (55) if_sentence -> IF LPAREN expression RPAREN . if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (56) if_action_1 -> .

    LBRACE          reduce using rule 56 (if_action_1 -> .)

    if_action_1                    shift and go to state 198

state 191

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN . expression RPAREN do_while_action_2 SEMICOLON
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    integer                        shift and go to state 41
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    simple_expression              shift and go to state 48
    expression                     shift and go to state 199

state 192

    (26) output_expression -> OUTSTREAM TEXT print_action output_expression .

    SEMICOLON       reduce using rule 26 (output_expression -> OUTSTREAM TEXT print_action output_expression .)


state 193

    (24) output_expression -> OUTSTREAM expression print_action output_expression .

    SEMICOLON       reduce using rule 24 (output_expression -> OUTSTREAM expression print_action output_expression .)


state 194

    (59) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN . while_action_2 function_block while_action_3
    (61) while_action_2 -> .

    LBRACE          reduce using rule 61 (while_action_2 -> .)

    while_action_2                 shift and go to state 200

state 195

    (67) for_expression -> assignation for_action_1 SEMICOLON . expression for_action_2 SEMICOLON assignation for_action_3
    (68) for_expression -> assignation for_action_1 SEMICOLON . expression for_action_2 SEMICOLON unary_operation for_action_3
    (73) expression -> . simple_expression
    (74) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (80) simple_expression -> . term expression_action_4
    (81) simple_expression -> . PLUS term expression_action_4
    (82) simple_expression -> . MINUS term expression_action_4
    (83) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (84) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (85) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (86) term -> . factor
    (87) term -> . term TIMES expression_action_3 factor expression_action_5
    (88) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (89) term -> . term MOD expression_action_3 factor expression_action_5
    (90) term -> . term AND expression_action_3 factor expression_action_5
    (91) factor -> . id expression_action_1
    (92) factor -> . number expression_action_1
    (93) factor -> . NOT id expression_action_1
    (94) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector
    (95) number -> . real
    (96) number -> . integer
    (105) expression_action_6 -> .
    (97) real -> . NUMBER DOT NUMBER
    (98) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 105 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    term                           shift and go to state 51
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    expression                     shift and go to state 201

state 196

    (66) for_sentence -> FOR LPAREN for_expression RPAREN function_block . for_action_4
    (72) for_action_4 -> .

    ID              reduce using rule 72 (for_action_4 -> .)
    COUT            reduce using rule 72 (for_action_4 -> .)
    CIN             reduce using rule 72 (for_action_4 -> .)
    PLUS            reduce using rule 72 (for_action_4 -> .)
    MINUS           reduce using rule 72 (for_action_4 -> .)
    IF              reduce using rule 72 (for_action_4 -> .)
    WHILE           reduce using rule 72 (for_action_4 -> .)
    DO              reduce using rule 72 (for_action_4 -> .)
    FOR             reduce using rule 72 (for_action_4 -> .)
    RBRACE          reduce using rule 72 (for_action_4 -> .)

    for_action_4                   shift and go to state 202

state 197

    (30) input_expression -> INSTREAM id input_action input_expression .

    SEMICOLON       reduce using rule 30 (input_expression -> INSTREAM id input_action input_expression .)


state 198

    (54) if_sentence -> IF LPAREN expression RPAREN if_action_1 . function_block empty if_action_2
    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 . function_block ELSE if_action_2 function_block if_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 203

state 199

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression . RPAREN do_while_action_2 SEMICOLON
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 204
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70


state 200

    (59) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 . function_block while_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 205

state 201

    (67) for_expression -> assignation for_action_1 SEMICOLON expression . for_action_2 SEMICOLON assignation for_action_3
    (68) for_expression -> assignation for_action_1 SEMICOLON expression . for_action_2 SEMICOLON unary_operation for_action_3
    (74) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (75) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (76) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (77) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (78) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (79) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) for_action_2 -> .

    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 75
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 73
    GREATER_OR_EQUAL_THAN shift and go to state 70
    SEMICOLON       reduce using rule 70 (for_action_2 -> .)

    for_action_2                   shift and go to state 206

state 202

    (66) for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .

    ID              reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    COUT            reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    CIN             reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    PLUS            reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    MINUS           reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    IF              reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    WHILE           reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    DO              reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    FOR             reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    RBRACE          reduce using rule 66 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)


state 203

    (54) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block . empty if_action_2
    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block . ELSE if_action_2 function_block if_action_3
    (99) empty -> .

    ELSE            shift and go to state 207
    ID              reduce using rule 99 (empty -> .)
    COUT            reduce using rule 99 (empty -> .)
    CIN             reduce using rule 99 (empty -> .)
    PLUS            reduce using rule 99 (empty -> .)
    MINUS           reduce using rule 99 (empty -> .)
    IF              reduce using rule 99 (empty -> .)
    WHILE           reduce using rule 99 (empty -> .)
    DO              reduce using rule 99 (empty -> .)
    FOR             reduce using rule 99 (empty -> .)
    RBRACE          reduce using rule 99 (empty -> .)

    empty                          shift and go to state 208

state 204

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN . do_while_action_2 SEMICOLON
    (65) do_while_action_2 -> .

    SEMICOLON       reduce using rule 65 (do_while_action_2 -> .)

    do_while_action_2              shift and go to state 209

state 205

    (59) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block . while_action_3
    (62) while_action_3 -> .

    ID              reduce using rule 62 (while_action_3 -> .)
    COUT            reduce using rule 62 (while_action_3 -> .)
    CIN             reduce using rule 62 (while_action_3 -> .)
    PLUS            reduce using rule 62 (while_action_3 -> .)
    MINUS           reduce using rule 62 (while_action_3 -> .)
    IF              reduce using rule 62 (while_action_3 -> .)
    WHILE           reduce using rule 62 (while_action_3 -> .)
    DO              reduce using rule 62 (while_action_3 -> .)
    FOR             reduce using rule 62 (while_action_3 -> .)
    RBRACE          reduce using rule 62 (while_action_3 -> .)

    while_action_3                 shift and go to state 210

state 206

    (67) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 . SEMICOLON assignation for_action_3
    (68) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 . SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 211


state 207

    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE . if_action_2 function_block if_action_3
    (57) if_action_2 -> .

    LBRACE          reduce using rule 57 (if_action_2 -> .)

    if_action_2                    shift and go to state 212

state 208

    (54) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty . if_action_2
    (57) if_action_2 -> .

    ID              reduce using rule 57 (if_action_2 -> .)
    COUT            reduce using rule 57 (if_action_2 -> .)
    CIN             reduce using rule 57 (if_action_2 -> .)
    PLUS            reduce using rule 57 (if_action_2 -> .)
    MINUS           reduce using rule 57 (if_action_2 -> .)
    IF              reduce using rule 57 (if_action_2 -> .)
    WHILE           reduce using rule 57 (if_action_2 -> .)
    DO              reduce using rule 57 (if_action_2 -> .)
    FOR             reduce using rule 57 (if_action_2 -> .)
    RBRACE          reduce using rule 57 (if_action_2 -> .)

    if_action_2                    shift and go to state 213

state 209

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 . SEMICOLON

    SEMICOLON       shift and go to state 214


state 210

    (59) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .

    ID              reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    COUT            reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    CIN             reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    PLUS            reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    MINUS           reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    IF              reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    WHILE           reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    DO              reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    FOR             reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    RBRACE          reduce using rule 59 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)


state 211

    (67) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON . assignation for_action_3
    (68) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON . unary_operation for_action_3
    (36) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (40) unary_operation -> . ID PLUS PLUS
    (41) unary_operation -> . ID MINUS MINUS
    (42) unary_operation -> . PLUS PLUS ID
    (43) unary_operation -> . MINUS MINUS ID
    (46) id -> . ID
    (47) id -> . ID vector
    (48) id -> . ID vector vector

    ID              shift and go to state 217
    PLUS            shift and go to state 108
    MINUS           shift and go to state 106

    assignation                    shift and go to state 215
    unary_operation                shift and go to state 216
    id                             shift and go to state 2

state 212

    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 . function_block if_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 218

state 213

    (54) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .

    ID              reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    COUT            reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    CIN             reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    PLUS            reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    MINUS           reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    IF              reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    WHILE           reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    DO              reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    FOR             reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    RBRACE          reduce using rule 54 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)


state 214

    (63) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .

    ID              reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    COUT            reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    CIN             reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    PLUS            reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    MINUS           reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    IF              reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    WHILE           reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    DO              reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    FOR             reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    RBRACE          reduce using rule 63 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)


state 215

    (67) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation . for_action_3
    (71) for_action_3 -> .

    RPAREN          reduce using rule 71 (for_action_3 -> .)

    for_action_3                   shift and go to state 219

state 216

    (68) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation . for_action_3
    (71) for_action_3 -> .

    RPAREN          reduce using rule 71 (for_action_3 -> .)

    for_action_3                   shift and go to state 220

state 217

    (40) unary_operation -> ID . PLUS PLUS
    (41) unary_operation -> ID . MINUS MINUS
    (46) id -> ID .
    (47) id -> ID . vector
    (48) id -> ID . vector vector
    (49) vector -> . LBRACKET integer RBRACKET
    (50) vector -> . LBRACKET ID RBRACKET
    (51) vector -> . LBRACKET empty RBRACKET

    PLUS            shift and go to state 149
    MINUS           shift and go to state 151
    EQUAL           reduce using rule 46 (id -> ID .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20

state 218

    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block . if_action_3
    (58) if_action_3 -> .

    ID              reduce using rule 58 (if_action_3 -> .)
    COUT            reduce using rule 58 (if_action_3 -> .)
    CIN             reduce using rule 58 (if_action_3 -> .)
    PLUS            reduce using rule 58 (if_action_3 -> .)
    MINUS           reduce using rule 58 (if_action_3 -> .)
    IF              reduce using rule 58 (if_action_3 -> .)
    WHILE           reduce using rule 58 (if_action_3 -> .)
    DO              reduce using rule 58 (if_action_3 -> .)
    FOR             reduce using rule 58 (if_action_3 -> .)
    RBRACE          reduce using rule 58 (if_action_3 -> .)

    if_action_3                    shift and go to state 221

state 219

    (67) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3 .

    RPAREN          reduce using rule 67 (for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3 .)


state 220

    (68) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3 .

    RPAREN          reduce using rule 68 (for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3 .)


state 221

    (55) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .

    ID              reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    COUT            reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    CIN             reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    PLUS            reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    MINUS           reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    IF              reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    WHILE           reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    DO              reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    FOR             reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    RBRACE          reduce using rule 55 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)

