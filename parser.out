Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
Rule 7     main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
Rule 8     start_function_action -> <empty>
Rule 9     start_main_function_action -> <empty>
Rule 10    end_function_action -> <empty>
Rule 11    function_block -> LBRACE instruction RBRACE
Rule 12    instruction -> proposition instruction
Rule 13    instruction -> empty
Rule 14    proposition -> function_call SEMICOLON
Rule 15    proposition -> assignation SEMICOLON
Rule 16    proposition -> print SEMICOLON
Rule 17    proposition -> input SEMICOLON
Rule 18    proposition -> unary_operation SEMICOLON
Rule 19    proposition -> if_sentence
Rule 20    proposition -> while_sentence
Rule 21    proposition -> do_while_sentence
Rule 22    proposition -> for_sentence
Rule 23    print -> COUT output_expression
Rule 24    output_expression -> OUTSTREAM expression print_action output_expression
Rule 25    output_expression -> OUTSTREAM expression print_action
Rule 26    output_expression -> OUTSTREAM TEXT print_action output_expression
Rule 27    output_expression -> OUTSTREAM TEXT print_action
Rule 28    output_expression -> OUTSTREAM ENDL print_action output_expression
Rule 29    output_expression -> OUTSTREAM ENDL print_action
Rule 30    print_action -> <empty>
Rule 31    input -> CIN input_expression
Rule 32    input_expression -> INSTREAM id input_action input_expression
Rule 33    input_expression -> INSTREAM id input_action
Rule 34    input_action -> <empty>
Rule 35    declaration -> type variables
Rule 36    type -> INT
Rule 37    type -> FLOAT
Rule 38    assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
Rule 39    assignation_action_1 -> <empty>
Rule 40    assignation_action_2 -> <empty>
Rule 41    assignation_action_3 -> <empty>
Rule 42    unary_operation -> ID PLUS PLUS
Rule 43    unary_operation -> ID MINUS MINUS
Rule 44    unary_operation -> PLUS PLUS ID
Rule 45    unary_operation -> MINUS MINUS ID
Rule 46    variables -> id COMMA variables
Rule 47    variables -> id
Rule 48    id -> ID
Rule 49    id -> ID mark_vector vector
Rule 50    id -> ID mark_vector vector vector
Rule 51    mark_vector -> <empty>
Rule 52    vector -> LBRACKET integer vector_action RBRACKET
Rule 53    vector -> LBRACKET ID vector_action RBRACKET
Rule 54    vector_action -> <empty>
Rule 55    function_call -> ID function_call_action LPAREN RPAREN
Rule 56    function_call_action -> <empty>
Rule 57    if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2
Rule 58    if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
Rule 59    if_action_1 -> <empty>
Rule 60    if_action_2 -> <empty>
Rule 61    if_action_3 -> <empty>
Rule 62    while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3
Rule 63    while_action_1 -> <empty>
Rule 64    while_action_2 -> <empty>
Rule 65    while_action_3 -> <empty>
Rule 66    do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON
Rule 67    do_while_action_1 -> <empty>
Rule 68    do_while_action_2 -> <empty>
Rule 69    for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4
Rule 70    for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3
Rule 71    for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3
Rule 72    for_action_1 -> <empty>
Rule 73    for_action_2 -> <empty>
Rule 74    for_action_3 -> <empty>
Rule 75    for_action_4 -> <empty>
Rule 76    expression_1 -> expression
Rule 77    expression_1 -> expression AND expression_action_3 expression expression_action_5
Rule 78    expression -> simple_expression
Rule 79    expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9
Rule 80    expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 81    expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 82    expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
Rule 83    expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9
Rule 84    expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 85    simple_expression -> term expression_action_4
Rule 86    simple_expression -> PLUS term expression_action_4
Rule 87    simple_expression -> MINUS term expression_action_4
Rule 88    simple_expression -> simple_expression OR expression_action_2 term expression_action_4
Rule 89    simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4
Rule 90    simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4
Rule 91    term -> factor
Rule 92    term -> term TIMES expression_action_3 factor expression_action_5
Rule 93    term -> term DIVIDE expression_action_3 factor expression_action_5
Rule 94    term -> term MOD expression_action_3 factor expression_action_5
Rule 95    factor -> id expression_action_1
Rule 96    factor -> number expression_action_1
Rule 97    factor -> NOT id expression_action_1
Rule 98    factor -> expression_action_6 LPAREN expression RPAREN expression_action_7
Rule 99    number -> real
Rule 100   number -> integer
Rule 101   real -> NUMBER DOT NUMBER
Rule 102   integer -> NUMBER
Rule 103   empty -> <empty>
Rule 104   expression_action_1 -> <empty>
Rule 105   expression_action_2 -> <empty>
Rule 106   expression_action_3 -> <empty>
Rule 107   expression_action_4 -> <empty>
Rule 108   expression_action_5 -> <empty>
Rule 109   expression_action_6 -> <empty>
Rule 110   expression_action_7 -> <empty>
Rule 111   expression_action_8 -> <empty>
Rule 112   expression_action_9 -> <empty>

Terminals, with rules where they appear

AND                  : 77
CIN                  : 31
COMMA                : 46
COUT                 : 23
DIFFERENT_THAN       : 82
DIVIDE               : 93
DO                   : 66
DOT                  : 101
ELSE                 : 58
ENDL                 : 28 29
EQUAL                : 38
EQUAL_THAN           : 81
FLOAT                : 37
FOR                  : 69
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 84
GREATER_THAN         : 83
ID                   : 6 42 43 44 45 48 49 50 53 55
IF                   : 57 58
INSTREAM             : 32 33
INT                  : 36
LBRACE               : 11
LBRACKET             : 52 53
LESS_OR_EQUAL_THAN   : 80
LESS_THAN            : 79
LPAREN               : 6 7 55 57 58 62 66 69 98
MAIN                 : 7
MINUS                : 43 43 45 45 87 90
MOD                  : 94
NOT                  : 97
NUMBER               : 101 101 102
OR                   : 88
OUTSTREAM            : 24 25 26 27 28 29
PLUS                 : 42 42 44 44 86 89
RBRACE               : 11
RBRACKET             : 52 53
RPAREN               : 6 7 55 57 58 62 66 69 98
SEMICOLON            : 2 3 14 15 16 17 18 66 70 70 71 71
TEXT                 : 26 27
TIMES                : 92
WHILE                : 62 66
error                : 

Nonterminals, with rules where they appear

assignation          : 3 15 70 70 71
assignation_action_1 : 38
assignation_action_2 : 38
assignation_action_3 : 38
declaration          : 2
do_while_action_1    : 66
do_while_action_2    : 66
do_while_sentence    : 21
empty                : 13 57
end_function_action  : 6
expression           : 24 25 76 77 77 79 80 81 82 83 84 98
expression_1         : 38 57 58 62 66 70 71
expression_action_1  : 95 96 97
expression_action_2  : 88 89 90
expression_action_3  : 77 92 93 94
expression_action_4  : 85 86 87 88 89 90
expression_action_5  : 77 92 93 94
expression_action_6  : 98
expression_action_7  : 98
expression_action_8  : 79 80 81 82 83 84
expression_action_9  : 79 80 81 82 83 84
factor               : 91 92 93 94
for_action_1         : 70 71
for_action_2         : 70 71
for_action_3         : 70 71
for_action_4         : 69
for_expression       : 69
for_sentence         : 22
function_block       : 6 7 57 58 58 62 66 69
function_call        : 14
function_call_action : 55
id                   : 32 33 38 46 47 95 97
if_action_1          : 57 58
if_action_2          : 57 58
if_action_3          : 58
if_sentence          : 19
input                : 17
input_action         : 32 33
input_expression     : 31 32
instruction          : 11 12
integer              : 52 100
main_function        : 5
mark_vector          : 49 50
normal_function      : 4
number               : 96
output_expression    : 23 24 26 28
print                : 16
print_action         : 24 25 26 27 28 29
program              : 0
program_block        : 1 2 3 4
proposition          : 12
real                 : 99
simple_expression    : 78 79 80 81 82 83 84 88 89 90
start_function_action : 6
start_main_function_action : 7
term                 : 85 86 87 88 89 90 92 93 94
type                 : 35
unary_operation      : 18 71
variables            : 35 46
vector               : 49 50 50
vector_action        : 52 53
while_action_1       : 62
while_action_2       : 62
while_action_3       : 62
while_sentence       : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (35) declaration -> . type variables
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (36) type -> . INT
    (37) type -> . FLOAT
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 4
    program                        shift and go to state 3
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 1

    (5) program_block -> main_function .

    $end            reduce using rule 5 (program_block -> main_function .)


state 2

    (38) assignation -> id . assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (39) assignation_action_1 -> .

    EQUAL           reduce using rule 39 (assignation_action_1 -> .)

    assignation_action_1           shift and go to state 13

state 3

    (0) S' -> program .



state 4

    (1) program -> program_block .

    $end            reduce using rule 1 (program -> program_block .)


state 5

    (35) declaration -> type . variables
    (46) variables -> . id COMMA variables
    (47) variables -> . id
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 14
    id                             shift and go to state 15

state 6

    (6) normal_function -> FUNCTION . ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> FUNCTION . MAIN start_main_function_action LPAREN RPAREN function_block

    ID              shift and go to state 17
    MAIN            shift and go to state 16


state 7

    (2) program_block -> declaration . SEMICOLON program_block

    SEMICOLON       shift and go to state 18


state 8

    (48) id -> ID .
    (49) id -> ID . mark_vector vector
    (50) id -> ID . mark_vector vector vector
    (51) mark_vector -> .

    TIMES           reduce using rule 48 (id -> ID .)
    DIVIDE          reduce using rule 48 (id -> ID .)
    MOD             reduce using rule 48 (id -> ID .)
    OR              reduce using rule 48 (id -> ID .)
    PLUS            reduce using rule 48 (id -> ID .)
    MINUS           reduce using rule 48 (id -> ID .)
    AND             reduce using rule 48 (id -> ID .)
    LESS_THAN       reduce using rule 48 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 48 (id -> ID .)
    EQUAL_THAN      reduce using rule 48 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 48 (id -> ID .)
    GREATER_THAN    reduce using rule 48 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 48 (id -> ID .)
    SEMICOLON       reduce using rule 48 (id -> ID .)
    RPAREN          reduce using rule 48 (id -> ID .)
    OUTSTREAM       reduce using rule 48 (id -> ID .)
    EQUAL           reduce using rule 48 (id -> ID .)
    INSTREAM        reduce using rule 48 (id -> ID .)
    COMMA           reduce using rule 48 (id -> ID .)
    LBRACKET        reduce using rule 51 (mark_vector -> .)

    mark_vector                    shift and go to state 19

state 9

    (3) program_block -> assignation . SEMICOLON program_block

    SEMICOLON       shift and go to state 20


state 10

    (36) type -> INT .

    ID              reduce using rule 36 (type -> INT .)


state 11

    (4) program_block -> normal_function . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (35) declaration -> . type variables
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (36) type -> . INT
    (37) type -> . FLOAT
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 21
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 12

    (37) type -> FLOAT .

    ID              reduce using rule 37 (type -> FLOAT .)


state 13

    (38) assignation -> id assignation_action_1 . EQUAL assignation_action_2 expression_1 assignation_action_3

    EQUAL           shift and go to state 22


state 14

    (35) declaration -> type variables .

    SEMICOLON       reduce using rule 35 (declaration -> type variables .)


state 15

    (46) variables -> id . COMMA variables
    (47) variables -> id .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 47 (variables -> id .)


state 16

    (7) main_function -> FUNCTION MAIN . start_main_function_action LPAREN RPAREN function_block
    (9) start_main_function_action -> .

    LPAREN          reduce using rule 9 (start_main_function_action -> .)

    start_main_function_action     shift and go to state 24

state 17

    (6) normal_function -> FUNCTION ID . start_function_action LPAREN RPAREN function_block end_function_action
    (8) start_function_action -> .

    LPAREN          reduce using rule 8 (start_function_action -> .)

    start_function_action          shift and go to state 25

state 18

    (2) program_block -> declaration SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (35) declaration -> . type variables
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (36) type -> . INT
    (37) type -> . FLOAT
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    declaration                    shift and go to state 7
    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 26
    type                           shift and go to state 5
    id                             shift and go to state 2

state 19

    (49) id -> ID mark_vector . vector
    (50) id -> ID mark_vector . vector vector
    (52) vector -> . LBRACKET integer vector_action RBRACKET
    (53) vector -> . LBRACKET ID vector_action RBRACKET

    LBRACKET        shift and go to state 27

    vector                         shift and go to state 28

state 20

    (3) program_block -> assignation SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (35) declaration -> . type variables
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (6) normal_function -> . FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action
    (7) main_function -> . FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block
    (36) type -> . INT
    (37) type -> . FLOAT
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 11
    program_block                  shift and go to state 29
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 21

    (4) program_block -> normal_function program_block .

    $end            reduce using rule 4 (program_block -> normal_function program_block .)


state 22

    (38) assignation -> id assignation_action_1 EQUAL . assignation_action_2 expression_1 assignation_action_3
    (40) assignation_action_2 -> .

    PLUS            reduce using rule 40 (assignation_action_2 -> .)
    MINUS           reduce using rule 40 (assignation_action_2 -> .)
    NOT             reduce using rule 40 (assignation_action_2 -> .)
    ID              reduce using rule 40 (assignation_action_2 -> .)
    NUMBER          reduce using rule 40 (assignation_action_2 -> .)
    LPAREN          reduce using rule 40 (assignation_action_2 -> .)

    assignation_action_2           shift and go to state 30

state 23

    (46) variables -> id COMMA . variables
    (46) variables -> . id COMMA variables
    (47) variables -> . id
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 31
    id                             shift and go to state 15

state 24

    (7) main_function -> FUNCTION MAIN start_main_function_action . LPAREN RPAREN function_block

    LPAREN          shift and go to state 32


state 25

    (6) normal_function -> FUNCTION ID start_function_action . LPAREN RPAREN function_block end_function_action

    LPAREN          shift and go to state 33


state 26

    (2) program_block -> declaration SEMICOLON program_block .

    $end            reduce using rule 2 (program_block -> declaration SEMICOLON program_block .)


state 27

    (52) vector -> LBRACKET . integer vector_action RBRACKET
    (53) vector -> LBRACKET . ID vector_action RBRACKET
    (102) integer -> . NUMBER

    ID              shift and go to state 36
    NUMBER          shift and go to state 34

    integer                        shift and go to state 35

state 28

    (49) id -> ID mark_vector vector .
    (50) id -> ID mark_vector vector . vector
    (52) vector -> . LBRACKET integer vector_action RBRACKET
    (53) vector -> . LBRACKET ID vector_action RBRACKET

    TIMES           reduce using rule 49 (id -> ID mark_vector vector .)
    DIVIDE          reduce using rule 49 (id -> ID mark_vector vector .)
    MOD             reduce using rule 49 (id -> ID mark_vector vector .)
    OR              reduce using rule 49 (id -> ID mark_vector vector .)
    PLUS            reduce using rule 49 (id -> ID mark_vector vector .)
    MINUS           reduce using rule 49 (id -> ID mark_vector vector .)
    AND             reduce using rule 49 (id -> ID mark_vector vector .)
    LESS_THAN       reduce using rule 49 (id -> ID mark_vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 49 (id -> ID mark_vector vector .)
    EQUAL_THAN      reduce using rule 49 (id -> ID mark_vector vector .)
    DIFFERENT_THAN  reduce using rule 49 (id -> ID mark_vector vector .)
    GREATER_THAN    reduce using rule 49 (id -> ID mark_vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 49 (id -> ID mark_vector vector .)
    SEMICOLON       reduce using rule 49 (id -> ID mark_vector vector .)
    RPAREN          reduce using rule 49 (id -> ID mark_vector vector .)
    OUTSTREAM       reduce using rule 49 (id -> ID mark_vector vector .)
    EQUAL           reduce using rule 49 (id -> ID mark_vector vector .)
    INSTREAM        reduce using rule 49 (id -> ID mark_vector vector .)
    COMMA           reduce using rule 49 (id -> ID mark_vector vector .)
    LBRACKET        shift and go to state 27

    vector                         shift and go to state 37

state 29

    (3) program_block -> assignation SEMICOLON program_block .

    $end            reduce using rule 3 (program_block -> assignation SEMICOLON program_block .)


state 30

    (38) assignation -> id assignation_action_1 EQUAL assignation_action_2 . expression_1 assignation_action_3
    (76) expression_1 -> . expression
    (77) expression_1 -> . expression AND expression_action_3 expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    number                         shift and go to state 41
    simple_expression              shift and go to state 40
    id                             shift and go to state 42
    factor                         shift and go to state 44
    real                           shift and go to state 45
    expression_1                   shift and go to state 47
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    term                           shift and go to state 48
    expression                     shift and go to state 50

state 31

    (46) variables -> id COMMA variables .

    SEMICOLON       reduce using rule 46 (variables -> id COMMA variables .)


state 32

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN . RPAREN function_block

    RPAREN          shift and go to state 52


state 33

    (6) normal_function -> FUNCTION ID start_function_action LPAREN . RPAREN function_block end_function_action

    RPAREN          shift and go to state 53


state 34

    (102) integer -> NUMBER .

    RBRACKET        reduce using rule 102 (integer -> NUMBER .)


state 35

    (52) vector -> LBRACKET integer . vector_action RBRACKET
    (54) vector_action -> .

    RBRACKET        reduce using rule 54 (vector_action -> .)

    vector_action                  shift and go to state 54

state 36

    (53) vector -> LBRACKET ID . vector_action RBRACKET
    (54) vector_action -> .

    RBRACKET        reduce using rule 54 (vector_action -> .)

    vector_action                  shift and go to state 55

state 37

    (50) id -> ID mark_vector vector vector .

    TIMES           reduce using rule 50 (id -> ID mark_vector vector vector .)
    DIVIDE          reduce using rule 50 (id -> ID mark_vector vector vector .)
    MOD             reduce using rule 50 (id -> ID mark_vector vector vector .)
    OR              reduce using rule 50 (id -> ID mark_vector vector vector .)
    PLUS            reduce using rule 50 (id -> ID mark_vector vector vector .)
    MINUS           reduce using rule 50 (id -> ID mark_vector vector vector .)
    AND             reduce using rule 50 (id -> ID mark_vector vector vector .)
    LESS_THAN       reduce using rule 50 (id -> ID mark_vector vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 50 (id -> ID mark_vector vector vector .)
    EQUAL_THAN      reduce using rule 50 (id -> ID mark_vector vector vector .)
    DIFFERENT_THAN  reduce using rule 50 (id -> ID mark_vector vector vector .)
    GREATER_THAN    reduce using rule 50 (id -> ID mark_vector vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 50 (id -> ID mark_vector vector vector .)
    SEMICOLON       reduce using rule 50 (id -> ID mark_vector vector vector .)
    RPAREN          reduce using rule 50 (id -> ID mark_vector vector vector .)
    OUTSTREAM       reduce using rule 50 (id -> ID mark_vector vector vector .)
    EQUAL           reduce using rule 50 (id -> ID mark_vector vector vector .)
    INSTREAM        reduce using rule 50 (id -> ID mark_vector vector vector .)
    COMMA           reduce using rule 50 (id -> ID mark_vector vector vector .)


state 38

    (100) number -> integer .

    TIMES           reduce using rule 100 (number -> integer .)
    DIVIDE          reduce using rule 100 (number -> integer .)
    MOD             reduce using rule 100 (number -> integer .)
    OR              reduce using rule 100 (number -> integer .)
    PLUS            reduce using rule 100 (number -> integer .)
    MINUS           reduce using rule 100 (number -> integer .)
    AND             reduce using rule 100 (number -> integer .)
    LESS_THAN       reduce using rule 100 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 100 (number -> integer .)
    EQUAL_THAN      reduce using rule 100 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 100 (number -> integer .)
    GREATER_THAN    reduce using rule 100 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 100 (number -> integer .)
    SEMICOLON       reduce using rule 100 (number -> integer .)
    RPAREN          reduce using rule 100 (number -> integer .)
    OUTSTREAM       reduce using rule 100 (number -> integer .)


state 39

    (87) simple_expression -> MINUS . term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 56
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 44
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 40

    (78) expression -> simple_expression .
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4

    AND             reduce using rule 78 (expression -> simple_expression .)
    LESS_THAN       reduce using rule 78 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 78 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 78 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 78 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 78 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 78 (expression -> simple_expression .)
    RPAREN          reduce using rule 78 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 78 (expression -> simple_expression .)
    OUTSTREAM       reduce using rule 78 (expression -> simple_expression .)
    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57


state 41

    (96) factor -> number . expression_action_1
    (104) expression_action_1 -> .

    TIMES           reduce using rule 104 (expression_action_1 -> .)
    DIVIDE          reduce using rule 104 (expression_action_1 -> .)
    MOD             reduce using rule 104 (expression_action_1 -> .)
    OR              reduce using rule 104 (expression_action_1 -> .)
    PLUS            reduce using rule 104 (expression_action_1 -> .)
    MINUS           reduce using rule 104 (expression_action_1 -> .)
    AND             reduce using rule 104 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_1 -> .)
    RPAREN          reduce using rule 104 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_1 -> .)

    expression_action_1            shift and go to state 60

state 42

    (95) factor -> id . expression_action_1
    (104) expression_action_1 -> .

    TIMES           reduce using rule 104 (expression_action_1 -> .)
    DIVIDE          reduce using rule 104 (expression_action_1 -> .)
    MOD             reduce using rule 104 (expression_action_1 -> .)
    OR              reduce using rule 104 (expression_action_1 -> .)
    PLUS            reduce using rule 104 (expression_action_1 -> .)
    MINUS           reduce using rule 104 (expression_action_1 -> .)
    AND             reduce using rule 104 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_1 -> .)
    RPAREN          reduce using rule 104 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_1 -> .)

    expression_action_1            shift and go to state 61

state 43

    (86) simple_expression -> PLUS . term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 62
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 44
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 44

    (91) term -> factor .

    TIMES           reduce using rule 91 (term -> factor .)
    DIVIDE          reduce using rule 91 (term -> factor .)
    MOD             reduce using rule 91 (term -> factor .)
    OR              reduce using rule 91 (term -> factor .)
    PLUS            reduce using rule 91 (term -> factor .)
    MINUS           reduce using rule 91 (term -> factor .)
    AND             reduce using rule 91 (term -> factor .)
    LESS_THAN       reduce using rule 91 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 91 (term -> factor .)
    EQUAL_THAN      reduce using rule 91 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 91 (term -> factor .)
    GREATER_THAN    reduce using rule 91 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 91 (term -> factor .)
    SEMICOLON       reduce using rule 91 (term -> factor .)
    RPAREN          reduce using rule 91 (term -> factor .)
    OUTSTREAM       reduce using rule 91 (term -> factor .)


state 45

    (99) number -> real .

    TIMES           reduce using rule 99 (number -> real .)
    DIVIDE          reduce using rule 99 (number -> real .)
    MOD             reduce using rule 99 (number -> real .)
    OR              reduce using rule 99 (number -> real .)
    PLUS            reduce using rule 99 (number -> real .)
    MINUS           reduce using rule 99 (number -> real .)
    AND             reduce using rule 99 (number -> real .)
    LESS_THAN       reduce using rule 99 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 99 (number -> real .)
    EQUAL_THAN      reduce using rule 99 (number -> real .)
    DIFFERENT_THAN  reduce using rule 99 (number -> real .)
    GREATER_THAN    reduce using rule 99 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 99 (number -> real .)
    SEMICOLON       reduce using rule 99 (number -> real .)
    RPAREN          reduce using rule 99 (number -> real .)
    OUTSTREAM       reduce using rule 99 (number -> real .)


state 46

    (101) real -> NUMBER . DOT NUMBER
    (102) integer -> NUMBER .

    DOT             shift and go to state 63
    TIMES           reduce using rule 102 (integer -> NUMBER .)
    DIVIDE          reduce using rule 102 (integer -> NUMBER .)
    MOD             reduce using rule 102 (integer -> NUMBER .)
    OR              reduce using rule 102 (integer -> NUMBER .)
    PLUS            reduce using rule 102 (integer -> NUMBER .)
    MINUS           reduce using rule 102 (integer -> NUMBER .)
    AND             reduce using rule 102 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 102 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 102 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 102 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 102 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (integer -> NUMBER .)
    SEMICOLON       reduce using rule 102 (integer -> NUMBER .)
    RPAREN          reduce using rule 102 (integer -> NUMBER .)
    OUTSTREAM       reduce using rule 102 (integer -> NUMBER .)


state 47

    (38) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 . assignation_action_3
    (41) assignation_action_3 -> .

    SEMICOLON       reduce using rule 41 (assignation_action_3 -> .)
    RPAREN          reduce using rule 41 (assignation_action_3 -> .)

    assignation_action_3           shift and go to state 64

state 48

    (85) simple_expression -> term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 67

state 49

    (98) factor -> expression_action_6 . LPAREN expression RPAREN expression_action_7

    LPAREN          shift and go to state 69


state 50

    (76) expression_1 -> expression .
    (77) expression_1 -> expression . AND expression_action_3 expression expression_action_5
    (79) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          reduce using rule 76 (expression_1 -> expression .)
    SEMICOLON       reduce using rule 76 (expression_1 -> expression .)
    AND             shift and go to state 70
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 73
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 75
    GREATER_OR_EQUAL_THAN shift and go to state 72


state 51

    (97) factor -> NOT . id expression_action_1
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 8

    id                             shift and go to state 77

state 52

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN . function_block
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 79

state 53

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN . function_block end_function_action
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 80

state 54

    (52) vector -> LBRACKET integer vector_action . RBRACKET

    RBRACKET        shift and go to state 81


state 55

    (53) vector -> LBRACKET ID vector_action . RBRACKET

    RBRACKET        shift and go to state 82


state 56

    (87) simple_expression -> MINUS term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 83

state 57

    (90) simple_expression -> simple_expression MINUS . expression_action_2 term expression_action_4
    (105) expression_action_2 -> .

    NOT             reduce using rule 105 (expression_action_2 -> .)
    ID              reduce using rule 105 (expression_action_2 -> .)
    NUMBER          reduce using rule 105 (expression_action_2 -> .)
    LPAREN          reduce using rule 105 (expression_action_2 -> .)

    expression_action_2            shift and go to state 84

state 58

    (89) simple_expression -> simple_expression PLUS . expression_action_2 term expression_action_4
    (105) expression_action_2 -> .

    NOT             reduce using rule 105 (expression_action_2 -> .)
    ID              reduce using rule 105 (expression_action_2 -> .)
    NUMBER          reduce using rule 105 (expression_action_2 -> .)
    LPAREN          reduce using rule 105 (expression_action_2 -> .)

    expression_action_2            shift and go to state 85

state 59

    (88) simple_expression -> simple_expression OR . expression_action_2 term expression_action_4
    (105) expression_action_2 -> .

    NOT             reduce using rule 105 (expression_action_2 -> .)
    ID              reduce using rule 105 (expression_action_2 -> .)
    NUMBER          reduce using rule 105 (expression_action_2 -> .)
    LPAREN          reduce using rule 105 (expression_action_2 -> .)

    expression_action_2            shift and go to state 86

state 60

    (96) factor -> number expression_action_1 .

    TIMES           reduce using rule 96 (factor -> number expression_action_1 .)
    DIVIDE          reduce using rule 96 (factor -> number expression_action_1 .)
    MOD             reduce using rule 96 (factor -> number expression_action_1 .)
    OR              reduce using rule 96 (factor -> number expression_action_1 .)
    PLUS            reduce using rule 96 (factor -> number expression_action_1 .)
    MINUS           reduce using rule 96 (factor -> number expression_action_1 .)
    AND             reduce using rule 96 (factor -> number expression_action_1 .)
    LESS_THAN       reduce using rule 96 (factor -> number expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 96 (factor -> number expression_action_1 .)
    EQUAL_THAN      reduce using rule 96 (factor -> number expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 96 (factor -> number expression_action_1 .)
    GREATER_THAN    reduce using rule 96 (factor -> number expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 96 (factor -> number expression_action_1 .)
    SEMICOLON       reduce using rule 96 (factor -> number expression_action_1 .)
    RPAREN          reduce using rule 96 (factor -> number expression_action_1 .)
    OUTSTREAM       reduce using rule 96 (factor -> number expression_action_1 .)


state 61

    (95) factor -> id expression_action_1 .

    TIMES           reduce using rule 95 (factor -> id expression_action_1 .)
    DIVIDE          reduce using rule 95 (factor -> id expression_action_1 .)
    MOD             reduce using rule 95 (factor -> id expression_action_1 .)
    OR              reduce using rule 95 (factor -> id expression_action_1 .)
    PLUS            reduce using rule 95 (factor -> id expression_action_1 .)
    MINUS           reduce using rule 95 (factor -> id expression_action_1 .)
    AND             reduce using rule 95 (factor -> id expression_action_1 .)
    LESS_THAN       reduce using rule 95 (factor -> id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 95 (factor -> id expression_action_1 .)
    EQUAL_THAN      reduce using rule 95 (factor -> id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 95 (factor -> id expression_action_1 .)
    GREATER_THAN    reduce using rule 95 (factor -> id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 95 (factor -> id expression_action_1 .)
    SEMICOLON       reduce using rule 95 (factor -> id expression_action_1 .)
    RPAREN          reduce using rule 95 (factor -> id expression_action_1 .)
    OUTSTREAM       reduce using rule 95 (factor -> id expression_action_1 .)


state 62

    (86) simple_expression -> PLUS term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 87

state 63

    (101) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 88


state 64

    (38) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3 .

    SEMICOLON       reduce using rule 38 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3 .)
    RPAREN          reduce using rule 38 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3 .)


state 65

    (93) term -> term DIVIDE . expression_action_3 factor expression_action_5
    (106) expression_action_3 -> .

    NOT             reduce using rule 106 (expression_action_3 -> .)
    ID              reduce using rule 106 (expression_action_3 -> .)
    NUMBER          reduce using rule 106 (expression_action_3 -> .)
    LPAREN          reduce using rule 106 (expression_action_3 -> .)

    expression_action_3            shift and go to state 89

state 66

    (92) term -> term TIMES . expression_action_3 factor expression_action_5
    (106) expression_action_3 -> .

    NOT             reduce using rule 106 (expression_action_3 -> .)
    ID              reduce using rule 106 (expression_action_3 -> .)
    NUMBER          reduce using rule 106 (expression_action_3 -> .)
    LPAREN          reduce using rule 106 (expression_action_3 -> .)

    expression_action_3            shift and go to state 90

state 67

    (85) simple_expression -> term expression_action_4 .

    OR              reduce using rule 85 (simple_expression -> term expression_action_4 .)
    PLUS            reduce using rule 85 (simple_expression -> term expression_action_4 .)
    MINUS           reduce using rule 85 (simple_expression -> term expression_action_4 .)
    AND             reduce using rule 85 (simple_expression -> term expression_action_4 .)
    LESS_THAN       reduce using rule 85 (simple_expression -> term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (simple_expression -> term expression_action_4 .)
    EQUAL_THAN      reduce using rule 85 (simple_expression -> term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 85 (simple_expression -> term expression_action_4 .)
    GREATER_THAN    reduce using rule 85 (simple_expression -> term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (simple_expression -> term expression_action_4 .)
    SEMICOLON       reduce using rule 85 (simple_expression -> term expression_action_4 .)
    RPAREN          reduce using rule 85 (simple_expression -> term expression_action_4 .)
    OUTSTREAM       reduce using rule 85 (simple_expression -> term expression_action_4 .)


state 68

    (94) term -> term MOD . expression_action_3 factor expression_action_5
    (106) expression_action_3 -> .

    NOT             reduce using rule 106 (expression_action_3 -> .)
    ID              reduce using rule 106 (expression_action_3 -> .)
    NUMBER          reduce using rule 106 (expression_action_3 -> .)
    LPAREN          reduce using rule 106 (expression_action_3 -> .)

    expression_action_3            shift and go to state 91

state 69

    (98) factor -> expression_action_6 LPAREN . expression RPAREN expression_action_7
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    expression                     shift and go to state 92
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 40

state 70

    (77) expression_1 -> expression AND . expression_action_3 expression expression_action_5
    (106) expression_action_3 -> .

    PLUS            reduce using rule 106 (expression_action_3 -> .)
    MINUS           reduce using rule 106 (expression_action_3 -> .)
    NOT             reduce using rule 106 (expression_action_3 -> .)
    ID              reduce using rule 106 (expression_action_3 -> .)
    NUMBER          reduce using rule 106 (expression_action_3 -> .)
    LPAREN          reduce using rule 106 (expression_action_3 -> .)

    expression_action_3            shift and go to state 93

state 71

    (81) expression -> expression EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 94

state 72

    (84) expression -> expression GREATER_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 95

state 73

    (80) expression -> expression LESS_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 96

state 74

    (82) expression -> expression DIFFERENT_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 97

state 75

    (83) expression -> expression GREATER_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 98

state 76

    (79) expression -> expression LESS_THAN . expression_action_8 simple_expression expression_action_9
    (111) expression_action_8 -> .

    PLUS            reduce using rule 111 (expression_action_8 -> .)
    MINUS           reduce using rule 111 (expression_action_8 -> .)
    NOT             reduce using rule 111 (expression_action_8 -> .)
    ID              reduce using rule 111 (expression_action_8 -> .)
    NUMBER          reduce using rule 111 (expression_action_8 -> .)
    LPAREN          reduce using rule 111 (expression_action_8 -> .)

    expression_action_8            shift and go to state 99

state 77

    (97) factor -> NOT id . expression_action_1
    (104) expression_action_1 -> .

    TIMES           reduce using rule 104 (expression_action_1 -> .)
    DIVIDE          reduce using rule 104 (expression_action_1 -> .)
    MOD             reduce using rule 104 (expression_action_1 -> .)
    OR              reduce using rule 104 (expression_action_1 -> .)
    PLUS            reduce using rule 104 (expression_action_1 -> .)
    MINUS           reduce using rule 104 (expression_action_1 -> .)
    AND             reduce using rule 104 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 104 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 104 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 104 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 104 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 104 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 104 (expression_action_1 -> .)
    RPAREN          reduce using rule 104 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 104 (expression_action_1 -> .)

    expression_action_1            shift and go to state 100

state 78

    (11) function_block -> LBRACE . instruction RBRACE
    (12) instruction -> . proposition instruction
    (13) instruction -> . empty
    (14) proposition -> . function_call SEMICOLON
    (15) proposition -> . assignation SEMICOLON
    (16) proposition -> . print SEMICOLON
    (17) proposition -> . input SEMICOLON
    (18) proposition -> . unary_operation SEMICOLON
    (19) proposition -> . if_sentence
    (20) proposition -> . while_sentence
    (21) proposition -> . do_while_sentence
    (22) proposition -> . for_sentence
    (103) empty -> .
    (55) function_call -> . ID function_call_action LPAREN RPAREN
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (23) print -> . COUT output_expression
    (31) input -> . CIN input_expression
    (42) unary_operation -> . ID PLUS PLUS
    (43) unary_operation -> . ID MINUS MINUS
    (44) unary_operation -> . PLUS PLUS ID
    (45) unary_operation -> . MINUS MINUS ID
    (57) if_sentence -> . IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2
    (58) if_sentence -> . IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (62) while_sentence -> . WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3
    (66) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON
    (69) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    RBRACE          reduce using rule 103 (empty -> .)
    ID              shift and go to state 117
    COUT            shift and go to state 102
    CIN             shift and go to state 116
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    IF              shift and go to state 118
    WHILE           shift and go to state 105
    DO              shift and go to state 101
    FOR             shift and go to state 115

    do_while_sentence              shift and go to state 103
    function_call                  shift and go to state 104
    proposition                    shift and go to state 106
    while_sentence                 shift and go to state 107
    id                             shift and go to state 2
    for_sentence                   shift and go to state 109
    print                          shift and go to state 111
    input                          shift and go to state 112
    unary_operation                shift and go to state 113
    empty                          shift and go to state 114
    assignation                    shift and go to state 119
    instruction                    shift and go to state 120
    if_sentence                    shift and go to state 121

state 79

    (7) main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block .

    $end            reduce using rule 7 (main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block .)


state 80

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block . end_function_action
    (10) end_function_action -> .

    FUNCTION        reduce using rule 10 (end_function_action -> .)
    INT             reduce using rule 10 (end_function_action -> .)
    FLOAT           reduce using rule 10 (end_function_action -> .)
    ID              reduce using rule 10 (end_function_action -> .)

    end_function_action            shift and go to state 122

state 81

    (52) vector -> LBRACKET integer vector_action RBRACKET .

    LBRACKET        reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    EQUAL           reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    COMMA           reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    SEMICOLON       reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    TIMES           reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    DIVIDE          reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    MOD             reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    OR              reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    PLUS            reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    MINUS           reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    AND             reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    LESS_THAN       reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    EQUAL_THAN      reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    DIFFERENT_THAN  reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    GREATER_THAN    reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    RPAREN          reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    OUTSTREAM       reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)
    INSTREAM        reduce using rule 52 (vector -> LBRACKET integer vector_action RBRACKET .)


state 82

    (53) vector -> LBRACKET ID vector_action RBRACKET .

    LBRACKET        reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    EQUAL           reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    COMMA           reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    SEMICOLON       reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    TIMES           reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    DIVIDE          reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    MOD             reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    OR              reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    PLUS            reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    MINUS           reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    AND             reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    LESS_THAN       reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    EQUAL_THAN      reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    DIFFERENT_THAN  reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    GREATER_THAN    reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    RPAREN          reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    OUTSTREAM       reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)
    INSTREAM        reduce using rule 53 (vector -> LBRACKET ID vector_action RBRACKET .)


state 83

    (87) simple_expression -> MINUS term expression_action_4 .

    OR              reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    PLUS            reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    MINUS           reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    AND             reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    LESS_THAN       reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    SEMICOLON       reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    RPAREN          reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 87 (simple_expression -> MINUS term expression_action_4 .)


state 84

    (90) simple_expression -> simple_expression MINUS expression_action_2 . term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 123
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 44
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 85

    (89) simple_expression -> simple_expression PLUS expression_action_2 . term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 124
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 44
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 86

    (88) simple_expression -> simple_expression OR expression_action_2 . term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 125
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 44
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 87

    (86) simple_expression -> PLUS term expression_action_4 .

    OR              reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    PLUS            reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    MINUS           reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    AND             reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    LESS_THAN       reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    SEMICOLON       reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    RPAREN          reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 86 (simple_expression -> PLUS term expression_action_4 .)


state 88

    (101) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    SEMICOLON       reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 101 (real -> NUMBER DOT NUMBER .)
    OUTSTREAM       reduce using rule 101 (real -> NUMBER DOT NUMBER .)


state 89

    (93) term -> term DIVIDE expression_action_3 . factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 126
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 90

    (92) term -> term TIMES expression_action_3 . factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 127
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 91

    (94) term -> term MOD expression_action_3 . factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    factor                         shift and go to state 128
    integer                        shift and go to state 38
    id                             shift and go to state 42

state 92

    (98) factor -> expression_action_6 LPAREN expression . RPAREN expression_action_7
    (79) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 129
    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 73
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 75
    GREATER_OR_EQUAL_THAN shift and go to state 72


state 93

    (77) expression_1 -> expression AND expression_action_3 . expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    expression                     shift and go to state 130
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 40

state 94

    (81) expression -> expression EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 131

state 95

    (84) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 132

state 96

    (80) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 133

state 97

    (82) expression -> expression DIFFERENT_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 134

state 98

    (83) expression -> expression GREATER_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 135

state 99

    (79) expression -> expression LESS_THAN expression_action_8 . simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    factor                         shift and go to state 44
    number                         shift and go to state 41
    id                             shift and go to state 42
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    simple_expression              shift and go to state 136

state 100

    (97) factor -> NOT id expression_action_1 .

    TIMES           reduce using rule 97 (factor -> NOT id expression_action_1 .)
    DIVIDE          reduce using rule 97 (factor -> NOT id expression_action_1 .)
    MOD             reduce using rule 97 (factor -> NOT id expression_action_1 .)
    OR              reduce using rule 97 (factor -> NOT id expression_action_1 .)
    PLUS            reduce using rule 97 (factor -> NOT id expression_action_1 .)
    MINUS           reduce using rule 97 (factor -> NOT id expression_action_1 .)
    AND             reduce using rule 97 (factor -> NOT id expression_action_1 .)
    LESS_THAN       reduce using rule 97 (factor -> NOT id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (factor -> NOT id expression_action_1 .)
    EQUAL_THAN      reduce using rule 97 (factor -> NOT id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 97 (factor -> NOT id expression_action_1 .)
    GREATER_THAN    reduce using rule 97 (factor -> NOT id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (factor -> NOT id expression_action_1 .)
    SEMICOLON       reduce using rule 97 (factor -> NOT id expression_action_1 .)
    RPAREN          reduce using rule 97 (factor -> NOT id expression_action_1 .)
    OUTSTREAM       reduce using rule 97 (factor -> NOT id expression_action_1 .)


state 101

    (66) do_while_sentence -> DO . do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON
    (67) do_while_action_1 -> .

    LBRACE          reduce using rule 67 (do_while_action_1 -> .)

    do_while_action_1              shift and go to state 137

state 102

    (23) print -> COUT . output_expression
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action
    (28) output_expression -> . OUTSTREAM ENDL print_action output_expression
    (29) output_expression -> . OUTSTREAM ENDL print_action

    OUTSTREAM       shift and go to state 138

    output_expression              shift and go to state 139

state 103

    (21) proposition -> do_while_sentence .

    ID              reduce using rule 21 (proposition -> do_while_sentence .)
    COUT            reduce using rule 21 (proposition -> do_while_sentence .)
    CIN             reduce using rule 21 (proposition -> do_while_sentence .)
    PLUS            reduce using rule 21 (proposition -> do_while_sentence .)
    MINUS           reduce using rule 21 (proposition -> do_while_sentence .)
    IF              reduce using rule 21 (proposition -> do_while_sentence .)
    WHILE           reduce using rule 21 (proposition -> do_while_sentence .)
    DO              reduce using rule 21 (proposition -> do_while_sentence .)
    FOR             reduce using rule 21 (proposition -> do_while_sentence .)
    RBRACE          reduce using rule 21 (proposition -> do_while_sentence .)


state 104

    (14) proposition -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 140


state 105

    (62) while_sentence -> WHILE . while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3
    (63) while_action_1 -> .

    LPAREN          reduce using rule 63 (while_action_1 -> .)

    while_action_1                 shift and go to state 141

state 106

    (12) instruction -> proposition . instruction
    (12) instruction -> . proposition instruction
    (13) instruction -> . empty
    (14) proposition -> . function_call SEMICOLON
    (15) proposition -> . assignation SEMICOLON
    (16) proposition -> . print SEMICOLON
    (17) proposition -> . input SEMICOLON
    (18) proposition -> . unary_operation SEMICOLON
    (19) proposition -> . if_sentence
    (20) proposition -> . while_sentence
    (21) proposition -> . do_while_sentence
    (22) proposition -> . for_sentence
    (103) empty -> .
    (55) function_call -> . ID function_call_action LPAREN RPAREN
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (23) print -> . COUT output_expression
    (31) input -> . CIN input_expression
    (42) unary_operation -> . ID PLUS PLUS
    (43) unary_operation -> . ID MINUS MINUS
    (44) unary_operation -> . PLUS PLUS ID
    (45) unary_operation -> . MINUS MINUS ID
    (57) if_sentence -> . IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2
    (58) if_sentence -> . IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (62) while_sentence -> . WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3
    (66) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON
    (69) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    RBRACE          reduce using rule 103 (empty -> .)
    ID              shift and go to state 117
    COUT            shift and go to state 102
    CIN             shift and go to state 116
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    IF              shift and go to state 118
    WHILE           shift and go to state 105
    DO              shift and go to state 101
    FOR             shift and go to state 115

    do_while_sentence              shift and go to state 103
    function_call                  shift and go to state 104
    proposition                    shift and go to state 106
    while_sentence                 shift and go to state 107
    id                             shift and go to state 2
    for_sentence                   shift and go to state 109
    print                          shift and go to state 111
    input                          shift and go to state 112
    unary_operation                shift and go to state 113
    empty                          shift and go to state 114
    assignation                    shift and go to state 119
    instruction                    shift and go to state 142
    if_sentence                    shift and go to state 121

state 107

    (20) proposition -> while_sentence .

    ID              reduce using rule 20 (proposition -> while_sentence .)
    COUT            reduce using rule 20 (proposition -> while_sentence .)
    CIN             reduce using rule 20 (proposition -> while_sentence .)
    PLUS            reduce using rule 20 (proposition -> while_sentence .)
    MINUS           reduce using rule 20 (proposition -> while_sentence .)
    IF              reduce using rule 20 (proposition -> while_sentence .)
    WHILE           reduce using rule 20 (proposition -> while_sentence .)
    DO              reduce using rule 20 (proposition -> while_sentence .)
    FOR             reduce using rule 20 (proposition -> while_sentence .)
    RBRACE          reduce using rule 20 (proposition -> while_sentence .)


state 108

    (45) unary_operation -> MINUS . MINUS ID

    MINUS           shift and go to state 143


state 109

    (22) proposition -> for_sentence .

    ID              reduce using rule 22 (proposition -> for_sentence .)
    COUT            reduce using rule 22 (proposition -> for_sentence .)
    CIN             reduce using rule 22 (proposition -> for_sentence .)
    PLUS            reduce using rule 22 (proposition -> for_sentence .)
    MINUS           reduce using rule 22 (proposition -> for_sentence .)
    IF              reduce using rule 22 (proposition -> for_sentence .)
    WHILE           reduce using rule 22 (proposition -> for_sentence .)
    DO              reduce using rule 22 (proposition -> for_sentence .)
    FOR             reduce using rule 22 (proposition -> for_sentence .)
    RBRACE          reduce using rule 22 (proposition -> for_sentence .)


state 110

    (44) unary_operation -> PLUS . PLUS ID

    PLUS            shift and go to state 144


state 111

    (16) proposition -> print . SEMICOLON

    SEMICOLON       shift and go to state 145


state 112

    (17) proposition -> input . SEMICOLON

    SEMICOLON       shift and go to state 146


state 113

    (18) proposition -> unary_operation . SEMICOLON

    SEMICOLON       shift and go to state 147


state 114

    (13) instruction -> empty .

    RBRACE          reduce using rule 13 (instruction -> empty .)


state 115

    (69) for_sentence -> FOR . LPAREN for_expression RPAREN function_block for_action_4

    LPAREN          shift and go to state 148


state 116

    (31) input -> CIN . input_expression
    (32) input_expression -> . INSTREAM id input_action input_expression
    (33) input_expression -> . INSTREAM id input_action

    INSTREAM        shift and go to state 149

    input_expression               shift and go to state 150

state 117

    (55) function_call -> ID . function_call_action LPAREN RPAREN
    (42) unary_operation -> ID . PLUS PLUS
    (43) unary_operation -> ID . MINUS MINUS
    (48) id -> ID .
    (49) id -> ID . mark_vector vector
    (50) id -> ID . mark_vector vector vector
    (56) function_call_action -> .
    (51) mark_vector -> .

    PLUS            shift and go to state 151
    MINUS           shift and go to state 153
    EQUAL           reduce using rule 48 (id -> ID .)
    LPAREN          reduce using rule 56 (function_call_action -> .)
    LBRACKET        reduce using rule 51 (mark_vector -> .)

    mark_vector                    shift and go to state 19
    function_call_action           shift and go to state 152

state 118

    (57) if_sentence -> IF . LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2
    (58) if_sentence -> IF . LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3

    LPAREN          shift and go to state 154


state 119

    (15) proposition -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 155


state 120

    (11) function_block -> LBRACE instruction . RBRACE

    RBRACE          shift and go to state 156


state 121

    (19) proposition -> if_sentence .

    ID              reduce using rule 19 (proposition -> if_sentence .)
    COUT            reduce using rule 19 (proposition -> if_sentence .)
    CIN             reduce using rule 19 (proposition -> if_sentence .)
    PLUS            reduce using rule 19 (proposition -> if_sentence .)
    MINUS           reduce using rule 19 (proposition -> if_sentence .)
    IF              reduce using rule 19 (proposition -> if_sentence .)
    WHILE           reduce using rule 19 (proposition -> if_sentence .)
    DO              reduce using rule 19 (proposition -> if_sentence .)
    FOR             reduce using rule 19 (proposition -> if_sentence .)
    RBRACE          reduce using rule 19 (proposition -> if_sentence .)


state 122

    (6) normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .

    FUNCTION        reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    INT             reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    FLOAT           reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)
    ID              reduce using rule 6 (normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action .)


state 123

    (90) simple_expression -> simple_expression MINUS expression_action_2 term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 157

state 124

    (89) simple_expression -> simple_expression PLUS expression_action_2 term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 158

state 125

    (88) simple_expression -> simple_expression OR expression_action_2 term . expression_action_4
    (92) term -> term . TIMES expression_action_3 factor expression_action_5
    (93) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (94) term -> term . MOD expression_action_3 factor expression_action_5
    (107) expression_action_4 -> .

    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 65
    MOD             shift and go to state 68
    OR              reduce using rule 107 (expression_action_4 -> .)
    PLUS            reduce using rule 107 (expression_action_4 -> .)
    MINUS           reduce using rule 107 (expression_action_4 -> .)
    AND             reduce using rule 107 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 107 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 107 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 107 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 107 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 107 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 107 (expression_action_4 -> .)
    RPAREN          reduce using rule 107 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 107 (expression_action_4 -> .)

    expression_action_4            shift and go to state 159

state 126

    (93) term -> term DIVIDE expression_action_3 factor . expression_action_5
    (108) expression_action_5 -> .

    TIMES           reduce using rule 108 (expression_action_5 -> .)
    DIVIDE          reduce using rule 108 (expression_action_5 -> .)
    MOD             reduce using rule 108 (expression_action_5 -> .)
    OR              reduce using rule 108 (expression_action_5 -> .)
    PLUS            reduce using rule 108 (expression_action_5 -> .)
    MINUS           reduce using rule 108 (expression_action_5 -> .)
    AND             reduce using rule 108 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 108 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_5 -> .)
    RPAREN          reduce using rule 108 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_5 -> .)

    expression_action_5            shift and go to state 160

state 127

    (92) term -> term TIMES expression_action_3 factor . expression_action_5
    (108) expression_action_5 -> .

    TIMES           reduce using rule 108 (expression_action_5 -> .)
    DIVIDE          reduce using rule 108 (expression_action_5 -> .)
    MOD             reduce using rule 108 (expression_action_5 -> .)
    OR              reduce using rule 108 (expression_action_5 -> .)
    PLUS            reduce using rule 108 (expression_action_5 -> .)
    MINUS           reduce using rule 108 (expression_action_5 -> .)
    AND             reduce using rule 108 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 108 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_5 -> .)
    RPAREN          reduce using rule 108 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_5 -> .)

    expression_action_5            shift and go to state 161

state 128

    (94) term -> term MOD expression_action_3 factor . expression_action_5
    (108) expression_action_5 -> .

    TIMES           reduce using rule 108 (expression_action_5 -> .)
    DIVIDE          reduce using rule 108 (expression_action_5 -> .)
    MOD             reduce using rule 108 (expression_action_5 -> .)
    OR              reduce using rule 108 (expression_action_5 -> .)
    PLUS            reduce using rule 108 (expression_action_5 -> .)
    MINUS           reduce using rule 108 (expression_action_5 -> .)
    AND             reduce using rule 108 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 108 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 108 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 108 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 108 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 108 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 108 (expression_action_5 -> .)
    RPAREN          reduce using rule 108 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 108 (expression_action_5 -> .)

    expression_action_5            shift and go to state 162

state 129

    (98) factor -> expression_action_6 LPAREN expression RPAREN . expression_action_7
    (110) expression_action_7 -> .

    TIMES           reduce using rule 110 (expression_action_7 -> .)
    DIVIDE          reduce using rule 110 (expression_action_7 -> .)
    MOD             reduce using rule 110 (expression_action_7 -> .)
    OR              reduce using rule 110 (expression_action_7 -> .)
    PLUS            reduce using rule 110 (expression_action_7 -> .)
    MINUS           reduce using rule 110 (expression_action_7 -> .)
    AND             reduce using rule 110 (expression_action_7 -> .)
    LESS_THAN       reduce using rule 110 (expression_action_7 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 110 (expression_action_7 -> .)
    EQUAL_THAN      reduce using rule 110 (expression_action_7 -> .)
    DIFFERENT_THAN  reduce using rule 110 (expression_action_7 -> .)
    GREATER_THAN    reduce using rule 110 (expression_action_7 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 110 (expression_action_7 -> .)
    SEMICOLON       reduce using rule 110 (expression_action_7 -> .)
    RPAREN          reduce using rule 110 (expression_action_7 -> .)
    OUTSTREAM       reduce using rule 110 (expression_action_7 -> .)

    expression_action_7            shift and go to state 163

state 130

    (77) expression_1 -> expression AND expression_action_3 expression . expression_action_5
    (79) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (108) expression_action_5 -> .

    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 73
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 75
    GREATER_OR_EQUAL_THAN shift and go to state 72
    SEMICOLON       reduce using rule 108 (expression_action_5 -> .)
    RPAREN          reduce using rule 108 (expression_action_5 -> .)

    expression_action_5            shift and go to state 164

state 131

    (81) expression -> expression EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 165

state 132

    (84) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 166

state 133

    (80) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 167

state 134

    (82) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 168

state 135

    (83) expression -> expression GREATER_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 169

state 136

    (79) expression -> expression LESS_THAN expression_action_8 simple_expression . expression_action_9
    (88) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (89) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (112) expression_action_9 -> .

    OR              shift and go to state 59
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    AND             reduce using rule 112 (expression_action_9 -> .)
    LESS_THAN       reduce using rule 112 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 112 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 112 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 112 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 112 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 112 (expression_action_9 -> .)
    RPAREN          reduce using rule 112 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 112 (expression_action_9 -> .)

    expression_action_9            shift and go to state 170

state 137

    (66) do_while_sentence -> DO do_while_action_1 . function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 171

state 138

    (24) output_expression -> OUTSTREAM . expression print_action output_expression
    (25) output_expression -> OUTSTREAM . expression print_action
    (26) output_expression -> OUTSTREAM . TEXT print_action output_expression
    (27) output_expression -> OUTSTREAM . TEXT print_action
    (28) output_expression -> OUTSTREAM . ENDL print_action output_expression
    (29) output_expression -> OUTSTREAM . ENDL print_action
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    TEXT            shift and go to state 172
    ENDL            shift and go to state 173
    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    real                           shift and go to state 45
    term                           shift and go to state 48
    expression                     shift and go to state 174
    factor                         shift and go to state 44
    number                         shift and go to state 41
    expression_action_6            shift and go to state 49
    id                             shift and go to state 42
    integer                        shift and go to state 38
    simple_expression              shift and go to state 40

state 139

    (23) print -> COUT output_expression .

    SEMICOLON       reduce using rule 23 (print -> COUT output_expression .)


state 140

    (14) proposition -> function_call SEMICOLON .

    ID              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    COUT            reduce using rule 14 (proposition -> function_call SEMICOLON .)
    CIN             reduce using rule 14 (proposition -> function_call SEMICOLON .)
    PLUS            reduce using rule 14 (proposition -> function_call SEMICOLON .)
    MINUS           reduce using rule 14 (proposition -> function_call SEMICOLON .)
    IF              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    WHILE           reduce using rule 14 (proposition -> function_call SEMICOLON .)
    DO              reduce using rule 14 (proposition -> function_call SEMICOLON .)
    FOR             reduce using rule 14 (proposition -> function_call SEMICOLON .)
    RBRACE          reduce using rule 14 (proposition -> function_call SEMICOLON .)


state 141

    (62) while_sentence -> WHILE while_action_1 . LPAREN expression_1 RPAREN while_action_2 function_block while_action_3

    LPAREN          shift and go to state 175


state 142

    (12) instruction -> proposition instruction .

    RBRACE          reduce using rule 12 (instruction -> proposition instruction .)


state 143

    (45) unary_operation -> MINUS MINUS . ID

    ID              shift and go to state 176


state 144

    (44) unary_operation -> PLUS PLUS . ID

    ID              shift and go to state 177


state 145

    (16) proposition -> print SEMICOLON .

    ID              reduce using rule 16 (proposition -> print SEMICOLON .)
    COUT            reduce using rule 16 (proposition -> print SEMICOLON .)
    CIN             reduce using rule 16 (proposition -> print SEMICOLON .)
    PLUS            reduce using rule 16 (proposition -> print SEMICOLON .)
    MINUS           reduce using rule 16 (proposition -> print SEMICOLON .)
    IF              reduce using rule 16 (proposition -> print SEMICOLON .)
    WHILE           reduce using rule 16 (proposition -> print SEMICOLON .)
    DO              reduce using rule 16 (proposition -> print SEMICOLON .)
    FOR             reduce using rule 16 (proposition -> print SEMICOLON .)
    RBRACE          reduce using rule 16 (proposition -> print SEMICOLON .)


state 146

    (17) proposition -> input SEMICOLON .

    ID              reduce using rule 17 (proposition -> input SEMICOLON .)
    COUT            reduce using rule 17 (proposition -> input SEMICOLON .)
    CIN             reduce using rule 17 (proposition -> input SEMICOLON .)
    PLUS            reduce using rule 17 (proposition -> input SEMICOLON .)
    MINUS           reduce using rule 17 (proposition -> input SEMICOLON .)
    IF              reduce using rule 17 (proposition -> input SEMICOLON .)
    WHILE           reduce using rule 17 (proposition -> input SEMICOLON .)
    DO              reduce using rule 17 (proposition -> input SEMICOLON .)
    FOR             reduce using rule 17 (proposition -> input SEMICOLON .)
    RBRACE          reduce using rule 17 (proposition -> input SEMICOLON .)


state 147

    (18) proposition -> unary_operation SEMICOLON .

    ID              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    COUT            reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    CIN             reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    PLUS            reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    MINUS           reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    IF              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    WHILE           reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    DO              reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    FOR             reduce using rule 18 (proposition -> unary_operation SEMICOLON .)
    RBRACE          reduce using rule 18 (proposition -> unary_operation SEMICOLON .)


state 148

    (69) for_sentence -> FOR LPAREN . for_expression RPAREN function_block for_action_4
    (70) for_expression -> . assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3
    (71) for_expression -> . assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 8

    assignation                    shift and go to state 178
    for_expression                 shift and go to state 179
    id                             shift and go to state 2

state 149

    (32) input_expression -> INSTREAM . id input_action input_expression
    (33) input_expression -> INSTREAM . id input_action
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 8

    id                             shift and go to state 180

state 150

    (31) input -> CIN input_expression .

    SEMICOLON       reduce using rule 31 (input -> CIN input_expression .)


state 151

    (42) unary_operation -> ID PLUS . PLUS

    PLUS            shift and go to state 181


state 152

    (55) function_call -> ID function_call_action . LPAREN RPAREN

    LPAREN          shift and go to state 182


state 153

    (43) unary_operation -> ID MINUS . MINUS

    MINUS           shift and go to state 183


state 154

    (57) if_sentence -> IF LPAREN . expression_1 RPAREN if_action_1 function_block empty if_action_2
    (58) if_sentence -> IF LPAREN . expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (76) expression_1 -> . expression
    (77) expression_1 -> . expression AND expression_action_3 expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    number                         shift and go to state 41
    simple_expression              shift and go to state 40
    id                             shift and go to state 42
    factor                         shift and go to state 44
    real                           shift and go to state 45
    expression_1                   shift and go to state 184
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    term                           shift and go to state 48
    expression                     shift and go to state 50

state 155

    (15) proposition -> assignation SEMICOLON .

    ID              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    COUT            reduce using rule 15 (proposition -> assignation SEMICOLON .)
    CIN             reduce using rule 15 (proposition -> assignation SEMICOLON .)
    PLUS            reduce using rule 15 (proposition -> assignation SEMICOLON .)
    MINUS           reduce using rule 15 (proposition -> assignation SEMICOLON .)
    IF              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    WHILE           reduce using rule 15 (proposition -> assignation SEMICOLON .)
    DO              reduce using rule 15 (proposition -> assignation SEMICOLON .)
    FOR             reduce using rule 15 (proposition -> assignation SEMICOLON .)
    RBRACE          reduce using rule 15 (proposition -> assignation SEMICOLON .)


state 156

    (11) function_block -> LBRACE instruction RBRACE .

    ID              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    COUT            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    CIN             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    PLUS            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    MINUS           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    IF              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    WHILE           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    DO              reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FOR             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    RBRACE          reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FUNCTION        reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    INT             reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    FLOAT           reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    $end            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)
    ELSE            reduce using rule 11 (function_block -> LBRACE instruction RBRACE .)


state 157

    (90) simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    AND             reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 90 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)


state 158

    (89) simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    AND             reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 89 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)


state 159

    (88) simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .

    OR              reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    AND             reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 88 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)


state 160

    (93) term -> term DIVIDE expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 93 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)


state 161

    (92) term -> term TIMES expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 92 (term -> term TIMES expression_action_3 factor expression_action_5 .)


state 162

    (94) term -> term MOD expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 94 (term -> term MOD expression_action_3 factor expression_action_5 .)


state 163

    (98) factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .

    TIMES           reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIVIDE          reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MOD             reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OR              reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    PLUS            reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MINUS           reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    AND             reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_THAN       reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    EQUAL_THAN      reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIFFERENT_THAN  reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_THAN    reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    SEMICOLON       reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    RPAREN          reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OUTSTREAM       reduce using rule 98 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)


state 164

    (77) expression_1 -> expression AND expression_action_3 expression expression_action_5 .

    RPAREN          reduce using rule 77 (expression_1 -> expression AND expression_action_3 expression expression_action_5 .)
    SEMICOLON       reduce using rule 77 (expression_1 -> expression AND expression_action_3 expression expression_action_5 .)


state 165

    (81) expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 81 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 166

    (84) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 84 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 167

    (80) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 80 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 168

    (82) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 82 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)


state 169

    (83) expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 83 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)


state 170

    (79) expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .

    AND             reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    RPAREN          reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 79 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)


state 171

    (66) do_while_sentence -> DO do_while_action_1 function_block . WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON

    WHILE           shift and go to state 185


state 172

    (26) output_expression -> OUTSTREAM TEXT . print_action output_expression
    (27) output_expression -> OUTSTREAM TEXT . print_action
    (30) print_action -> .

    OUTSTREAM       reduce using rule 30 (print_action -> .)
    SEMICOLON       reduce using rule 30 (print_action -> .)

    print_action                   shift and go to state 186

state 173

    (28) output_expression -> OUTSTREAM ENDL . print_action output_expression
    (29) output_expression -> OUTSTREAM ENDL . print_action
    (30) print_action -> .

    OUTSTREAM       reduce using rule 30 (print_action -> .)
    SEMICOLON       reduce using rule 30 (print_action -> .)

    print_action                   shift and go to state 187

state 174

    (24) output_expression -> OUTSTREAM expression . print_action output_expression
    (25) output_expression -> OUTSTREAM expression . print_action
    (79) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (30) print_action -> .

    LESS_THAN       shift and go to state 76
    LESS_OR_EQUAL_THAN shift and go to state 73
    EQUAL_THAN      shift and go to state 71
    DIFFERENT_THAN  shift and go to state 74
    GREATER_THAN    shift and go to state 75
    GREATER_OR_EQUAL_THAN shift and go to state 72
    OUTSTREAM       reduce using rule 30 (print_action -> .)
    SEMICOLON       reduce using rule 30 (print_action -> .)

    print_action                   shift and go to state 188

state 175

    (62) while_sentence -> WHILE while_action_1 LPAREN . expression_1 RPAREN while_action_2 function_block while_action_3
    (76) expression_1 -> . expression
    (77) expression_1 -> . expression AND expression_action_3 expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    number                         shift and go to state 41
    simple_expression              shift and go to state 40
    id                             shift and go to state 42
    factor                         shift and go to state 44
    real                           shift and go to state 45
    expression_1                   shift and go to state 189
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    term                           shift and go to state 48
    expression                     shift and go to state 50

state 176

    (45) unary_operation -> MINUS MINUS ID .

    RPAREN          reduce using rule 45 (unary_operation -> MINUS MINUS ID .)
    SEMICOLON       reduce using rule 45 (unary_operation -> MINUS MINUS ID .)


state 177

    (44) unary_operation -> PLUS PLUS ID .

    RPAREN          reduce using rule 44 (unary_operation -> PLUS PLUS ID .)
    SEMICOLON       reduce using rule 44 (unary_operation -> PLUS PLUS ID .)


state 178

    (70) for_expression -> assignation . for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3
    (71) for_expression -> assignation . for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3
    (72) for_action_1 -> .

    SEMICOLON       reduce using rule 72 (for_action_1 -> .)

    for_action_1                   shift and go to state 190

state 179

    (69) for_sentence -> FOR LPAREN for_expression . RPAREN function_block for_action_4

    RPAREN          shift and go to state 191


state 180

    (32) input_expression -> INSTREAM id . input_action input_expression
    (33) input_expression -> INSTREAM id . input_action
    (34) input_action -> .

    INSTREAM        reduce using rule 34 (input_action -> .)
    SEMICOLON       reduce using rule 34 (input_action -> .)

    input_action                   shift and go to state 192

state 181

    (42) unary_operation -> ID PLUS PLUS .

    RPAREN          reduce using rule 42 (unary_operation -> ID PLUS PLUS .)
    SEMICOLON       reduce using rule 42 (unary_operation -> ID PLUS PLUS .)


state 182

    (55) function_call -> ID function_call_action LPAREN . RPAREN

    RPAREN          shift and go to state 193


state 183

    (43) unary_operation -> ID MINUS MINUS .

    RPAREN          reduce using rule 43 (unary_operation -> ID MINUS MINUS .)
    SEMICOLON       reduce using rule 43 (unary_operation -> ID MINUS MINUS .)


state 184

    (57) if_sentence -> IF LPAREN expression_1 . RPAREN if_action_1 function_block empty if_action_2
    (58) if_sentence -> IF LPAREN expression_1 . RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3

    RPAREN          shift and go to state 194


state 185

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE . LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON

    LPAREN          shift and go to state 195


state 186

    (26) output_expression -> OUTSTREAM TEXT print_action . output_expression
    (27) output_expression -> OUTSTREAM TEXT print_action .
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action
    (28) output_expression -> . OUTSTREAM ENDL print_action output_expression
    (29) output_expression -> . OUTSTREAM ENDL print_action

    SEMICOLON       reduce using rule 27 (output_expression -> OUTSTREAM TEXT print_action .)
    OUTSTREAM       shift and go to state 138

    output_expression              shift and go to state 196

state 187

    (28) output_expression -> OUTSTREAM ENDL print_action . output_expression
    (29) output_expression -> OUTSTREAM ENDL print_action .
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action
    (28) output_expression -> . OUTSTREAM ENDL print_action output_expression
    (29) output_expression -> . OUTSTREAM ENDL print_action

    SEMICOLON       reduce using rule 29 (output_expression -> OUTSTREAM ENDL print_action .)
    OUTSTREAM       shift and go to state 138

    output_expression              shift and go to state 197

state 188

    (24) output_expression -> OUTSTREAM expression print_action . output_expression
    (25) output_expression -> OUTSTREAM expression print_action .
    (24) output_expression -> . OUTSTREAM expression print_action output_expression
    (25) output_expression -> . OUTSTREAM expression print_action
    (26) output_expression -> . OUTSTREAM TEXT print_action output_expression
    (27) output_expression -> . OUTSTREAM TEXT print_action
    (28) output_expression -> . OUTSTREAM ENDL print_action output_expression
    (29) output_expression -> . OUTSTREAM ENDL print_action

    SEMICOLON       reduce using rule 25 (output_expression -> OUTSTREAM expression print_action .)
    OUTSTREAM       shift and go to state 138

    output_expression              shift and go to state 198

state 189

    (62) while_sentence -> WHILE while_action_1 LPAREN expression_1 . RPAREN while_action_2 function_block while_action_3

    RPAREN          shift and go to state 199


state 190

    (70) for_expression -> assignation for_action_1 . SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3
    (71) for_expression -> assignation for_action_1 . SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 200


state 191

    (69) for_sentence -> FOR LPAREN for_expression RPAREN . function_block for_action_4
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 201

state 192

    (32) input_expression -> INSTREAM id input_action . input_expression
    (33) input_expression -> INSTREAM id input_action .
    (32) input_expression -> . INSTREAM id input_action input_expression
    (33) input_expression -> . INSTREAM id input_action

    SEMICOLON       reduce using rule 33 (input_expression -> INSTREAM id input_action .)
    INSTREAM        shift and go to state 149

    input_expression               shift and go to state 202

state 193

    (55) function_call -> ID function_call_action LPAREN RPAREN .

    SEMICOLON       reduce using rule 55 (function_call -> ID function_call_action LPAREN RPAREN .)


state 194

    (57) if_sentence -> IF LPAREN expression_1 RPAREN . if_action_1 function_block empty if_action_2
    (58) if_sentence -> IF LPAREN expression_1 RPAREN . if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (59) if_action_1 -> .

    LBRACE          reduce using rule 59 (if_action_1 -> .)

    if_action_1                    shift and go to state 203

state 195

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN . expression_1 RPAREN do_while_action_2 SEMICOLON
    (76) expression_1 -> . expression
    (77) expression_1 -> . expression AND expression_action_3 expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    number                         shift and go to state 41
    simple_expression              shift and go to state 40
    id                             shift and go to state 42
    factor                         shift and go to state 44
    real                           shift and go to state 45
    expression_1                   shift and go to state 204
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    term                           shift and go to state 48
    expression                     shift and go to state 50

state 196

    (26) output_expression -> OUTSTREAM TEXT print_action output_expression .

    SEMICOLON       reduce using rule 26 (output_expression -> OUTSTREAM TEXT print_action output_expression .)


state 197

    (28) output_expression -> OUTSTREAM ENDL print_action output_expression .

    SEMICOLON       reduce using rule 28 (output_expression -> OUTSTREAM ENDL print_action output_expression .)


state 198

    (24) output_expression -> OUTSTREAM expression print_action output_expression .

    SEMICOLON       reduce using rule 24 (output_expression -> OUTSTREAM expression print_action output_expression .)


state 199

    (62) while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN . while_action_2 function_block while_action_3
    (64) while_action_2 -> .

    LBRACE          reduce using rule 64 (while_action_2 -> .)

    while_action_2                 shift and go to state 205

state 200

    (70) for_expression -> assignation for_action_1 SEMICOLON . expression_1 for_action_2 SEMICOLON assignation for_action_3
    (71) for_expression -> assignation for_action_1 SEMICOLON . expression_1 for_action_2 SEMICOLON unary_operation for_action_3
    (76) expression_1 -> . expression
    (77) expression_1 -> . expression AND expression_action_3 expression expression_action_5
    (78) expression -> . simple_expression
    (79) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (80) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (81) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (82) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (83) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (84) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (85) simple_expression -> . term expression_action_4
    (86) simple_expression -> . PLUS term expression_action_4
    (87) simple_expression -> . MINUS term expression_action_4
    (88) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (89) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (90) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (91) term -> . factor
    (92) term -> . term TIMES expression_action_3 factor expression_action_5
    (93) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (94) term -> . term MOD expression_action_3 factor expression_action_5
    (95) factor -> . id expression_action_1
    (96) factor -> . number expression_action_1
    (97) factor -> . NOT id expression_action_1
    (98) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector
    (99) number -> . real
    (100) number -> . integer
    (109) expression_action_6 -> .
    (101) real -> . NUMBER DOT NUMBER
    (102) integer -> . NUMBER

    PLUS            shift and go to state 43
    MINUS           shift and go to state 39
    NOT             shift and go to state 51
    ID              shift and go to state 8
    LPAREN          reduce using rule 109 (expression_action_6 -> .)
    NUMBER          shift and go to state 46

    number                         shift and go to state 41
    simple_expression              shift and go to state 40
    id                             shift and go to state 42
    factor                         shift and go to state 44
    real                           shift and go to state 45
    expression_1                   shift and go to state 206
    term                           shift and go to state 48
    expression_action_6            shift and go to state 49
    integer                        shift and go to state 38
    expression                     shift and go to state 50

state 201

    (69) for_sentence -> FOR LPAREN for_expression RPAREN function_block . for_action_4
    (75) for_action_4 -> .

    ID              reduce using rule 75 (for_action_4 -> .)
    COUT            reduce using rule 75 (for_action_4 -> .)
    CIN             reduce using rule 75 (for_action_4 -> .)
    PLUS            reduce using rule 75 (for_action_4 -> .)
    MINUS           reduce using rule 75 (for_action_4 -> .)
    IF              reduce using rule 75 (for_action_4 -> .)
    WHILE           reduce using rule 75 (for_action_4 -> .)
    DO              reduce using rule 75 (for_action_4 -> .)
    FOR             reduce using rule 75 (for_action_4 -> .)
    RBRACE          reduce using rule 75 (for_action_4 -> .)

    for_action_4                   shift and go to state 207

state 202

    (32) input_expression -> INSTREAM id input_action input_expression .

    SEMICOLON       reduce using rule 32 (input_expression -> INSTREAM id input_action input_expression .)


state 203

    (57) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 . function_block empty if_action_2
    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 . function_block ELSE if_action_2 function_block if_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 208

state 204

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 . RPAREN do_while_action_2 SEMICOLON

    RPAREN          shift and go to state 209


state 205

    (62) while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 . function_block while_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 210

state 206

    (70) for_expression -> assignation for_action_1 SEMICOLON expression_1 . for_action_2 SEMICOLON assignation for_action_3
    (71) for_expression -> assignation for_action_1 SEMICOLON expression_1 . for_action_2 SEMICOLON unary_operation for_action_3
    (73) for_action_2 -> .

    SEMICOLON       reduce using rule 73 (for_action_2 -> .)

    for_action_2                   shift and go to state 211

state 207

    (69) for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .

    ID              reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    COUT            reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    CIN             reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    PLUS            reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    MINUS           reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    IF              reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    WHILE           reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    DO              reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    FOR             reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    RBRACE          reduce using rule 69 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)


state 208

    (57) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block . empty if_action_2
    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block . ELSE if_action_2 function_block if_action_3
    (103) empty -> .

    ELSE            shift and go to state 212
    ID              reduce using rule 103 (empty -> .)
    COUT            reduce using rule 103 (empty -> .)
    CIN             reduce using rule 103 (empty -> .)
    PLUS            reduce using rule 103 (empty -> .)
    MINUS           reduce using rule 103 (empty -> .)
    IF              reduce using rule 103 (empty -> .)
    WHILE           reduce using rule 103 (empty -> .)
    DO              reduce using rule 103 (empty -> .)
    FOR             reduce using rule 103 (empty -> .)
    RBRACE          reduce using rule 103 (empty -> .)

    empty                          shift and go to state 213

state 209

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN . do_while_action_2 SEMICOLON
    (68) do_while_action_2 -> .

    SEMICOLON       reduce using rule 68 (do_while_action_2 -> .)

    do_while_action_2              shift and go to state 214

state 210

    (62) while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block . while_action_3
    (65) while_action_3 -> .

    ID              reduce using rule 65 (while_action_3 -> .)
    COUT            reduce using rule 65 (while_action_3 -> .)
    CIN             reduce using rule 65 (while_action_3 -> .)
    PLUS            reduce using rule 65 (while_action_3 -> .)
    MINUS           reduce using rule 65 (while_action_3 -> .)
    IF              reduce using rule 65 (while_action_3 -> .)
    WHILE           reduce using rule 65 (while_action_3 -> .)
    DO              reduce using rule 65 (while_action_3 -> .)
    FOR             reduce using rule 65 (while_action_3 -> .)
    RBRACE          reduce using rule 65 (while_action_3 -> .)

    while_action_3                 shift and go to state 215

state 211

    (70) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 . SEMICOLON assignation for_action_3
    (71) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 . SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 216


state 212

    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE . if_action_2 function_block if_action_3
    (60) if_action_2 -> .

    LBRACE          reduce using rule 60 (if_action_2 -> .)

    if_action_2                    shift and go to state 217

state 213

    (57) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty . if_action_2
    (60) if_action_2 -> .

    ID              reduce using rule 60 (if_action_2 -> .)
    COUT            reduce using rule 60 (if_action_2 -> .)
    CIN             reduce using rule 60 (if_action_2 -> .)
    PLUS            reduce using rule 60 (if_action_2 -> .)
    MINUS           reduce using rule 60 (if_action_2 -> .)
    IF              reduce using rule 60 (if_action_2 -> .)
    WHILE           reduce using rule 60 (if_action_2 -> .)
    DO              reduce using rule 60 (if_action_2 -> .)
    FOR             reduce using rule 60 (if_action_2 -> .)
    RBRACE          reduce using rule 60 (if_action_2 -> .)

    if_action_2                    shift and go to state 218

state 214

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 . SEMICOLON

    SEMICOLON       shift and go to state 219


state 215

    (62) while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .

    ID              reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    COUT            reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    CIN             reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    PLUS            reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    MINUS           reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    IF              reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    WHILE           reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    DO              reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    FOR             reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)
    RBRACE          reduce using rule 62 (while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3 .)


state 216

    (70) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON . assignation for_action_3
    (71) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON . unary_operation for_action_3
    (38) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3
    (42) unary_operation -> . ID PLUS PLUS
    (43) unary_operation -> . ID MINUS MINUS
    (44) unary_operation -> . PLUS PLUS ID
    (45) unary_operation -> . MINUS MINUS ID
    (48) id -> . ID
    (49) id -> . ID mark_vector vector
    (50) id -> . ID mark_vector vector vector

    ID              shift and go to state 221
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108

    assignation                    shift and go to state 220
    unary_operation                shift and go to state 222
    id                             shift and go to state 2

state 217

    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 . function_block if_action_3
    (11) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 78

    function_block                 shift and go to state 223

state 218

    (57) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .

    ID              reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    COUT            reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    CIN             reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    PLUS            reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    MINUS           reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    IF              reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    WHILE           reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    DO              reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    FOR             reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)
    RBRACE          reduce using rule 57 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2 .)


state 219

    (66) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .

    ID              reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    COUT            reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    CIN             reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    PLUS            reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    MINUS           reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    IF              reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    WHILE           reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    DO              reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    FOR             reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)
    RBRACE          reduce using rule 66 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON .)


state 220

    (70) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation . for_action_3
    (74) for_action_3 -> .

    RPAREN          reduce using rule 74 (for_action_3 -> .)

    for_action_3                   shift and go to state 224

state 221

    (42) unary_operation -> ID . PLUS PLUS
    (43) unary_operation -> ID . MINUS MINUS
    (48) id -> ID .
    (49) id -> ID . mark_vector vector
    (50) id -> ID . mark_vector vector vector
    (51) mark_vector -> .

    PLUS            shift and go to state 151
    MINUS           shift and go to state 153
    EQUAL           reduce using rule 48 (id -> ID .)
    LBRACKET        reduce using rule 51 (mark_vector -> .)

    mark_vector                    shift and go to state 19

state 222

    (71) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation . for_action_3
    (74) for_action_3 -> .

    RPAREN          reduce using rule 74 (for_action_3 -> .)

    for_action_3                   shift and go to state 225

state 223

    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block . if_action_3
    (61) if_action_3 -> .

    ID              reduce using rule 61 (if_action_3 -> .)
    COUT            reduce using rule 61 (if_action_3 -> .)
    CIN             reduce using rule 61 (if_action_3 -> .)
    PLUS            reduce using rule 61 (if_action_3 -> .)
    MINUS           reduce using rule 61 (if_action_3 -> .)
    IF              reduce using rule 61 (if_action_3 -> .)
    WHILE           reduce using rule 61 (if_action_3 -> .)
    DO              reduce using rule 61 (if_action_3 -> .)
    FOR             reduce using rule 61 (if_action_3 -> .)
    RBRACE          reduce using rule 61 (if_action_3 -> .)

    if_action_3                    shift and go to state 226

state 224

    (70) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3 .

    RPAREN          reduce using rule 70 (for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3 .)


state 225

    (71) for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3 .

    RPAREN          reduce using rule 71 (for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3 .)


state 226

    (58) if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .

    ID              reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    COUT            reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    CIN             reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    PLUS            reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    MINUS           reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    IF              reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    WHILE           reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    DO              reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    FOR             reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    RBRACE          reduce using rule 58 (if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)

