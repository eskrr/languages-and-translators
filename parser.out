Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID LPAREN RPAREN function_block
Rule 7     main_function -> FUNCTION MAIN LPAREN RPAREN function_block
Rule 8     function_block -> LBRACE instruction RBRACE
Rule 9     instruction -> proposition instruction
Rule 10    instruction -> empty
Rule 11    proposition -> function_call SEMICOLON
Rule 12    proposition -> assignation SEMICOLON
Rule 13    proposition -> print SEMICOLON
Rule 14    proposition -> input SEMICOLON
Rule 15    proposition -> unary_operation SEMICOLON
Rule 16    proposition -> if_sentence
Rule 17    proposition -> while_sentence
Rule 18    proposition -> do_while_sentence
Rule 19    proposition -> for_sentence
Rule 20    print -> COUT output_expression
Rule 21    output_expression -> OUTSTREAM expression output_expression
Rule 22    output_expression -> OUTSTREAM expression
Rule 23    output_expression -> OUTSTREAM TEXT output_expression
Rule 24    output_expression -> OUTSTREAM TEXT
Rule 25    input -> CIN input_expression
Rule 26    input_expression -> INSTREAM id input_expression
Rule 27    input_expression -> INSTREAM id
Rule 28    declaration -> type variables EQUAL expression
Rule 29    declaration -> type variables
Rule 30    type -> INT
Rule 31    type -> DOUBLE
Rule 32    assignation -> variables EQUAL expression
Rule 33    assignation -> variables
Rule 34    unary_operation -> ID PLUS PLUS
Rule 35    unary_operation -> ID MINUS MINUS
Rule 36    unary_operation -> PLUS PLUS ID
Rule 37    unary_operation -> MINUS MINUS ID
Rule 38    variables -> id COMMA variables
Rule 39    variables -> id
Rule 40    id -> ID
Rule 41    id -> ID vector
Rule 42    id -> ID vector vector
Rule 43    vector -> LBRACKET integer RBRACKET
Rule 44    vector -> LBRACKET ID RBRACKET
Rule 45    vector -> LBRACKET empty RBRACKET
Rule 46    function_call -> ID LPAREN RPAREN
Rule 47    if_sentence -> IF LPAREN expression RPAREN function_block empty
Rule 48    if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block
Rule 49    while_sentence -> WHILE LPAREN expression RPAREN function_block
Rule 50    do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON
Rule 51    for_sentence -> FOR LPAREN for_expression RPAREN function_block
Rule 52    for_expression -> declaration SEMICOLON expression SEMICOLON assignation
Rule 53    for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation
Rule 54    expression -> simple_expression
Rule 55    expression -> expression LESS_THAN simple_expression
Rule 56    expression -> expression LESS_OR_EQUAL_THAN simple_expression
Rule 57    expression -> expression EQUAL_THAN simple_expression
Rule 58    expression -> expression DIFFERENT_THAN simple_expression
Rule 59    expression -> expression GREATER_THAN simple_expression
Rule 60    expression -> expression GREATER_OR_EQUAL_THAN simple_expression
Rule 61    simple_expression -> term
Rule 62    simple_expression -> PLUS term
Rule 63    simple_expression -> MINUS term
Rule 64    simple_expression -> simple_expression OR expression_action_2 term
Rule 65    simple_expression -> simple_expression PLUS expression_action_2 term
Rule 66    simple_expression -> simple_expression MINUS expression_action_2 term
Rule 67    term -> factor
Rule 68    term -> term TIMES expression_action_3 factor
Rule 69    term -> term DIVIDE expression_action_3 factor
Rule 70    term -> term MOD expression_action_3 factor
Rule 71    term -> term AND expression_action_3 factor
Rule 72    factor -> id expression_action_1
Rule 73    factor -> number expression_action_1
Rule 74    factor -> NOT id expression_action_1
Rule 75    factor -> LPAREN expression RPAREN
Rule 76    number -> real
Rule 77    number -> integer
Rule 78    real -> NUMBER DOT NUMBER
Rule 79    integer -> NUMBER
Rule 80    empty -> <empty>
Rule 81    expression_action_1 -> <empty>
Rule 82    expression_action_2 -> <empty>
Rule 83    expression_action_3 -> <empty>

Terminals, with rules where they appear

AND                  : 71
CIN                  : 25
COMMA                : 38
COUT                 : 20
DIFFERENT_THAN       : 58
DIVIDE               : 69
DO                   : 50
DOT                  : 78
DOUBLE               : 31
ELSE                 : 48
EQUAL                : 28 32
EQUAL_THAN           : 57
FOR                  : 51
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 60
GREATER_THAN         : 59
ID                   : 6 34 35 36 37 40 41 42 44 46
IF                   : 47 48
INSTREAM             : 26 27
INT                  : 30
LBRACE               : 8
LBRACKET             : 43 44 45
LESS_OR_EQUAL_THAN   : 56
LESS_THAN            : 55
LPAREN               : 6 7 46 47 48 49 50 51 75
MAIN                 : 7
MINUS                : 35 35 37 37 63 66
MOD                  : 70
NOT                  : 74
NUMBER               : 78 78 79
OR                   : 64
OUTSTREAM            : 21 22 23 24
PLUS                 : 34 34 36 36 62 65
RBRACE               : 8
RBRACKET             : 43 44 45
RPAREN               : 6 7 46 47 48 49 50 51 75
SEMICOLON            : 2 3 11 12 13 14 15 50 52 52 53 53
TEXT                 : 23 24
TIMES                : 68
WHILE                : 49 50
error                : 

Nonterminals, with rules where they appear

assignation          : 3 12 52
declaration          : 2 52 53
do_while_sentence    : 18
empty                : 10 45 47
expression           : 21 22 28 32 47 48 49 50 52 53 55 56 57 58 59 60 75 0
expression_action_1  : 72 73 74
expression_action_2  : 64 65 66
expression_action_3  : 68 69 70 71
factor               : 67 68 69 70 71
for_expression       : 51
for_sentence         : 19
function_block       : 6 7 47 48 48 49 50 51
function_call        : 11
id                   : 26 27 38 39 72 74
if_sentence          : 16
input                : 14
input_expression     : 25 26
instruction          : 8 9
integer              : 43 77
main_function        : 5
normal_function      : 4
number               : 73
output_expression    : 20 21 23
print                : 13
program              : 
program_block        : 1 2 3 4
proposition          : 9
real                 : 76
simple_expression    : 54 55 56 57 58 59 60 64 65 66
term                 : 61 62 63 64 65 66 68 69 70 71
type                 : 28 29
unary_operation      : 15 53
variables            : 28 29 32 33 38
vector               : 41 42 42
while_sentence       : 17

Parsing method: LALR

state 0

    (0) S' -> . expression
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN simple_expression
    (56) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (57) expression -> . expression EQUAL_THAN simple_expression
    (58) expression -> . expression DIFFERENT_THAN simple_expression
    (59) expression -> . expression GREATER_THAN simple_expression
    (60) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 3
    expression                     shift and go to state 14
    id                             shift and go to state 4

state 1

    (75) factor -> LPAREN . expression RPAREN
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN simple_expression
    (56) expression -> . expression LESS_OR_EQUAL_THAN simple_expression
    (57) expression -> . expression EQUAL_THAN simple_expression
    (58) expression -> . expression DIFFERENT_THAN simple_expression
    (59) expression -> . expression GREATER_THAN simple_expression
    (60) expression -> . expression GREATER_OR_EQUAL_THAN simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 3
    expression                     shift and go to state 15
    id                             shift and go to state 4

state 2

    (73) factor -> number . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    $end            reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 16

state 3

    (54) expression -> simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 54 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 54 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 54 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 54 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 54 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 54 (expression -> simple_expression .)
    $end            reduce using rule 54 (expression -> simple_expression .)
    RPAREN          reduce using rule 54 (expression -> simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 4

    (72) factor -> id . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    $end            reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 20

state 5

    (63) simple_expression -> MINUS . term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 21
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 6

    (62) simple_expression -> PLUS . term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 22
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 7

    (67) term -> factor .

    TIMES           reduce using rule 67 (term -> factor .)
    DIVIDE          reduce using rule 67 (term -> factor .)
    MOD             reduce using rule 67 (term -> factor .)
    AND             reduce using rule 67 (term -> factor .)
    OR              reduce using rule 67 (term -> factor .)
    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    LESS_THAN       reduce using rule 67 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 67 (term -> factor .)
    EQUAL_THAN      reduce using rule 67 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 67 (term -> factor .)
    GREATER_THAN    reduce using rule 67 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 67 (term -> factor .)
    $end            reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)


state 8

    (76) number -> real .

    TIMES           reduce using rule 76 (number -> real .)
    DIVIDE          reduce using rule 76 (number -> real .)
    MOD             reduce using rule 76 (number -> real .)
    AND             reduce using rule 76 (number -> real .)
    OR              reduce using rule 76 (number -> real .)
    PLUS            reduce using rule 76 (number -> real .)
    MINUS           reduce using rule 76 (number -> real .)
    LESS_THAN       reduce using rule 76 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 76 (number -> real .)
    EQUAL_THAN      reduce using rule 76 (number -> real .)
    DIFFERENT_THAN  reduce using rule 76 (number -> real .)
    GREATER_THAN    reduce using rule 76 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 76 (number -> real .)
    $end            reduce using rule 76 (number -> real .)
    RPAREN          reduce using rule 76 (number -> real .)


state 9

    (78) real -> NUMBER . DOT NUMBER
    (79) integer -> NUMBER .

    DOT             shift and go to state 23
    TIMES           reduce using rule 79 (integer -> NUMBER .)
    DIVIDE          reduce using rule 79 (integer -> NUMBER .)
    MOD             reduce using rule 79 (integer -> NUMBER .)
    AND             reduce using rule 79 (integer -> NUMBER .)
    OR              reduce using rule 79 (integer -> NUMBER .)
    PLUS            reduce using rule 79 (integer -> NUMBER .)
    MINUS           reduce using rule 79 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 79 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 79 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 79 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 79 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 79 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 79 (integer -> NUMBER .)
    $end            reduce using rule 79 (integer -> NUMBER .)
    RPAREN          reduce using rule 79 (integer -> NUMBER .)


state 10

    (61) simple_expression -> term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 61 (simple_expression -> term .)
    PLUS            reduce using rule 61 (simple_expression -> term .)
    MINUS           reduce using rule 61 (simple_expression -> term .)
    LESS_THAN       reduce using rule 61 (simple_expression -> term .)
    LESS_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> term .)
    EQUAL_THAN      reduce using rule 61 (simple_expression -> term .)
    DIFFERENT_THAN  reduce using rule 61 (simple_expression -> term .)
    GREATER_THAN    reduce using rule 61 (simple_expression -> term .)
    GREATER_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> term .)
    $end            reduce using rule 61 (simple_expression -> term .)
    RPAREN          reduce using rule 61 (simple_expression -> term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 11

    (77) number -> integer .

    TIMES           reduce using rule 77 (number -> integer .)
    DIVIDE          reduce using rule 77 (number -> integer .)
    MOD             reduce using rule 77 (number -> integer .)
    AND             reduce using rule 77 (number -> integer .)
    OR              reduce using rule 77 (number -> integer .)
    PLUS            reduce using rule 77 (number -> integer .)
    MINUS           reduce using rule 77 (number -> integer .)
    LESS_THAN       reduce using rule 77 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 77 (number -> integer .)
    EQUAL_THAN      reduce using rule 77 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 77 (number -> integer .)
    GREATER_THAN    reduce using rule 77 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 77 (number -> integer .)
    $end            reduce using rule 77 (number -> integer .)
    RPAREN          reduce using rule 77 (number -> integer .)


state 12

    (40) id -> ID .
    (41) id -> ID . vector
    (42) id -> ID . vector vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 40 (id -> ID .)
    DIVIDE          reduce using rule 40 (id -> ID .)
    MOD             reduce using rule 40 (id -> ID .)
    AND             reduce using rule 40 (id -> ID .)
    OR              reduce using rule 40 (id -> ID .)
    PLUS            reduce using rule 40 (id -> ID .)
    MINUS           reduce using rule 40 (id -> ID .)
    LESS_THAN       reduce using rule 40 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 40 (id -> ID .)
    EQUAL_THAN      reduce using rule 40 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 40 (id -> ID .)
    GREATER_THAN    reduce using rule 40 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 40 (id -> ID .)
    $end            reduce using rule 40 (id -> ID .)
    RPAREN          reduce using rule 40 (id -> ID .)
    LBRACKET        shift and go to state 28

    vector                         shift and go to state 29

state 13

    (74) factor -> NOT . id expression_action_1
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 12

    id                             shift and go to state 30

state 14

    (0) S' -> expression .
    (55) expression -> expression . LESS_THAN simple_expression
    (56) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (57) expression -> expression . EQUAL_THAN simple_expression
    (58) expression -> expression . DIFFERENT_THAN simple_expression
    (59) expression -> expression . GREATER_THAN simple_expression
    (60) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    LESS_THAN       shift and go to state 35
    LESS_OR_EQUAL_THAN shift and go to state 36
    EQUAL_THAN      shift and go to state 32
    DIFFERENT_THAN  shift and go to state 33
    GREATER_THAN    shift and go to state 34
    GREATER_OR_EQUAL_THAN shift and go to state 31


state 15

    (75) factor -> LPAREN expression . RPAREN
    (55) expression -> expression . LESS_THAN simple_expression
    (56) expression -> expression . LESS_OR_EQUAL_THAN simple_expression
    (57) expression -> expression . EQUAL_THAN simple_expression
    (58) expression -> expression . DIFFERENT_THAN simple_expression
    (59) expression -> expression . GREATER_THAN simple_expression
    (60) expression -> expression . GREATER_OR_EQUAL_THAN simple_expression

    RPAREN          shift and go to state 37
    LESS_THAN       shift and go to state 35
    LESS_OR_EQUAL_THAN shift and go to state 36
    EQUAL_THAN      shift and go to state 32
    DIFFERENT_THAN  shift and go to state 33
    GREATER_THAN    shift and go to state 34
    GREATER_OR_EQUAL_THAN shift and go to state 31


state 16

    (73) factor -> number expression_action_1 .

    TIMES           reduce using rule 73 (factor -> number expression_action_1 .)
    DIVIDE          reduce using rule 73 (factor -> number expression_action_1 .)
    MOD             reduce using rule 73 (factor -> number expression_action_1 .)
    AND             reduce using rule 73 (factor -> number expression_action_1 .)
    OR              reduce using rule 73 (factor -> number expression_action_1 .)
    PLUS            reduce using rule 73 (factor -> number expression_action_1 .)
    MINUS           reduce using rule 73 (factor -> number expression_action_1 .)
    LESS_THAN       reduce using rule 73 (factor -> number expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 73 (factor -> number expression_action_1 .)
    EQUAL_THAN      reduce using rule 73 (factor -> number expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 73 (factor -> number expression_action_1 .)
    GREATER_THAN    reduce using rule 73 (factor -> number expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 73 (factor -> number expression_action_1 .)
    $end            reduce using rule 73 (factor -> number expression_action_1 .)
    RPAREN          reduce using rule 73 (factor -> number expression_action_1 .)


state 17

    (66) simple_expression -> simple_expression MINUS . expression_action_2 term
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 38

state 18

    (65) simple_expression -> simple_expression PLUS . expression_action_2 term
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 39

state 19

    (64) simple_expression -> simple_expression OR . expression_action_2 term
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 40

state 20

    (72) factor -> id expression_action_1 .

    TIMES           reduce using rule 72 (factor -> id expression_action_1 .)
    DIVIDE          reduce using rule 72 (factor -> id expression_action_1 .)
    MOD             reduce using rule 72 (factor -> id expression_action_1 .)
    AND             reduce using rule 72 (factor -> id expression_action_1 .)
    OR              reduce using rule 72 (factor -> id expression_action_1 .)
    PLUS            reduce using rule 72 (factor -> id expression_action_1 .)
    MINUS           reduce using rule 72 (factor -> id expression_action_1 .)
    LESS_THAN       reduce using rule 72 (factor -> id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 72 (factor -> id expression_action_1 .)
    EQUAL_THAN      reduce using rule 72 (factor -> id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 72 (factor -> id expression_action_1 .)
    GREATER_THAN    reduce using rule 72 (factor -> id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 72 (factor -> id expression_action_1 .)
    $end            reduce using rule 72 (factor -> id expression_action_1 .)
    RPAREN          reduce using rule 72 (factor -> id expression_action_1 .)


state 21

    (63) simple_expression -> MINUS term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 63 (simple_expression -> MINUS term .)
    PLUS            reduce using rule 63 (simple_expression -> MINUS term .)
    MINUS           reduce using rule 63 (simple_expression -> MINUS term .)
    LESS_THAN       reduce using rule 63 (simple_expression -> MINUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> MINUS term .)
    EQUAL_THAN      reduce using rule 63 (simple_expression -> MINUS term .)
    DIFFERENT_THAN  reduce using rule 63 (simple_expression -> MINUS term .)
    GREATER_THAN    reduce using rule 63 (simple_expression -> MINUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> MINUS term .)
    $end            reduce using rule 63 (simple_expression -> MINUS term .)
    RPAREN          reduce using rule 63 (simple_expression -> MINUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 22

    (62) simple_expression -> PLUS term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 62 (simple_expression -> PLUS term .)
    PLUS            reduce using rule 62 (simple_expression -> PLUS term .)
    MINUS           reduce using rule 62 (simple_expression -> PLUS term .)
    LESS_THAN       reduce using rule 62 (simple_expression -> PLUS term .)
    LESS_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> PLUS term .)
    EQUAL_THAN      reduce using rule 62 (simple_expression -> PLUS term .)
    DIFFERENT_THAN  reduce using rule 62 (simple_expression -> PLUS term .)
    GREATER_THAN    reduce using rule 62 (simple_expression -> PLUS term .)
    GREATER_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> PLUS term .)
    $end            reduce using rule 62 (simple_expression -> PLUS term .)
    RPAREN          reduce using rule 62 (simple_expression -> PLUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 23

    (78) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 41


state 24

    (71) term -> term AND . expression_action_3 factor
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 42

state 25

    (69) term -> term DIVIDE . expression_action_3 factor
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 43

state 26

    (68) term -> term TIMES . expression_action_3 factor
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 44

state 27

    (70) term -> term MOD . expression_action_3 factor
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 45

state 28

    (43) vector -> LBRACKET . integer RBRACKET
    (44) vector -> LBRACKET . ID RBRACKET
    (45) vector -> LBRACKET . empty RBRACKET
    (79) integer -> . NUMBER
    (80) empty -> .

    ID              shift and go to state 48
    NUMBER          shift and go to state 46
    RBRACKET        reduce using rule 80 (empty -> .)

    integer                        shift and go to state 47
    empty                          shift and go to state 49

state 29

    (41) id -> ID vector .
    (42) id -> ID vector . vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 41 (id -> ID vector .)
    DIVIDE          reduce using rule 41 (id -> ID vector .)
    MOD             reduce using rule 41 (id -> ID vector .)
    AND             reduce using rule 41 (id -> ID vector .)
    OR              reduce using rule 41 (id -> ID vector .)
    PLUS            reduce using rule 41 (id -> ID vector .)
    MINUS           reduce using rule 41 (id -> ID vector .)
    LESS_THAN       reduce using rule 41 (id -> ID vector .)
    LESS_OR_EQUAL_THAN reduce using rule 41 (id -> ID vector .)
    EQUAL_THAN      reduce using rule 41 (id -> ID vector .)
    DIFFERENT_THAN  reduce using rule 41 (id -> ID vector .)
    GREATER_THAN    reduce using rule 41 (id -> ID vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 41 (id -> ID vector .)
    $end            reduce using rule 41 (id -> ID vector .)
    RPAREN          reduce using rule 41 (id -> ID vector .)
    LBRACKET        shift and go to state 28

    vector                         shift and go to state 50

state 30

    (74) factor -> NOT id . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    $end            reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 51

state 31

    (60) expression -> expression GREATER_OR_EQUAL_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 52
    id                             shift and go to state 4

state 32

    (57) expression -> expression EQUAL_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 53
    id                             shift and go to state 4

state 33

    (58) expression -> expression DIFFERENT_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 54
    id                             shift and go to state 4

state 34

    (59) expression -> expression GREATER_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 55
    id                             shift and go to state 4

state 35

    (55) expression -> expression LESS_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 56
    id                             shift and go to state 4

state 36

    (56) expression -> expression LESS_OR_EQUAL_THAN . simple_expression
    (61) simple_expression -> . term
    (62) simple_expression -> . PLUS term
    (63) simple_expression -> . MINUS term
    (64) simple_expression -> . simple_expression OR expression_action_2 term
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 10
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    simple_expression              shift and go to state 57
    id                             shift and go to state 4

state 37

    (75) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    LESS_OR_EQUAL_THAN reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    EQUAL_THAN      reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    DIFFERENT_THAN  reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    GREATER_OR_EQUAL_THAN reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 75 (factor -> LPAREN expression RPAREN .)


state 38

    (66) simple_expression -> simple_expression MINUS expression_action_2 . term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 58
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 39

    (65) simple_expression -> simple_expression PLUS expression_action_2 . term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 59
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 40

    (64) simple_expression -> simple_expression OR expression_action_2 . term
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor
    (69) term -> . term DIVIDE expression_action_3 factor
    (70) term -> . term MOD expression_action_3 factor
    (71) term -> . term AND expression_action_3 factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    term                           shift and go to state 60
    number                         shift and go to state 2
    factor                         shift and go to state 7
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 41

    (78) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    $end            reduce using rule 78 (real -> NUMBER DOT NUMBER .)


state 42

    (71) term -> term AND expression_action_3 . factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    number                         shift and go to state 2
    factor                         shift and go to state 61
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 43

    (69) term -> term DIVIDE expression_action_3 . factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    number                         shift and go to state 2
    factor                         shift and go to state 62
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 44

    (68) term -> term TIMES expression_action_3 . factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    number                         shift and go to state 2
    factor                         shift and go to state 63
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 45

    (70) term -> term MOD expression_action_3 . factor
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . LPAREN expression RPAREN
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 13
    LPAREN          shift and go to state 1
    ID              shift and go to state 12
    NUMBER          shift and go to state 9

    real                           shift and go to state 8
    number                         shift and go to state 2
    factor                         shift and go to state 64
    integer                        shift and go to state 11
    id                             shift and go to state 4

state 46

    (79) integer -> NUMBER .

    RBRACKET        reduce using rule 79 (integer -> NUMBER .)


state 47

    (43) vector -> LBRACKET integer . RBRACKET

    RBRACKET        shift and go to state 65


state 48

    (44) vector -> LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 66


state 49

    (45) vector -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 67


state 50

    (42) id -> ID vector vector .

    TIMES           reduce using rule 42 (id -> ID vector vector .)
    DIVIDE          reduce using rule 42 (id -> ID vector vector .)
    MOD             reduce using rule 42 (id -> ID vector vector .)
    AND             reduce using rule 42 (id -> ID vector vector .)
    OR              reduce using rule 42 (id -> ID vector vector .)
    PLUS            reduce using rule 42 (id -> ID vector vector .)
    MINUS           reduce using rule 42 (id -> ID vector vector .)
    LESS_THAN       reduce using rule 42 (id -> ID vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector vector .)
    EQUAL_THAN      reduce using rule 42 (id -> ID vector vector .)
    DIFFERENT_THAN  reduce using rule 42 (id -> ID vector vector .)
    GREATER_THAN    reduce using rule 42 (id -> ID vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector vector .)
    $end            reduce using rule 42 (id -> ID vector vector .)
    RPAREN          reduce using rule 42 (id -> ID vector vector .)


state 51

    (74) factor -> NOT id expression_action_1 .

    TIMES           reduce using rule 74 (factor -> NOT id expression_action_1 .)
    DIVIDE          reduce using rule 74 (factor -> NOT id expression_action_1 .)
    MOD             reduce using rule 74 (factor -> NOT id expression_action_1 .)
    AND             reduce using rule 74 (factor -> NOT id expression_action_1 .)
    OR              reduce using rule 74 (factor -> NOT id expression_action_1 .)
    PLUS            reduce using rule 74 (factor -> NOT id expression_action_1 .)
    MINUS           reduce using rule 74 (factor -> NOT id expression_action_1 .)
    LESS_THAN       reduce using rule 74 (factor -> NOT id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 74 (factor -> NOT id expression_action_1 .)
    EQUAL_THAN      reduce using rule 74 (factor -> NOT id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 74 (factor -> NOT id expression_action_1 .)
    GREATER_THAN    reduce using rule 74 (factor -> NOT id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 74 (factor -> NOT id expression_action_1 .)
    $end            reduce using rule 74 (factor -> NOT id expression_action_1 .)
    RPAREN          reduce using rule 74 (factor -> NOT id expression_action_1 .)


state 52

    (60) expression -> expression GREATER_OR_EQUAL_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    $end            reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    RPAREN          reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 53

    (57) expression -> expression EQUAL_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    $end            reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    RPAREN          reduce using rule 57 (expression -> expression EQUAL_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 54

    (58) expression -> expression DIFFERENT_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    GREATER_THAN    reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    $end            reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    RPAREN          reduce using rule 58 (expression -> expression DIFFERENT_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 55

    (59) expression -> expression GREATER_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    GREATER_THAN    reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    $end            reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    RPAREN          reduce using rule 59 (expression -> expression GREATER_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 56

    (55) expression -> expression LESS_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    GREATER_THAN    reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    $end            reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    RPAREN          reduce using rule 55 (expression -> expression LESS_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 57

    (56) expression -> expression LESS_OR_EQUAL_THAN simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term

    LESS_THAN       reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    EQUAL_THAN      reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    DIFFERENT_THAN  reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    GREATER_THAN    reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    $end            reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    RPAREN          reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN simple_expression .)
    OR              shift and go to state 19
    PLUS            shift and go to state 18
    MINUS           shift and go to state 17


state 58

    (66) simple_expression -> simple_expression MINUS expression_action_2 term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    PLUS            reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    MINUS           reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    LESS_THAN       reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    LESS_OR_EQUAL_THAN reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    EQUAL_THAN      reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    DIFFERENT_THAN  reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    GREATER_THAN    reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    GREATER_OR_EQUAL_THAN reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    $end            reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    RPAREN          reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 59

    (65) simple_expression -> simple_expression PLUS expression_action_2 term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    PLUS            reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    MINUS           reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    LESS_THAN       reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    LESS_OR_EQUAL_THAN reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    EQUAL_THAN      reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    DIFFERENT_THAN  reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    GREATER_THAN    reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    GREATER_OR_EQUAL_THAN reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    $end            reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    RPAREN          reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 60

    (64) simple_expression -> simple_expression OR expression_action_2 term .
    (68) term -> term . TIMES expression_action_3 factor
    (69) term -> term . DIVIDE expression_action_3 factor
    (70) term -> term . MOD expression_action_3 factor
    (71) term -> term . AND expression_action_3 factor

    OR              reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    PLUS            reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    MINUS           reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    LESS_THAN       reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    LESS_OR_EQUAL_THAN reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    EQUAL_THAN      reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    DIFFERENT_THAN  reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    GREATER_THAN    reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    GREATER_OR_EQUAL_THAN reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    $end            reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    RPAREN          reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 25
    MOD             shift and go to state 27
    AND             shift and go to state 24


state 61

    (71) term -> term AND expression_action_3 factor .

    TIMES           reduce using rule 71 (term -> term AND expression_action_3 factor .)
    DIVIDE          reduce using rule 71 (term -> term AND expression_action_3 factor .)
    MOD             reduce using rule 71 (term -> term AND expression_action_3 factor .)
    AND             reduce using rule 71 (term -> term AND expression_action_3 factor .)
    OR              reduce using rule 71 (term -> term AND expression_action_3 factor .)
    PLUS            reduce using rule 71 (term -> term AND expression_action_3 factor .)
    MINUS           reduce using rule 71 (term -> term AND expression_action_3 factor .)
    LESS_THAN       reduce using rule 71 (term -> term AND expression_action_3 factor .)
    LESS_OR_EQUAL_THAN reduce using rule 71 (term -> term AND expression_action_3 factor .)
    EQUAL_THAN      reduce using rule 71 (term -> term AND expression_action_3 factor .)
    DIFFERENT_THAN  reduce using rule 71 (term -> term AND expression_action_3 factor .)
    GREATER_THAN    reduce using rule 71 (term -> term AND expression_action_3 factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 71 (term -> term AND expression_action_3 factor .)
    $end            reduce using rule 71 (term -> term AND expression_action_3 factor .)
    RPAREN          reduce using rule 71 (term -> term AND expression_action_3 factor .)


state 62

    (69) term -> term DIVIDE expression_action_3 factor .

    TIMES           reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    DIVIDE          reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    MOD             reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    AND             reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    OR              reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    PLUS            reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    MINUS           reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    LESS_THAN       reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    LESS_OR_EQUAL_THAN reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    EQUAL_THAN      reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    DIFFERENT_THAN  reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    GREATER_THAN    reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    $end            reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)
    RPAREN          reduce using rule 69 (term -> term DIVIDE expression_action_3 factor .)


state 63

    (68) term -> term TIMES expression_action_3 factor .

    TIMES           reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    DIVIDE          reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    MOD             reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    AND             reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    OR              reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    PLUS            reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    MINUS           reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    LESS_THAN       reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    LESS_OR_EQUAL_THAN reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    EQUAL_THAN      reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    DIFFERENT_THAN  reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    GREATER_THAN    reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    $end            reduce using rule 68 (term -> term TIMES expression_action_3 factor .)
    RPAREN          reduce using rule 68 (term -> term TIMES expression_action_3 factor .)


state 64

    (70) term -> term MOD expression_action_3 factor .

    TIMES           reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    DIVIDE          reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    MOD             reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    AND             reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    OR              reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    PLUS            reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    MINUS           reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    LESS_THAN       reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    LESS_OR_EQUAL_THAN reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    EQUAL_THAN      reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    DIFFERENT_THAN  reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    GREATER_THAN    reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    $end            reduce using rule 70 (term -> term MOD expression_action_3 factor .)
    RPAREN          reduce using rule 70 (term -> term MOD expression_action_3 factor .)


state 65

    (43) vector -> LBRACKET integer RBRACKET .

    TIMES           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    DIVIDE          reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    MOD             reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    AND             reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    OR              reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    PLUS            reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    MINUS           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LESS_THAN       reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    EQUAL_THAN      reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    DIFFERENT_THAN  reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    GREATER_THAN    reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    $end            reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    RPAREN          reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LBRACKET        reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)


state 66

    (44) vector -> LBRACKET ID RBRACKET .

    TIMES           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    MOD             reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    AND             reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    OR              reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LESS_THAN       reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    EQUAL_THAN      reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    DIFFERENT_THAN  reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    GREATER_THAN    reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    $end            reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LBRACKET        reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)


state 67

    (45) vector -> LBRACKET empty RBRACKET .

    TIMES           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    DIVIDE          reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    MOD             reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    AND             reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    OR              reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    PLUS            reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    MINUS           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LESS_THAN       reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    EQUAL_THAN      reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    DIFFERENT_THAN  reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    GREATER_THAN    reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    $end            reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    RPAREN          reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LBRACKET        reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)

