Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID LPAREN RPAREN function_block
Rule 7     main_function -> FUNCTION MAIN LPAREN RPAREN function_block
Rule 8     function_block -> LBRACE instruction RBRACE
Rule 9     instruction -> proposition instruction
Rule 10    instruction -> empty
Rule 11    proposition -> function_call SEMICOLON
Rule 12    proposition -> assignation SEMICOLON
Rule 13    proposition -> print SEMICOLON
Rule 14    proposition -> input SEMICOLON
Rule 15    proposition -> unary_operation SEMICOLON
Rule 16    proposition -> if_sentence
Rule 17    proposition -> while_sentence
Rule 18    proposition -> do_while_sentence
Rule 19    proposition -> for_sentence
Rule 20    print -> COUT output_expression
Rule 21    output_expression -> OUTSTREAM expression output_expression
Rule 22    output_expression -> OUTSTREAM expression
Rule 23    output_expression -> OUTSTREAM TEXT output_expression
Rule 24    output_expression -> OUTSTREAM TEXT
Rule 25    input -> CIN input_expression
Rule 26    input_expression -> INSTREAM id input_expression
Rule 27    input_expression -> INSTREAM id
Rule 28    declaration -> type variables EQUAL expression
Rule 29    declaration -> type variables
Rule 30    type -> INT
Rule 31    type -> DOUBLE
Rule 32    assignation -> variables EQUAL expression
Rule 33    assignation -> variables
Rule 34    unary_operation -> ID PLUS PLUS
Rule 35    unary_operation -> ID MINUS MINUS
Rule 36    unary_operation -> PLUS PLUS ID
Rule 37    unary_operation -> MINUS MINUS ID
Rule 38    variables -> id COMMA variables
Rule 39    variables -> id
Rule 40    id -> ID
Rule 41    id -> ID vector
Rule 42    id -> ID vector vector
Rule 43    vector -> LBRACKET integer RBRACKET
Rule 44    vector -> LBRACKET ID RBRACKET
Rule 45    vector -> LBRACKET empty RBRACKET
Rule 46    function_call -> ID LPAREN RPAREN
Rule 47    if_sentence -> IF LPAREN expression RPAREN function_block empty
Rule 48    if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block
Rule 49    while_sentence -> WHILE LPAREN expression RPAREN function_block
Rule 50    do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON
Rule 51    for_sentence -> FOR LPAREN for_expression RPAREN function_block
Rule 52    for_expression -> declaration SEMICOLON expression SEMICOLON assignation
Rule 53    for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation
Rule 54    expression -> simple_expression
Rule 55    expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9
Rule 56    expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 57    expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 58    expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
Rule 59    expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9
Rule 60    expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 61    simple_expression -> term expression_action_4
Rule 62    simple_expression -> PLUS term expression_action_4
Rule 63    simple_expression -> MINUS term expression_action_4
Rule 64    simple_expression -> simple_expression OR expression_action_2 term expression_action_4
Rule 65    simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4
Rule 66    simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4
Rule 67    term -> factor
Rule 68    term -> term TIMES expression_action_3 factor expression_action_5
Rule 69    term -> term DIVIDE expression_action_3 factor expression_action_5
Rule 70    term -> term MOD expression_action_3 factor expression_action_5
Rule 71    term -> term AND expression_action_3 factor expression_action_5
Rule 72    factor -> id expression_action_1
Rule 73    factor -> number expression_action_1
Rule 74    factor -> NOT id expression_action_1
Rule 75    factor -> expression_action_6 LPAREN expression RPAREN expression_action_7
Rule 76    number -> real
Rule 77    number -> integer
Rule 78    real -> NUMBER DOT NUMBER
Rule 79    integer -> NUMBER
Rule 80    empty -> <empty>
Rule 81    expression_action_1 -> <empty>
Rule 82    expression_action_2 -> <empty>
Rule 83    expression_action_3 -> <empty>
Rule 84    expression_action_4 -> <empty>
Rule 85    expression_action_5 -> <empty>
Rule 86    expression_action_6 -> <empty>
Rule 87    expression_action_7 -> <empty>
Rule 88    expression_action_8 -> <empty>
Rule 89    expression_action_9 -> <empty>

Terminals, with rules where they appear

AND                  : 71
CIN                  : 25
COMMA                : 38
COUT                 : 20
DIFFERENT_THAN       : 58
DIVIDE               : 69
DO                   : 50
DOT                  : 78
DOUBLE               : 31
ELSE                 : 48
EQUAL                : 28 32
EQUAL_THAN           : 57
FOR                  : 51
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 60
GREATER_THAN         : 59
ID                   : 6 34 35 36 37 40 41 42 44 46
IF                   : 47 48
INSTREAM             : 26 27
INT                  : 30
LBRACE               : 8
LBRACKET             : 43 44 45
LESS_OR_EQUAL_THAN   : 56
LESS_THAN            : 55
LPAREN               : 6 7 46 47 48 49 50 51 75
MAIN                 : 7
MINUS                : 35 35 37 37 63 66
MOD                  : 70
NOT                  : 74
NUMBER               : 78 78 79
OR                   : 64
OUTSTREAM            : 21 22 23 24
PLUS                 : 34 34 36 36 62 65
RBRACE               : 8
RBRACKET             : 43 44 45
RPAREN               : 6 7 46 47 48 49 50 51 75
SEMICOLON            : 2 3 11 12 13 14 15 50 52 52 53 53
TEXT                 : 23 24
TIMES                : 68
WHILE                : 49 50
error                : 

Nonterminals, with rules where they appear

assignation          : 3 12 52
declaration          : 2 52 53
do_while_sentence    : 18
empty                : 10 45 47
expression           : 21 22 28 32 47 48 49 50 52 53 55 56 57 58 59 60 75
expression_action_1  : 72 73 74
expression_action_2  : 64 65 66
expression_action_3  : 68 69 70 71
expression_action_4  : 61 62 63 64 65 66
expression_action_5  : 68 69 70 71
expression_action_6  : 75
expression_action_7  : 75
expression_action_8  : 55 56 57 58 59 60
expression_action_9  : 55 56 57 58 59 60
factor               : 67 68 69 70 71
for_expression       : 51
for_sentence         : 19
function_block       : 6 7 47 48 48 49 50 51
function_call        : 11
id                   : 26 27 38 39 72 74
if_sentence          : 16
input                : 14
input_expression     : 25 26
instruction          : 8 9
integer              : 43 77
main_function        : 5
normal_function      : 4
number               : 73
output_expression    : 20 21 23
print                : 13
program              : 0
program_block        : 1 2 3 4
proposition          : 9
real                 : 76
simple_expression    : 54 55 56 57 58 59 60 64 65 66
term                 : 61 62 63 64 65 66 68 69 70 71
type                 : 28 29
unary_operation      : 15 53
variables            : 28 29 32 33 38
vector               : 41 42 42
while_sentence       : 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables EQUAL expression
    (29) declaration -> . type variables
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (30) type -> . INT
    (31) type -> . DOUBLE
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    FUNCTION        shift and go to state 7
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    ID              shift and go to state 9

    main_function                  shift and go to state 1
    assignation                    shift and go to state 10
    variables                      shift and go to state 2
    normal_function                shift and go to state 13
    program_block                  shift and go to state 5
    program                        shift and go to state 4
    declaration                    shift and go to state 8
    type                           shift and go to state 6
    id                             shift and go to state 3

state 1

    (5) program_block -> main_function .

    $end            reduce using rule 5 (program_block -> main_function .)


state 2

    (32) assignation -> variables . EQUAL expression
    (33) assignation -> variables .

    EQUAL           shift and go to state 14
    RPAREN          reduce using rule 33 (assignation -> variables .)
    SEMICOLON       reduce using rule 33 (assignation -> variables .)


state 3

    (38) variables -> id . COMMA variables
    (39) variables -> id .

    COMMA           shift and go to state 15
    EQUAL           reduce using rule 39 (variables -> id .)
    SEMICOLON       reduce using rule 39 (variables -> id .)
    RPAREN          reduce using rule 39 (variables -> id .)


state 4

    (0) S' -> program .



state 5

    (1) program -> program_block .

    $end            reduce using rule 1 (program -> program_block .)


state 6

    (28) declaration -> type . variables EQUAL expression
    (29) declaration -> type . variables
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 9

    variables                      shift and go to state 16
    id                             shift and go to state 3

state 7

    (6) normal_function -> FUNCTION . ID LPAREN RPAREN function_block
    (7) main_function -> FUNCTION . MAIN LPAREN RPAREN function_block

    ID              shift and go to state 18
    MAIN            shift and go to state 17


state 8

    (2) program_block -> declaration . SEMICOLON program_block

    SEMICOLON       shift and go to state 19


state 9

    (40) id -> ID .
    (41) id -> ID . vector
    (42) id -> ID . vector vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 40 (id -> ID .)
    DIVIDE          reduce using rule 40 (id -> ID .)
    MOD             reduce using rule 40 (id -> ID .)
    AND             reduce using rule 40 (id -> ID .)
    OR              reduce using rule 40 (id -> ID .)
    PLUS            reduce using rule 40 (id -> ID .)
    MINUS           reduce using rule 40 (id -> ID .)
    LESS_THAN       reduce using rule 40 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 40 (id -> ID .)
    EQUAL_THAN      reduce using rule 40 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 40 (id -> ID .)
    GREATER_THAN    reduce using rule 40 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 40 (id -> ID .)
    SEMICOLON       reduce using rule 40 (id -> ID .)
    RPAREN          reduce using rule 40 (id -> ID .)
    OUTSTREAM       reduce using rule 40 (id -> ID .)
    INSTREAM        reduce using rule 40 (id -> ID .)
    COMMA           reduce using rule 40 (id -> ID .)
    EQUAL           reduce using rule 40 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 10

    (3) program_block -> assignation . SEMICOLON program_block

    SEMICOLON       shift and go to state 22


state 11

    (30) type -> INT .

    ID              reduce using rule 30 (type -> INT .)


state 12

    (31) type -> DOUBLE .

    ID              reduce using rule 31 (type -> DOUBLE .)


state 13

    (4) program_block -> normal_function . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables EQUAL expression
    (29) declaration -> . type variables
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (30) type -> . INT
    (31) type -> . DOUBLE
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    FUNCTION        shift and go to state 7
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    ID              shift and go to state 9

    main_function                  shift and go to state 1
    assignation                    shift and go to state 10
    variables                      shift and go to state 2
    normal_function                shift and go to state 13
    program_block                  shift and go to state 23
    declaration                    shift and go to state 8
    type                           shift and go to state 6
    id                             shift and go to state 3

state 14

    (32) assignation -> variables EQUAL . expression
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 35
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 15

    (38) variables -> id COMMA . variables
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 9

    variables                      shift and go to state 37
    id                             shift and go to state 3

state 16

    (28) declaration -> type variables . EQUAL expression
    (29) declaration -> type variables .

    EQUAL           shift and go to state 38
    SEMICOLON       reduce using rule 29 (declaration -> type variables .)


state 17

    (7) main_function -> FUNCTION MAIN . LPAREN RPAREN function_block

    LPAREN          shift and go to state 39


state 18

    (6) normal_function -> FUNCTION ID . LPAREN RPAREN function_block

    LPAREN          shift and go to state 40


state 19

    (2) program_block -> declaration SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables EQUAL expression
    (29) declaration -> . type variables
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (30) type -> . INT
    (31) type -> . DOUBLE
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    FUNCTION        shift and go to state 7
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    ID              shift and go to state 9

    declaration                    shift and go to state 8
    main_function                  shift and go to state 1
    assignation                    shift and go to state 10
    variables                      shift and go to state 2
    normal_function                shift and go to state 13
    program_block                  shift and go to state 41
    type                           shift and go to state 6
    id                             shift and go to state 3

state 20

    (43) vector -> LBRACKET . integer RBRACKET
    (44) vector -> LBRACKET . ID RBRACKET
    (45) vector -> LBRACKET . empty RBRACKET
    (79) integer -> . NUMBER
    (80) empty -> .

    ID              shift and go to state 44
    NUMBER          shift and go to state 42
    RBRACKET        reduce using rule 80 (empty -> .)

    integer                        shift and go to state 43
    empty                          shift and go to state 45

state 21

    (41) id -> ID vector .
    (42) id -> ID vector . vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    TIMES           reduce using rule 41 (id -> ID vector .)
    DIVIDE          reduce using rule 41 (id -> ID vector .)
    MOD             reduce using rule 41 (id -> ID vector .)
    AND             reduce using rule 41 (id -> ID vector .)
    OR              reduce using rule 41 (id -> ID vector .)
    PLUS            reduce using rule 41 (id -> ID vector .)
    MINUS           reduce using rule 41 (id -> ID vector .)
    LESS_THAN       reduce using rule 41 (id -> ID vector .)
    LESS_OR_EQUAL_THAN reduce using rule 41 (id -> ID vector .)
    EQUAL_THAN      reduce using rule 41 (id -> ID vector .)
    DIFFERENT_THAN  reduce using rule 41 (id -> ID vector .)
    GREATER_THAN    reduce using rule 41 (id -> ID vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 41 (id -> ID vector .)
    SEMICOLON       reduce using rule 41 (id -> ID vector .)
    RPAREN          reduce using rule 41 (id -> ID vector .)
    OUTSTREAM       reduce using rule 41 (id -> ID vector .)
    COMMA           reduce using rule 41 (id -> ID vector .)
    EQUAL           reduce using rule 41 (id -> ID vector .)
    INSTREAM        reduce using rule 41 (id -> ID vector .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 46

state 22

    (3) program_block -> assignation SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables EQUAL expression
    (29) declaration -> . type variables
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (30) type -> . INT
    (31) type -> . DOUBLE
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    FUNCTION        shift and go to state 7
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    ID              shift and go to state 9

    main_function                  shift and go to state 1
    assignation                    shift and go to state 10
    variables                      shift and go to state 2
    normal_function                shift and go to state 13
    program_block                  shift and go to state 47
    declaration                    shift and go to state 8
    type                           shift and go to state 6
    id                             shift and go to state 3

state 23

    (4) program_block -> normal_function program_block .

    $end            reduce using rule 4 (program_block -> normal_function program_block .)


state 24

    (77) number -> integer .

    TIMES           reduce using rule 77 (number -> integer .)
    DIVIDE          reduce using rule 77 (number -> integer .)
    MOD             reduce using rule 77 (number -> integer .)
    AND             reduce using rule 77 (number -> integer .)
    OR              reduce using rule 77 (number -> integer .)
    PLUS            reduce using rule 77 (number -> integer .)
    MINUS           reduce using rule 77 (number -> integer .)
    LESS_THAN       reduce using rule 77 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 77 (number -> integer .)
    EQUAL_THAN      reduce using rule 77 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 77 (number -> integer .)
    GREATER_THAN    reduce using rule 77 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 77 (number -> integer .)
    SEMICOLON       reduce using rule 77 (number -> integer .)
    RPAREN          reduce using rule 77 (number -> integer .)
    OUTSTREAM       reduce using rule 77 (number -> integer .)


state 25

    (54) expression -> simple_expression .
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4

    RPAREN          reduce using rule 54 (expression -> simple_expression .)
    LESS_THAN       reduce using rule 54 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 54 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 54 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 54 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 54 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 54 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 54 (expression -> simple_expression .)
    OUTSTREAM       reduce using rule 54 (expression -> simple_expression .)
    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48


state 26

    (63) simple_expression -> MINUS . term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 51
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 27

    (73) factor -> number . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 52

state 28

    (72) factor -> id . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 53

state 29

    (62) simple_expression -> PLUS . term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 54
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 30

    (67) term -> factor .

    TIMES           reduce using rule 67 (term -> factor .)
    DIVIDE          reduce using rule 67 (term -> factor .)
    MOD             reduce using rule 67 (term -> factor .)
    AND             reduce using rule 67 (term -> factor .)
    OR              reduce using rule 67 (term -> factor .)
    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    LESS_THAN       reduce using rule 67 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 67 (term -> factor .)
    EQUAL_THAN      reduce using rule 67 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 67 (term -> factor .)
    GREATER_THAN    reduce using rule 67 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 67 (term -> factor .)
    SEMICOLON       reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)
    OUTSTREAM       reduce using rule 67 (term -> factor .)


state 31

    (76) number -> real .

    TIMES           reduce using rule 76 (number -> real .)
    DIVIDE          reduce using rule 76 (number -> real .)
    MOD             reduce using rule 76 (number -> real .)
    AND             reduce using rule 76 (number -> real .)
    OR              reduce using rule 76 (number -> real .)
    PLUS            reduce using rule 76 (number -> real .)
    MINUS           reduce using rule 76 (number -> real .)
    LESS_THAN       reduce using rule 76 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 76 (number -> real .)
    EQUAL_THAN      reduce using rule 76 (number -> real .)
    DIFFERENT_THAN  reduce using rule 76 (number -> real .)
    GREATER_THAN    reduce using rule 76 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 76 (number -> real .)
    SEMICOLON       reduce using rule 76 (number -> real .)
    RPAREN          reduce using rule 76 (number -> real .)
    OUTSTREAM       reduce using rule 76 (number -> real .)


state 32

    (78) real -> NUMBER . DOT NUMBER
    (79) integer -> NUMBER .

    DOT             shift and go to state 55
    TIMES           reduce using rule 79 (integer -> NUMBER .)
    DIVIDE          reduce using rule 79 (integer -> NUMBER .)
    MOD             reduce using rule 79 (integer -> NUMBER .)
    AND             reduce using rule 79 (integer -> NUMBER .)
    OR              reduce using rule 79 (integer -> NUMBER .)
    PLUS            reduce using rule 79 (integer -> NUMBER .)
    MINUS           reduce using rule 79 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 79 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 79 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 79 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 79 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 79 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 79 (integer -> NUMBER .)
    SEMICOLON       reduce using rule 79 (integer -> NUMBER .)
    RPAREN          reduce using rule 79 (integer -> NUMBER .)
    OUTSTREAM       reduce using rule 79 (integer -> NUMBER .)


state 33

    (61) simple_expression -> term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 59

state 34

    (75) factor -> expression_action_6 . LPAREN expression RPAREN expression_action_7

    LPAREN          shift and go to state 61


state 35

    (32) assignation -> variables EQUAL expression .
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          reduce using rule 32 (assignation -> variables EQUAL expression .)
    SEMICOLON       reduce using rule 32 (assignation -> variables EQUAL expression .)
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 36

    (74) factor -> NOT . id expression_action_1
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 9

    id                             shift and go to state 68

state 37

    (38) variables -> id COMMA variables .

    EQUAL           reduce using rule 38 (variables -> id COMMA variables .)
    SEMICOLON       reduce using rule 38 (variables -> id COMMA variables .)
    RPAREN          reduce using rule 38 (variables -> id COMMA variables .)


state 38

    (28) declaration -> type variables EQUAL . expression
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    integer                        shift and go to state 24
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    simple_expression              shift and go to state 25
    expression                     shift and go to state 69

state 39

    (7) main_function -> FUNCTION MAIN LPAREN . RPAREN function_block

    RPAREN          shift and go to state 70


state 40

    (6) normal_function -> FUNCTION ID LPAREN . RPAREN function_block

    RPAREN          shift and go to state 71


state 41

    (2) program_block -> declaration SEMICOLON program_block .

    $end            reduce using rule 2 (program_block -> declaration SEMICOLON program_block .)


state 42

    (79) integer -> NUMBER .

    RBRACKET        reduce using rule 79 (integer -> NUMBER .)


state 43

    (43) vector -> LBRACKET integer . RBRACKET

    RBRACKET        shift and go to state 72


state 44

    (44) vector -> LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 73


state 45

    (45) vector -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 74


state 46

    (42) id -> ID vector vector .

    TIMES           reduce using rule 42 (id -> ID vector vector .)
    DIVIDE          reduce using rule 42 (id -> ID vector vector .)
    MOD             reduce using rule 42 (id -> ID vector vector .)
    AND             reduce using rule 42 (id -> ID vector vector .)
    OR              reduce using rule 42 (id -> ID vector vector .)
    PLUS            reduce using rule 42 (id -> ID vector vector .)
    MINUS           reduce using rule 42 (id -> ID vector vector .)
    LESS_THAN       reduce using rule 42 (id -> ID vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector vector .)
    EQUAL_THAN      reduce using rule 42 (id -> ID vector vector .)
    DIFFERENT_THAN  reduce using rule 42 (id -> ID vector vector .)
    GREATER_THAN    reduce using rule 42 (id -> ID vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector vector .)
    SEMICOLON       reduce using rule 42 (id -> ID vector vector .)
    RPAREN          reduce using rule 42 (id -> ID vector vector .)
    OUTSTREAM       reduce using rule 42 (id -> ID vector vector .)
    COMMA           reduce using rule 42 (id -> ID vector vector .)
    EQUAL           reduce using rule 42 (id -> ID vector vector .)
    INSTREAM        reduce using rule 42 (id -> ID vector vector .)


state 47

    (3) program_block -> assignation SEMICOLON program_block .

    $end            reduce using rule 3 (program_block -> assignation SEMICOLON program_block .)


state 48

    (66) simple_expression -> simple_expression MINUS . expression_action_2 term expression_action_4
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 75

state 49

    (65) simple_expression -> simple_expression PLUS . expression_action_2 term expression_action_4
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 76

state 50

    (64) simple_expression -> simple_expression OR . expression_action_2 term expression_action_4
    (82) expression_action_2 -> .

    NOT             reduce using rule 82 (expression_action_2 -> .)
    ID              reduce using rule 82 (expression_action_2 -> .)
    NUMBER          reduce using rule 82 (expression_action_2 -> .)
    LPAREN          reduce using rule 82 (expression_action_2 -> .)

    expression_action_2            shift and go to state 77

state 51

    (63) simple_expression -> MINUS term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 78

state 52

    (73) factor -> number expression_action_1 .

    TIMES           reduce using rule 73 (factor -> number expression_action_1 .)
    DIVIDE          reduce using rule 73 (factor -> number expression_action_1 .)
    MOD             reduce using rule 73 (factor -> number expression_action_1 .)
    AND             reduce using rule 73 (factor -> number expression_action_1 .)
    OR              reduce using rule 73 (factor -> number expression_action_1 .)
    PLUS            reduce using rule 73 (factor -> number expression_action_1 .)
    MINUS           reduce using rule 73 (factor -> number expression_action_1 .)
    LESS_THAN       reduce using rule 73 (factor -> number expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 73 (factor -> number expression_action_1 .)
    EQUAL_THAN      reduce using rule 73 (factor -> number expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 73 (factor -> number expression_action_1 .)
    GREATER_THAN    reduce using rule 73 (factor -> number expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 73 (factor -> number expression_action_1 .)
    SEMICOLON       reduce using rule 73 (factor -> number expression_action_1 .)
    RPAREN          reduce using rule 73 (factor -> number expression_action_1 .)
    OUTSTREAM       reduce using rule 73 (factor -> number expression_action_1 .)


state 53

    (72) factor -> id expression_action_1 .

    TIMES           reduce using rule 72 (factor -> id expression_action_1 .)
    DIVIDE          reduce using rule 72 (factor -> id expression_action_1 .)
    MOD             reduce using rule 72 (factor -> id expression_action_1 .)
    AND             reduce using rule 72 (factor -> id expression_action_1 .)
    OR              reduce using rule 72 (factor -> id expression_action_1 .)
    PLUS            reduce using rule 72 (factor -> id expression_action_1 .)
    MINUS           reduce using rule 72 (factor -> id expression_action_1 .)
    LESS_THAN       reduce using rule 72 (factor -> id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 72 (factor -> id expression_action_1 .)
    EQUAL_THAN      reduce using rule 72 (factor -> id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 72 (factor -> id expression_action_1 .)
    GREATER_THAN    reduce using rule 72 (factor -> id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 72 (factor -> id expression_action_1 .)
    SEMICOLON       reduce using rule 72 (factor -> id expression_action_1 .)
    RPAREN          reduce using rule 72 (factor -> id expression_action_1 .)
    OUTSTREAM       reduce using rule 72 (factor -> id expression_action_1 .)


state 54

    (62) simple_expression -> PLUS term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 79

state 55

    (78) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 80


state 56

    (71) term -> term AND . expression_action_3 factor expression_action_5
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 81

state 57

    (69) term -> term DIVIDE . expression_action_3 factor expression_action_5
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 82

state 58

    (68) term -> term TIMES . expression_action_3 factor expression_action_5
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 83

state 59

    (61) simple_expression -> term expression_action_4 .

    OR              reduce using rule 61 (simple_expression -> term expression_action_4 .)
    PLUS            reduce using rule 61 (simple_expression -> term expression_action_4 .)
    MINUS           reduce using rule 61 (simple_expression -> term expression_action_4 .)
    LESS_THAN       reduce using rule 61 (simple_expression -> term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> term expression_action_4 .)
    EQUAL_THAN      reduce using rule 61 (simple_expression -> term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 61 (simple_expression -> term expression_action_4 .)
    GREATER_THAN    reduce using rule 61 (simple_expression -> term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 61 (simple_expression -> term expression_action_4 .)
    OUTSTREAM       reduce using rule 61 (simple_expression -> term expression_action_4 .)
    SEMICOLON       reduce using rule 61 (simple_expression -> term expression_action_4 .)
    RPAREN          reduce using rule 61 (simple_expression -> term expression_action_4 .)


state 60

    (70) term -> term MOD . expression_action_3 factor expression_action_5
    (83) expression_action_3 -> .

    NOT             reduce using rule 83 (expression_action_3 -> .)
    ID              reduce using rule 83 (expression_action_3 -> .)
    NUMBER          reduce using rule 83 (expression_action_3 -> .)
    LPAREN          reduce using rule 83 (expression_action_3 -> .)

    expression_action_3            shift and go to state 84

state 61

    (75) factor -> expression_action_6 LPAREN . expression RPAREN expression_action_7
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 85
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 62

    (60) expression -> expression GREATER_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 86

state 63

    (57) expression -> expression EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 87

state 64

    (56) expression -> expression LESS_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 88

state 65

    (58) expression -> expression DIFFERENT_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 89

state 66

    (59) expression -> expression GREATER_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 90

state 67

    (55) expression -> expression LESS_THAN . expression_action_8 simple_expression expression_action_9
    (88) expression_action_8 -> .

    PLUS            reduce using rule 88 (expression_action_8 -> .)
    MINUS           reduce using rule 88 (expression_action_8 -> .)
    NOT             reduce using rule 88 (expression_action_8 -> .)
    ID              reduce using rule 88 (expression_action_8 -> .)
    NUMBER          reduce using rule 88 (expression_action_8 -> .)
    LPAREN          reduce using rule 88 (expression_action_8 -> .)

    expression_action_8            shift and go to state 91

state 68

    (74) factor -> NOT id . expression_action_1
    (81) expression_action_1 -> .

    TIMES           reduce using rule 81 (expression_action_1 -> .)
    DIVIDE          reduce using rule 81 (expression_action_1 -> .)
    MOD             reduce using rule 81 (expression_action_1 -> .)
    AND             reduce using rule 81 (expression_action_1 -> .)
    OR              reduce using rule 81 (expression_action_1 -> .)
    PLUS            reduce using rule 81 (expression_action_1 -> .)
    MINUS           reduce using rule 81 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 81 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 81 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 81 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 81 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 81 (expression_action_1 -> .)
    RPAREN          reduce using rule 81 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 81 (expression_action_1 -> .)

    expression_action_1            shift and go to state 92

state 69

    (28) declaration -> type variables EQUAL expression .
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    SEMICOLON       reduce using rule 28 (declaration -> type variables EQUAL expression .)
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 70

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 94

state 71

    (6) normal_function -> FUNCTION ID LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 95

state 72

    (43) vector -> LBRACKET integer RBRACKET .

    COMMA           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    EQUAL           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    SEMICOLON       reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    TIMES           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    DIVIDE          reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    MOD             reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    AND             reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    OR              reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    PLUS            reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    MINUS           reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LESS_THAN       reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    EQUAL_THAN      reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    DIFFERENT_THAN  reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    GREATER_THAN    reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    RPAREN          reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    OUTSTREAM       reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    INSTREAM        reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)
    LBRACKET        reduce using rule 43 (vector -> LBRACKET integer RBRACKET .)


state 73

    (44) vector -> LBRACKET ID RBRACKET .

    COMMA           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    EQUAL           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    SEMICOLON       reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    MOD             reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    AND             reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    OR              reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LESS_THAN       reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    EQUAL_THAN      reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    DIFFERENT_THAN  reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    GREATER_THAN    reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    OUTSTREAM       reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    INSTREAM        reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)
    LBRACKET        reduce using rule 44 (vector -> LBRACKET ID RBRACKET .)


state 74

    (45) vector -> LBRACKET empty RBRACKET .

    COMMA           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    EQUAL           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    SEMICOLON       reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    TIMES           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    DIVIDE          reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    MOD             reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    AND             reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    OR              reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    PLUS            reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    MINUS           reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LESS_THAN       reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    EQUAL_THAN      reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    DIFFERENT_THAN  reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    GREATER_THAN    reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    RPAREN          reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    OUTSTREAM       reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    INSTREAM        reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)
    LBRACKET        reduce using rule 45 (vector -> LBRACKET empty RBRACKET .)


state 75

    (66) simple_expression -> simple_expression MINUS expression_action_2 . term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 96
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 76

    (65) simple_expression -> simple_expression PLUS expression_action_2 . term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 97
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 77

    (64) simple_expression -> simple_expression OR expression_action_2 . term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 98
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 78

    (63) simple_expression -> MINUS term expression_action_4 .

    OR              reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    PLUS            reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    MINUS           reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    LESS_THAN       reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    SEMICOLON       reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)
    RPAREN          reduce using rule 63 (simple_expression -> MINUS term expression_action_4 .)


state 79

    (62) simple_expression -> PLUS term expression_action_4 .

    OR              reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    PLUS            reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    MINUS           reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    LESS_THAN       reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    SEMICOLON       reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)
    RPAREN          reduce using rule 62 (simple_expression -> PLUS term expression_action_4 .)


state 80

    (78) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    SEMICOLON       reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 78 (real -> NUMBER DOT NUMBER .)
    OUTSTREAM       reduce using rule 78 (real -> NUMBER DOT NUMBER .)


state 81

    (71) term -> term AND expression_action_3 . factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 99
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 82

    (69) term -> term DIVIDE expression_action_3 . factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 100
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 83

    (68) term -> term TIMES expression_action_3 . factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 101
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 84

    (70) term -> term MOD expression_action_3 . factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 102
    integer                        shift and go to state 24
    id                             shift and go to state 28

state 85

    (75) factor -> expression_action_6 LPAREN expression . RPAREN expression_action_7
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 103
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 86

    (60) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 104

state 87

    (57) expression -> expression EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 105

state 88

    (56) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 106

state 89

    (58) expression -> expression DIFFERENT_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 107

state 90

    (59) expression -> expression GREATER_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 108

state 91

    (55) expression -> expression LESS_THAN expression_action_8 . simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 109

state 92

    (74) factor -> NOT id expression_action_1 .

    TIMES           reduce using rule 74 (factor -> NOT id expression_action_1 .)
    DIVIDE          reduce using rule 74 (factor -> NOT id expression_action_1 .)
    MOD             reduce using rule 74 (factor -> NOT id expression_action_1 .)
    AND             reduce using rule 74 (factor -> NOT id expression_action_1 .)
    OR              reduce using rule 74 (factor -> NOT id expression_action_1 .)
    PLUS            reduce using rule 74 (factor -> NOT id expression_action_1 .)
    MINUS           reduce using rule 74 (factor -> NOT id expression_action_1 .)
    LESS_THAN       reduce using rule 74 (factor -> NOT id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 74 (factor -> NOT id expression_action_1 .)
    EQUAL_THAN      reduce using rule 74 (factor -> NOT id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 74 (factor -> NOT id expression_action_1 .)
    GREATER_THAN    reduce using rule 74 (factor -> NOT id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 74 (factor -> NOT id expression_action_1 .)
    SEMICOLON       reduce using rule 74 (factor -> NOT id expression_action_1 .)
    RPAREN          reduce using rule 74 (factor -> NOT id expression_action_1 .)
    OUTSTREAM       reduce using rule 74 (factor -> NOT id expression_action_1 .)


state 93

    (8) function_block -> LBRACE . instruction RBRACE
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (80) empty -> .
    (46) function_call -> . ID LPAREN RPAREN
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (34) unary_operation -> . ID PLUS PLUS
    (35) unary_operation -> . ID MINUS MINUS
    (36) unary_operation -> . PLUS PLUS ID
    (37) unary_operation -> . MINUS MINUS ID
    (47) if_sentence -> . IF LPAREN expression RPAREN function_block empty
    (48) if_sentence -> . IF LPAREN expression RPAREN function_block ELSE function_block
    (49) while_sentence -> . WHILE LPAREN expression RPAREN function_block
    (50) do_while_sentence -> . DO function_block WHILE LPAREN expression RPAREN SEMICOLON
    (51) for_sentence -> . FOR LPAREN for_expression RPAREN function_block
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    RBRACE          reduce using rule 80 (empty -> .)
    ID              shift and go to state 126
    COUT            shift and go to state 111
    CIN             shift and go to state 125
    PLUS            shift and go to state 119
    MINUS           shift and go to state 117
    IF              shift and go to state 127
    WHILE           shift and go to state 114
    DO              shift and go to state 110
    FOR             shift and go to state 124

    assignation                    shift and go to state 128
    do_while_sentence              shift and go to state 112
    if_sentence                    shift and go to state 130
    variables                      shift and go to state 2
    instruction                    shift and go to state 129
    function_call                  shift and go to state 113
    proposition                    shift and go to state 115
    id                             shift and go to state 3
    while_sentence                 shift and go to state 116
    print                          shift and go to state 120
    input                          shift and go to state 121
    unary_operation                shift and go to state 122
    for_sentence                   shift and go to state 118
    empty                          shift and go to state 123

state 94

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN function_block .

    $end            reduce using rule 7 (main_function -> FUNCTION MAIN LPAREN RPAREN function_block .)


state 95

    (6) normal_function -> FUNCTION ID LPAREN RPAREN function_block .

    FUNCTION        reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    INT             reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    DOUBLE          reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    ID              reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)


state 96

    (66) simple_expression -> simple_expression MINUS expression_action_2 term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 131

state 97

    (65) simple_expression -> simple_expression PLUS expression_action_2 term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 132

state 98

    (64) simple_expression -> simple_expression OR expression_action_2 term . expression_action_4
    (68) term -> term . TIMES expression_action_3 factor expression_action_5
    (69) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (70) term -> term . MOD expression_action_3 factor expression_action_5
    (71) term -> term . AND expression_action_3 factor expression_action_5
    (84) expression_action_4 -> .

    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 60
    AND             shift and go to state 56
    OR              reduce using rule 84 (expression_action_4 -> .)
    PLUS            reduce using rule 84 (expression_action_4 -> .)
    MINUS           reduce using rule 84 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 84 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 84 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 84 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 84 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 84 (expression_action_4 -> .)
    RPAREN          reduce using rule 84 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 84 (expression_action_4 -> .)

    expression_action_4            shift and go to state 133

state 99

    (71) term -> term AND expression_action_3 factor . expression_action_5
    (85) expression_action_5 -> .

    TIMES           reduce using rule 85 (expression_action_5 -> .)
    DIVIDE          reduce using rule 85 (expression_action_5 -> .)
    MOD             reduce using rule 85 (expression_action_5 -> .)
    AND             reduce using rule 85 (expression_action_5 -> .)
    OR              reduce using rule 85 (expression_action_5 -> .)
    PLUS            reduce using rule 85 (expression_action_5 -> .)
    MINUS           reduce using rule 85 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 85 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 85 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 85 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 85 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 85 (expression_action_5 -> .)
    RPAREN          reduce using rule 85 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 85 (expression_action_5 -> .)

    expression_action_5            shift and go to state 134

state 100

    (69) term -> term DIVIDE expression_action_3 factor . expression_action_5
    (85) expression_action_5 -> .

    TIMES           reduce using rule 85 (expression_action_5 -> .)
    DIVIDE          reduce using rule 85 (expression_action_5 -> .)
    MOD             reduce using rule 85 (expression_action_5 -> .)
    AND             reduce using rule 85 (expression_action_5 -> .)
    OR              reduce using rule 85 (expression_action_5 -> .)
    PLUS            reduce using rule 85 (expression_action_5 -> .)
    MINUS           reduce using rule 85 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 85 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 85 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 85 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 85 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 85 (expression_action_5 -> .)
    RPAREN          reduce using rule 85 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 85 (expression_action_5 -> .)

    expression_action_5            shift and go to state 135

state 101

    (68) term -> term TIMES expression_action_3 factor . expression_action_5
    (85) expression_action_5 -> .

    TIMES           reduce using rule 85 (expression_action_5 -> .)
    DIVIDE          reduce using rule 85 (expression_action_5 -> .)
    MOD             reduce using rule 85 (expression_action_5 -> .)
    AND             reduce using rule 85 (expression_action_5 -> .)
    OR              reduce using rule 85 (expression_action_5 -> .)
    PLUS            reduce using rule 85 (expression_action_5 -> .)
    MINUS           reduce using rule 85 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 85 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 85 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 85 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 85 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 85 (expression_action_5 -> .)
    RPAREN          reduce using rule 85 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 85 (expression_action_5 -> .)

    expression_action_5            shift and go to state 136

state 102

    (70) term -> term MOD expression_action_3 factor . expression_action_5
    (85) expression_action_5 -> .

    TIMES           reduce using rule 85 (expression_action_5 -> .)
    DIVIDE          reduce using rule 85 (expression_action_5 -> .)
    MOD             reduce using rule 85 (expression_action_5 -> .)
    AND             reduce using rule 85 (expression_action_5 -> .)
    OR              reduce using rule 85 (expression_action_5 -> .)
    PLUS            reduce using rule 85 (expression_action_5 -> .)
    MINUS           reduce using rule 85 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 85 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 85 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 85 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 85 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 85 (expression_action_5 -> .)
    RPAREN          reduce using rule 85 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 85 (expression_action_5 -> .)

    expression_action_5            shift and go to state 137

state 103

    (75) factor -> expression_action_6 LPAREN expression RPAREN . expression_action_7
    (87) expression_action_7 -> .

    TIMES           reduce using rule 87 (expression_action_7 -> .)
    DIVIDE          reduce using rule 87 (expression_action_7 -> .)
    MOD             reduce using rule 87 (expression_action_7 -> .)
    AND             reduce using rule 87 (expression_action_7 -> .)
    OR              reduce using rule 87 (expression_action_7 -> .)
    PLUS            reduce using rule 87 (expression_action_7 -> .)
    MINUS           reduce using rule 87 (expression_action_7 -> .)
    LESS_THAN       reduce using rule 87 (expression_action_7 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 87 (expression_action_7 -> .)
    EQUAL_THAN      reduce using rule 87 (expression_action_7 -> .)
    DIFFERENT_THAN  reduce using rule 87 (expression_action_7 -> .)
    GREATER_THAN    reduce using rule 87 (expression_action_7 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 87 (expression_action_7 -> .)
    SEMICOLON       reduce using rule 87 (expression_action_7 -> .)
    RPAREN          reduce using rule 87 (expression_action_7 -> .)
    OUTSTREAM       reduce using rule 87 (expression_action_7 -> .)

    expression_action_7            shift and go to state 138

state 104

    (60) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 139

state 105

    (57) expression -> expression EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 140

state 106

    (56) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 141

state 107

    (58) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 142

state 108

    (59) expression -> expression GREATER_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 143

state 109

    (55) expression -> expression LESS_THAN expression_action_8 simple_expression . expression_action_9
    (64) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (65) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (89) expression_action_9 -> .

    OR              shift and go to state 50
    PLUS            shift and go to state 49
    MINUS           shift and go to state 48
    LESS_THAN       reduce using rule 89 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 89 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 89 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 89 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 89 (expression_action_9 -> .)
    RPAREN          reduce using rule 89 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 89 (expression_action_9 -> .)

    expression_action_9            shift and go to state 144

state 110

    (50) do_while_sentence -> DO . function_block WHILE LPAREN expression RPAREN SEMICOLON
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 145

state 111

    (20) print -> COUT . output_expression
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    OUTSTREAM       shift and go to state 146

    output_expression              shift and go to state 147

state 112

    (18) proposition -> do_while_sentence .

    ID              reduce using rule 18 (proposition -> do_while_sentence .)
    COUT            reduce using rule 18 (proposition -> do_while_sentence .)
    CIN             reduce using rule 18 (proposition -> do_while_sentence .)
    PLUS            reduce using rule 18 (proposition -> do_while_sentence .)
    MINUS           reduce using rule 18 (proposition -> do_while_sentence .)
    IF              reduce using rule 18 (proposition -> do_while_sentence .)
    WHILE           reduce using rule 18 (proposition -> do_while_sentence .)
    DO              reduce using rule 18 (proposition -> do_while_sentence .)
    FOR             reduce using rule 18 (proposition -> do_while_sentence .)
    RBRACE          reduce using rule 18 (proposition -> do_while_sentence .)


state 113

    (11) proposition -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 148


state 114

    (49) while_sentence -> WHILE . LPAREN expression RPAREN function_block

    LPAREN          shift and go to state 149


state 115

    (9) instruction -> proposition . instruction
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (80) empty -> .
    (46) function_call -> . ID LPAREN RPAREN
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (34) unary_operation -> . ID PLUS PLUS
    (35) unary_operation -> . ID MINUS MINUS
    (36) unary_operation -> . PLUS PLUS ID
    (37) unary_operation -> . MINUS MINUS ID
    (47) if_sentence -> . IF LPAREN expression RPAREN function_block empty
    (48) if_sentence -> . IF LPAREN expression RPAREN function_block ELSE function_block
    (49) while_sentence -> . WHILE LPAREN expression RPAREN function_block
    (50) do_while_sentence -> . DO function_block WHILE LPAREN expression RPAREN SEMICOLON
    (51) for_sentence -> . FOR LPAREN for_expression RPAREN function_block
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    RBRACE          reduce using rule 80 (empty -> .)
    ID              shift and go to state 126
    COUT            shift and go to state 111
    CIN             shift and go to state 125
    PLUS            shift and go to state 119
    MINUS           shift and go to state 117
    IF              shift and go to state 127
    WHILE           shift and go to state 114
    DO              shift and go to state 110
    FOR             shift and go to state 124

    assignation                    shift and go to state 128
    do_while_sentence              shift and go to state 112
    if_sentence                    shift and go to state 130
    variables                      shift and go to state 2
    instruction                    shift and go to state 150
    function_call                  shift and go to state 113
    proposition                    shift and go to state 115
    id                             shift and go to state 3
    while_sentence                 shift and go to state 116
    print                          shift and go to state 120
    input                          shift and go to state 121
    unary_operation                shift and go to state 122
    for_sentence                   shift and go to state 118
    empty                          shift and go to state 123

state 116

    (17) proposition -> while_sentence .

    ID              reduce using rule 17 (proposition -> while_sentence .)
    COUT            reduce using rule 17 (proposition -> while_sentence .)
    CIN             reduce using rule 17 (proposition -> while_sentence .)
    PLUS            reduce using rule 17 (proposition -> while_sentence .)
    MINUS           reduce using rule 17 (proposition -> while_sentence .)
    IF              reduce using rule 17 (proposition -> while_sentence .)
    WHILE           reduce using rule 17 (proposition -> while_sentence .)
    DO              reduce using rule 17 (proposition -> while_sentence .)
    FOR             reduce using rule 17 (proposition -> while_sentence .)
    RBRACE          reduce using rule 17 (proposition -> while_sentence .)


state 117

    (37) unary_operation -> MINUS . MINUS ID

    MINUS           shift and go to state 151


state 118

    (19) proposition -> for_sentence .

    ID              reduce using rule 19 (proposition -> for_sentence .)
    COUT            reduce using rule 19 (proposition -> for_sentence .)
    CIN             reduce using rule 19 (proposition -> for_sentence .)
    PLUS            reduce using rule 19 (proposition -> for_sentence .)
    MINUS           reduce using rule 19 (proposition -> for_sentence .)
    IF              reduce using rule 19 (proposition -> for_sentence .)
    WHILE           reduce using rule 19 (proposition -> for_sentence .)
    DO              reduce using rule 19 (proposition -> for_sentence .)
    FOR             reduce using rule 19 (proposition -> for_sentence .)
    RBRACE          reduce using rule 19 (proposition -> for_sentence .)


state 119

    (36) unary_operation -> PLUS . PLUS ID

    PLUS            shift and go to state 152


state 120

    (13) proposition -> print . SEMICOLON

    SEMICOLON       shift and go to state 153


state 121

    (14) proposition -> input . SEMICOLON

    SEMICOLON       shift and go to state 154


state 122

    (15) proposition -> unary_operation . SEMICOLON

    SEMICOLON       shift and go to state 155


state 123

    (10) instruction -> empty .

    RBRACE          reduce using rule 10 (instruction -> empty .)


state 124

    (51) for_sentence -> FOR . LPAREN for_expression RPAREN function_block

    LPAREN          shift and go to state 156


state 125

    (25) input -> CIN . input_expression
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    INSTREAM        shift and go to state 157

    input_expression               shift and go to state 158

state 126

    (46) function_call -> ID . LPAREN RPAREN
    (34) unary_operation -> ID . PLUS PLUS
    (35) unary_operation -> ID . MINUS MINUS
    (40) id -> ID .
    (41) id -> ID . vector
    (42) id -> ID . vector vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    LPAREN          shift and go to state 161
    PLUS            shift and go to state 160
    MINUS           shift and go to state 159
    COMMA           reduce using rule 40 (id -> ID .)
    EQUAL           reduce using rule 40 (id -> ID .)
    SEMICOLON       reduce using rule 40 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 127

    (47) if_sentence -> IF . LPAREN expression RPAREN function_block empty
    (48) if_sentence -> IF . LPAREN expression RPAREN function_block ELSE function_block

    LPAREN          shift and go to state 162


state 128

    (12) proposition -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 163


state 129

    (8) function_block -> LBRACE instruction . RBRACE

    RBRACE          shift and go to state 164


state 130

    (16) proposition -> if_sentence .

    ID              reduce using rule 16 (proposition -> if_sentence .)
    COUT            reduce using rule 16 (proposition -> if_sentence .)
    CIN             reduce using rule 16 (proposition -> if_sentence .)
    PLUS            reduce using rule 16 (proposition -> if_sentence .)
    MINUS           reduce using rule 16 (proposition -> if_sentence .)
    IF              reduce using rule 16 (proposition -> if_sentence .)
    WHILE           reduce using rule 16 (proposition -> if_sentence .)
    DO              reduce using rule 16 (proposition -> if_sentence .)
    FOR             reduce using rule 16 (proposition -> if_sentence .)
    RBRACE          reduce using rule 16 (proposition -> if_sentence .)


state 131

    (66) simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 66 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)


state 132

    (65) simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 65 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)


state 133

    (64) simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .

    OR              reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 64 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)


state 134

    (71) term -> term AND expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 71 (term -> term AND expression_action_3 factor expression_action_5 .)


state 135

    (69) term -> term DIVIDE expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 69 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)


state 136

    (68) term -> term TIMES expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 68 (term -> term TIMES expression_action_3 factor expression_action_5 .)


state 137

    (70) term -> term MOD expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 70 (term -> term MOD expression_action_3 factor expression_action_5 .)


state 138

    (75) factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .

    TIMES           reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIVIDE          reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MOD             reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    AND             reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OR              reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    PLUS            reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MINUS           reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_THAN       reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_OR_EQUAL_THAN reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    EQUAL_THAN      reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIFFERENT_THAN  reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_THAN    reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_OR_EQUAL_THAN reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    SEMICOLON       reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    RPAREN          reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OUTSTREAM       reduce using rule 75 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)


state 139

    (60) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 60 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 140

    (57) expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 57 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 141

    (56) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 56 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 142

    (58) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 58 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)


state 143

    (59) expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 59 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)


state 144

    (55) expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 55 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)


state 145

    (50) do_while_sentence -> DO function_block . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 165


state 146

    (21) output_expression -> OUTSTREAM . expression output_expression
    (22) output_expression -> OUTSTREAM . expression
    (23) output_expression -> OUTSTREAM . TEXT output_expression
    (24) output_expression -> OUTSTREAM . TEXT
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    TEXT            shift and go to state 166
    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 167
    factor                         shift and go to state 30
    number                         shift and go to state 27
    expression_action_6            shift and go to state 34
    id                             shift and go to state 28
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 147

    (20) print -> COUT output_expression .

    SEMICOLON       reduce using rule 20 (print -> COUT output_expression .)


state 148

    (11) proposition -> function_call SEMICOLON .

    ID              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    COUT            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    CIN             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    PLUS            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    MINUS           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    IF              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    WHILE           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    DO              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    FOR             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    RBRACE          reduce using rule 11 (proposition -> function_call SEMICOLON .)


state 149

    (49) while_sentence -> WHILE LPAREN . expression RPAREN function_block
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 168
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 150

    (9) instruction -> proposition instruction .

    RBRACE          reduce using rule 9 (instruction -> proposition instruction .)


state 151

    (37) unary_operation -> MINUS MINUS . ID

    ID              shift and go to state 169


state 152

    (36) unary_operation -> PLUS PLUS . ID

    ID              shift and go to state 170


state 153

    (13) proposition -> print SEMICOLON .

    ID              reduce using rule 13 (proposition -> print SEMICOLON .)
    COUT            reduce using rule 13 (proposition -> print SEMICOLON .)
    CIN             reduce using rule 13 (proposition -> print SEMICOLON .)
    PLUS            reduce using rule 13 (proposition -> print SEMICOLON .)
    MINUS           reduce using rule 13 (proposition -> print SEMICOLON .)
    IF              reduce using rule 13 (proposition -> print SEMICOLON .)
    WHILE           reduce using rule 13 (proposition -> print SEMICOLON .)
    DO              reduce using rule 13 (proposition -> print SEMICOLON .)
    FOR             reduce using rule 13 (proposition -> print SEMICOLON .)
    RBRACE          reduce using rule 13 (proposition -> print SEMICOLON .)


state 154

    (14) proposition -> input SEMICOLON .

    ID              reduce using rule 14 (proposition -> input SEMICOLON .)
    COUT            reduce using rule 14 (proposition -> input SEMICOLON .)
    CIN             reduce using rule 14 (proposition -> input SEMICOLON .)
    PLUS            reduce using rule 14 (proposition -> input SEMICOLON .)
    MINUS           reduce using rule 14 (proposition -> input SEMICOLON .)
    IF              reduce using rule 14 (proposition -> input SEMICOLON .)
    WHILE           reduce using rule 14 (proposition -> input SEMICOLON .)
    DO              reduce using rule 14 (proposition -> input SEMICOLON .)
    FOR             reduce using rule 14 (proposition -> input SEMICOLON .)
    RBRACE          reduce using rule 14 (proposition -> input SEMICOLON .)


state 155

    (15) proposition -> unary_operation SEMICOLON .

    ID              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    COUT            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    CIN             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    PLUS            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    MINUS           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    IF              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    WHILE           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    DO              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    FOR             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    RBRACE          reduce using rule 15 (proposition -> unary_operation SEMICOLON .)


state 156

    (51) for_sentence -> FOR LPAREN . for_expression RPAREN function_block
    (52) for_expression -> . declaration SEMICOLON expression SEMICOLON assignation
    (53) for_expression -> . declaration SEMICOLON expression SEMICOLON unary_operation
    (28) declaration -> . type variables EQUAL expression
    (29) declaration -> . type variables
    (30) type -> . INT
    (31) type -> . DOUBLE

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12

    type                           shift and go to state 6
    for_expression                 shift and go to state 171
    declaration                    shift and go to state 172

state 157

    (26) input_expression -> INSTREAM . id input_expression
    (27) input_expression -> INSTREAM . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 9

    id                             shift and go to state 173

state 158

    (25) input -> CIN input_expression .

    SEMICOLON       reduce using rule 25 (input -> CIN input_expression .)


state 159

    (35) unary_operation -> ID MINUS . MINUS

    MINUS           shift and go to state 174


state 160

    (34) unary_operation -> ID PLUS . PLUS

    PLUS            shift and go to state 175


state 161

    (46) function_call -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 176


state 162

    (47) if_sentence -> IF LPAREN . expression RPAREN function_block empty
    (48) if_sentence -> IF LPAREN . expression RPAREN function_block ELSE function_block
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 177
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 163

    (12) proposition -> assignation SEMICOLON .

    ID              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    COUT            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    CIN             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    PLUS            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    MINUS           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    IF              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    WHILE           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    DO              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    FOR             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    RBRACE          reduce using rule 12 (proposition -> assignation SEMICOLON .)


state 164

    (8) function_block -> LBRACE instruction RBRACE .

    ID              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    COUT            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    CIN             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    PLUS            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    MINUS           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    IF              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    WHILE           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    DO              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FOR             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    RBRACE          reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    $end            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    ELSE            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FUNCTION        reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    INT             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    DOUBLE          reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)


state 165

    (50) do_while_sentence -> DO function_block WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 178


state 166

    (23) output_expression -> OUTSTREAM TEXT . output_expression
    (24) output_expression -> OUTSTREAM TEXT .
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 24 (output_expression -> OUTSTREAM TEXT .)
    OUTSTREAM       shift and go to state 146

    output_expression              shift and go to state 179

state 167

    (21) output_expression -> OUTSTREAM expression . output_expression
    (22) output_expression -> OUTSTREAM expression .
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 22 (output_expression -> OUTSTREAM expression .)
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62
    OUTSTREAM       shift and go to state 146

    output_expression              shift and go to state 180

state 168

    (49) while_sentence -> WHILE LPAREN expression . RPAREN function_block
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 181
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 169

    (37) unary_operation -> MINUS MINUS ID .

    RPAREN          reduce using rule 37 (unary_operation -> MINUS MINUS ID .)
    SEMICOLON       reduce using rule 37 (unary_operation -> MINUS MINUS ID .)


state 170

    (36) unary_operation -> PLUS PLUS ID .

    RPAREN          reduce using rule 36 (unary_operation -> PLUS PLUS ID .)
    SEMICOLON       reduce using rule 36 (unary_operation -> PLUS PLUS ID .)


state 171

    (51) for_sentence -> FOR LPAREN for_expression . RPAREN function_block

    RPAREN          shift and go to state 182


state 172

    (52) for_expression -> declaration . SEMICOLON expression SEMICOLON assignation
    (53) for_expression -> declaration . SEMICOLON expression SEMICOLON unary_operation

    SEMICOLON       shift and go to state 183


state 173

    (26) input_expression -> INSTREAM id . input_expression
    (27) input_expression -> INSTREAM id .
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    SEMICOLON       reduce using rule 27 (input_expression -> INSTREAM id .)
    INSTREAM        shift and go to state 157

    input_expression               shift and go to state 184

state 174

    (35) unary_operation -> ID MINUS MINUS .

    RPAREN          reduce using rule 35 (unary_operation -> ID MINUS MINUS .)
    SEMICOLON       reduce using rule 35 (unary_operation -> ID MINUS MINUS .)


state 175

    (34) unary_operation -> ID PLUS PLUS .

    RPAREN          reduce using rule 34 (unary_operation -> ID PLUS PLUS .)
    SEMICOLON       reduce using rule 34 (unary_operation -> ID PLUS PLUS .)


state 176

    (46) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 46 (function_call -> ID LPAREN RPAREN .)


state 177

    (47) if_sentence -> IF LPAREN expression . RPAREN function_block empty
    (48) if_sentence -> IF LPAREN expression . RPAREN function_block ELSE function_block
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 185
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 178

    (50) do_while_sentence -> DO function_block WHILE LPAREN . expression RPAREN SEMICOLON
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    expression                     shift and go to state 186
    factor                         shift and go to state 30
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    integer                        shift and go to state 24
    simple_expression              shift and go to state 25

state 179

    (23) output_expression -> OUTSTREAM TEXT output_expression .

    SEMICOLON       reduce using rule 23 (output_expression -> OUTSTREAM TEXT output_expression .)


state 180

    (21) output_expression -> OUTSTREAM expression output_expression .

    SEMICOLON       reduce using rule 21 (output_expression -> OUTSTREAM expression output_expression .)


state 181

    (49) while_sentence -> WHILE LPAREN expression RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 187

state 182

    (51) for_sentence -> FOR LPAREN for_expression RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 188

state 183

    (52) for_expression -> declaration SEMICOLON . expression SEMICOLON assignation
    (53) for_expression -> declaration SEMICOLON . expression SEMICOLON unary_operation
    (54) expression -> . simple_expression
    (55) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (61) simple_expression -> . term expression_action_4
    (62) simple_expression -> . PLUS term expression_action_4
    (63) simple_expression -> . MINUS term expression_action_4
    (64) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (65) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (66) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (67) term -> . factor
    (68) term -> . term TIMES expression_action_3 factor expression_action_5
    (69) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (70) term -> . term MOD expression_action_3 factor expression_action_5
    (71) term -> . term AND expression_action_3 factor expression_action_5
    (72) factor -> . id expression_action_1
    (73) factor -> . number expression_action_1
    (74) factor -> . NOT id expression_action_1
    (75) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector
    (76) number -> . real
    (77) number -> . integer
    (86) expression_action_6 -> .
    (78) real -> . NUMBER DOT NUMBER
    (79) integer -> . NUMBER

    PLUS            shift and go to state 29
    MINUS           shift and go to state 26
    NOT             shift and go to state 36
    ID              shift and go to state 9
    LPAREN          reduce using rule 86 (expression_action_6 -> .)
    NUMBER          shift and go to state 32

    real                           shift and go to state 31
    term                           shift and go to state 33
    integer                        shift and go to state 24
    expression                     shift and go to state 189
    number                         shift and go to state 27
    id                             shift and go to state 28
    expression_action_6            shift and go to state 34
    factor                         shift and go to state 30
    simple_expression              shift and go to state 25

state 184

    (26) input_expression -> INSTREAM id input_expression .

    SEMICOLON       reduce using rule 26 (input_expression -> INSTREAM id input_expression .)


state 185

    (47) if_sentence -> IF LPAREN expression RPAREN . function_block empty
    (48) if_sentence -> IF LPAREN expression RPAREN . function_block ELSE function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 190

state 186

    (50) do_while_sentence -> DO function_block WHILE LPAREN expression . RPAREN SEMICOLON
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 191
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 187

    (49) while_sentence -> WHILE LPAREN expression RPAREN function_block .

    ID              reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    COUT            reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    CIN             reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    PLUS            reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    MINUS           reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    IF              reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    WHILE           reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    DO              reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    FOR             reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)
    RBRACE          reduce using rule 49 (while_sentence -> WHILE LPAREN expression RPAREN function_block .)


state 188

    (51) for_sentence -> FOR LPAREN for_expression RPAREN function_block .

    ID              reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    COUT            reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    CIN             reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    PLUS            reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    MINUS           reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    IF              reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    WHILE           reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    DO              reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    FOR             reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)
    RBRACE          reduce using rule 51 (for_sentence -> FOR LPAREN for_expression RPAREN function_block .)


state 189

    (52) for_expression -> declaration SEMICOLON expression . SEMICOLON assignation
    (53) for_expression -> declaration SEMICOLON expression . SEMICOLON unary_operation
    (55) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (56) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (57) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (58) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (59) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (60) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    SEMICOLON       shift and go to state 192
    LESS_THAN       shift and go to state 67
    LESS_OR_EQUAL_THAN shift and go to state 64
    EQUAL_THAN      shift and go to state 63
    DIFFERENT_THAN  shift and go to state 65
    GREATER_THAN    shift and go to state 66
    GREATER_OR_EQUAL_THAN shift and go to state 62


state 190

    (47) if_sentence -> IF LPAREN expression RPAREN function_block . empty
    (48) if_sentence -> IF LPAREN expression RPAREN function_block . ELSE function_block
    (80) empty -> .

    ELSE            shift and go to state 193
    ID              reduce using rule 80 (empty -> .)
    COUT            reduce using rule 80 (empty -> .)
    CIN             reduce using rule 80 (empty -> .)
    PLUS            reduce using rule 80 (empty -> .)
    MINUS           reduce using rule 80 (empty -> .)
    IF              reduce using rule 80 (empty -> .)
    WHILE           reduce using rule 80 (empty -> .)
    DO              reduce using rule 80 (empty -> .)
    FOR             reduce using rule 80 (empty -> .)
    RBRACE          reduce using rule 80 (empty -> .)

    empty                          shift and go to state 194

state 191

    (50) do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 192

    (52) for_expression -> declaration SEMICOLON expression SEMICOLON . assignation
    (53) for_expression -> declaration SEMICOLON expression SEMICOLON . unary_operation
    (32) assignation -> . variables EQUAL expression
    (33) assignation -> . variables
    (34) unary_operation -> . ID PLUS PLUS
    (35) unary_operation -> . ID MINUS MINUS
    (36) unary_operation -> . PLUS PLUS ID
    (37) unary_operation -> . MINUS MINUS ID
    (38) variables -> . id COMMA variables
    (39) variables -> . id
    (40) id -> . ID
    (41) id -> . ID vector
    (42) id -> . ID vector vector

    ID              shift and go to state 198
    PLUS            shift and go to state 119
    MINUS           shift and go to state 117

    assignation                    shift and go to state 196
    variables                      shift and go to state 2
    unary_operation                shift and go to state 197
    id                             shift and go to state 3

state 193

    (48) if_sentence -> IF LPAREN expression RPAREN function_block ELSE . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 93

    function_block                 shift and go to state 199

state 194

    (47) if_sentence -> IF LPAREN expression RPAREN function_block empty .

    ID              reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    COUT            reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    CIN             reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    PLUS            reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    MINUS           reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    IF              reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    WHILE           reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    DO              reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    FOR             reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)
    RBRACE          reduce using rule 47 (if_sentence -> IF LPAREN expression RPAREN function_block empty .)


state 195

    (50) do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 50 (do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON .)


state 196

    (52) for_expression -> declaration SEMICOLON expression SEMICOLON assignation .

    RPAREN          reduce using rule 52 (for_expression -> declaration SEMICOLON expression SEMICOLON assignation .)


state 197

    (53) for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation .

    RPAREN          reduce using rule 53 (for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation .)


state 198

    (34) unary_operation -> ID . PLUS PLUS
    (35) unary_operation -> ID . MINUS MINUS
    (40) id -> ID .
    (41) id -> ID . vector
    (42) id -> ID . vector vector
    (43) vector -> . LBRACKET integer RBRACKET
    (44) vector -> . LBRACKET ID RBRACKET
    (45) vector -> . LBRACKET empty RBRACKET

    PLUS            shift and go to state 160
    MINUS           shift and go to state 159
    COMMA           reduce using rule 40 (id -> ID .)
    EQUAL           reduce using rule 40 (id -> ID .)
    RPAREN          reduce using rule 40 (id -> ID .)
    LBRACKET        shift and go to state 20

    vector                         shift and go to state 21

state 199

    (48) if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .

    ID              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    COUT            reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    CIN             reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    PLUS            reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    MINUS           reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    IF              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    WHILE           reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    DO              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    FOR             reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)
    RBRACE          reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block .)

