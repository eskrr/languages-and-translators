Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     program_block -> declaration SEMICOLON program_block
Rule 3     program_block -> assignation SEMICOLON program_block
Rule 4     program_block -> normal_function program_block
Rule 5     program_block -> main_function
Rule 6     normal_function -> FUNCTION ID LPAREN RPAREN function_block
Rule 7     main_function -> FUNCTION MAIN LPAREN RPAREN function_block
Rule 8     function_block -> LBRACE instruction RBRACE
Rule 9     instruction -> proposition instruction
Rule 10    instruction -> empty
Rule 11    proposition -> function_call SEMICOLON
Rule 12    proposition -> assignation SEMICOLON
Rule 13    proposition -> print SEMICOLON
Rule 14    proposition -> input SEMICOLON
Rule 15    proposition -> unary_operation SEMICOLON
Rule 16    proposition -> if_sentence
Rule 17    proposition -> while_sentence
Rule 18    proposition -> do_while_sentence
Rule 19    proposition -> for_sentence
Rule 20    print -> COUT output_expression
Rule 21    output_expression -> OUTSTREAM expression output_expression
Rule 22    output_expression -> OUTSTREAM expression
Rule 23    output_expression -> OUTSTREAM TEXT output_expression
Rule 24    output_expression -> OUTSTREAM TEXT
Rule 25    input -> CIN input_expression
Rule 26    input_expression -> INSTREAM id input_expression
Rule 27    input_expression -> INSTREAM id
Rule 28    declaration -> type variables
Rule 29    type -> INT
Rule 30    type -> DOUBLE
Rule 31    assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
Rule 32    assignation_action_1 -> <empty>
Rule 33    assignation_action_2 -> <empty>
Rule 34    assignation_action_3 -> <empty>
Rule 35    unary_operation -> ID PLUS PLUS
Rule 36    unary_operation -> ID MINUS MINUS
Rule 37    unary_operation -> PLUS PLUS ID
Rule 38    unary_operation -> MINUS MINUS ID
Rule 39    variables -> id COMMA variables
Rule 40    variables -> id
Rule 41    id -> ID
Rule 42    id -> ID vector
Rule 43    id -> ID vector vector
Rule 44    vector -> LBRACKET integer RBRACKET
Rule 45    vector -> LBRACKET ID RBRACKET
Rule 46    vector -> LBRACKET empty RBRACKET
Rule 47    function_call -> ID LPAREN RPAREN
Rule 48    if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
Rule 49    if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
Rule 50    if_action_1 -> <empty>
Rule 51    if_action_2 -> <empty>
Rule 52    if_action_3 -> <empty>
Rule 53    while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
Rule 54    while_action_1 -> <empty>
Rule 55    while_action_2 -> <empty>
Rule 56    while_action_3 -> <empty>
Rule 57    do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
Rule 58    do_while_action_1 -> <empty>
Rule 59    do_while_action_2 -> <empty>
Rule 60    for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4
Rule 61    for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
Rule 62    for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
Rule 63    for_action_1 -> <empty>
Rule 64    for_action_2 -> <empty>
Rule 65    for_action_3 -> <empty>
Rule 66    for_action_4 -> <empty>
Rule 67    expression -> simple_expression
Rule 68    expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9
Rule 69    expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 70    expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 71    expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
Rule 72    expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9
Rule 73    expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
Rule 74    simple_expression -> term expression_action_4
Rule 75    simple_expression -> PLUS term expression_action_4
Rule 76    simple_expression -> MINUS term expression_action_4
Rule 77    simple_expression -> simple_expression OR expression_action_2 term expression_action_4
Rule 78    simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4
Rule 79    simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4
Rule 80    term -> factor
Rule 81    term -> term TIMES expression_action_3 factor expression_action_5
Rule 82    term -> term DIVIDE expression_action_3 factor expression_action_5
Rule 83    term -> term MOD expression_action_3 factor expression_action_5
Rule 84    term -> term AND expression_action_3 factor expression_action_5
Rule 85    factor -> id expression_action_1
Rule 86    factor -> number expression_action_1
Rule 87    factor -> NOT id expression_action_1
Rule 88    factor -> expression_action_6 LPAREN expression RPAREN expression_action_7
Rule 89    number -> real
Rule 90    number -> integer
Rule 91    real -> NUMBER DOT NUMBER
Rule 92    integer -> NUMBER
Rule 93    empty -> <empty>
Rule 94    expression_action_1 -> <empty>
Rule 95    expression_action_2 -> <empty>
Rule 96    expression_action_3 -> <empty>
Rule 97    expression_action_4 -> <empty>
Rule 98    expression_action_5 -> <empty>
Rule 99    expression_action_6 -> <empty>
Rule 100   expression_action_7 -> <empty>
Rule 101   expression_action_8 -> <empty>
Rule 102   expression_action_9 -> <empty>

Terminals, with rules where they appear

AND                  : 84
CIN                  : 25
COMMA                : 39
COUT                 : 20
DIFFERENT_THAN       : 71
DIVIDE               : 82
DO                   : 57
DOT                  : 91
DOUBLE               : 30
ELSE                 : 49
EQUAL                : 31
EQUAL_THAN           : 70
FOR                  : 60
FUNCTION             : 6 7
GREATER_OR_EQUAL_THAN : 73
GREATER_THAN         : 72
ID                   : 6 35 36 37 38 41 42 43 45 47
IF                   : 48 49
INSTREAM             : 26 27
INT                  : 29
LBRACE               : 8
LBRACKET             : 44 45 46
LESS_OR_EQUAL_THAN   : 69
LESS_THAN            : 68
LPAREN               : 6 7 47 48 49 53 57 60 88
MAIN                 : 7
MINUS                : 36 36 38 38 76 79
MOD                  : 83
NOT                  : 87
NUMBER               : 91 91 92
OR                   : 77
OUTSTREAM            : 21 22 23 24
PLUS                 : 35 35 37 37 75 78
RBRACE               : 8
RBRACKET             : 44 45 46
RPAREN               : 6 7 47 48 49 53 57 60 88
SEMICOLON            : 2 3 11 12 13 14 15 57 61 61 62 62
TEXT                 : 23 24
TIMES                : 81
WHILE                : 53 57
error                : 

Nonterminals, with rules where they appear

assignation          : 3 12 61 61 62
assignation_action_1 : 31
assignation_action_2 : 31
assignation_action_3 : 31
declaration          : 2
do_while_action_1    : 57
do_while_action_2    : 57
do_while_sentence    : 18
empty                : 10 46 48
expression           : 21 22 31 48 49 53 57 61 62 68 69 70 71 72 73 88
expression_action_1  : 85 86 87
expression_action_2  : 77 78 79
expression_action_3  : 81 82 83 84
expression_action_4  : 74 75 76 77 78 79
expression_action_5  : 81 82 83 84
expression_action_6  : 88
expression_action_7  : 88
expression_action_8  : 68 69 70 71 72 73
expression_action_9  : 68 69 70 71 72 73
factor               : 80 81 82 83 84
for_action_1         : 61 62
for_action_2         : 61 62
for_action_3         : 61 62
for_action_4         : 60
for_expression       : 60
for_sentence         : 19
function_block       : 6 7 48 49 49 53 57 60
function_call        : 11
id                   : 26 27 31 39 40 85 87
if_action_1          : 48 49
if_action_2          : 48 49
if_action_3          : 49
if_sentence          : 16
input                : 14
input_expression     : 25 26
instruction          : 8 9
integer              : 44 90
main_function        : 5
normal_function      : 4
number               : 86
output_expression    : 20 21 23
print                : 13
program              : 0
program_block        : 1 2 3 4
proposition          : 9
real                 : 89
simple_expression    : 67 68 69 70 71 72 73 77 78 79
term                 : 74 75 76 77 78 79 81 82 83 84
type                 : 28
unary_operation      : 15 62
variables            : 28 39
vector               : 42 43 43
while_action_1       : 53
while_action_2       : 53
while_action_3       : 53
while_sentence       : 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (29) type -> . INT
    (30) type -> . DOUBLE
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    DOUBLE          shift and go to state 11
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 12
    program_block                  shift and go to state 4
    program                        shift and go to state 3
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 1

    (5) program_block -> main_function .

    $end            reduce using rule 5 (program_block -> main_function .)


state 2

    (31) assignation -> id . assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (32) assignation_action_1 -> .

    EQUAL           reduce using rule 32 (assignation_action_1 -> .)

    assignation_action_1           shift and go to state 13

state 3

    (0) S' -> program .



state 4

    (1) program -> program_block .

    $end            reduce using rule 1 (program -> program_block .)


state 5

    (28) declaration -> type . variables
    (39) variables -> . id COMMA variables
    (40) variables -> . id
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 14
    id                             shift and go to state 15

state 6

    (6) normal_function -> FUNCTION . ID LPAREN RPAREN function_block
    (7) main_function -> FUNCTION . MAIN LPAREN RPAREN function_block

    ID              shift and go to state 17
    MAIN            shift and go to state 16


state 7

    (2) program_block -> declaration . SEMICOLON program_block

    SEMICOLON       shift and go to state 18


state 8

    (41) id -> ID .
    (42) id -> ID . vector
    (43) id -> ID . vector vector
    (44) vector -> . LBRACKET integer RBRACKET
    (45) vector -> . LBRACKET ID RBRACKET
    (46) vector -> . LBRACKET empty RBRACKET

    INSTREAM        reduce using rule 41 (id -> ID .)
    SEMICOLON       reduce using rule 41 (id -> ID .)
    TIMES           reduce using rule 41 (id -> ID .)
    DIVIDE          reduce using rule 41 (id -> ID .)
    MOD             reduce using rule 41 (id -> ID .)
    AND             reduce using rule 41 (id -> ID .)
    OR              reduce using rule 41 (id -> ID .)
    PLUS            reduce using rule 41 (id -> ID .)
    MINUS           reduce using rule 41 (id -> ID .)
    LESS_THAN       reduce using rule 41 (id -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 41 (id -> ID .)
    EQUAL_THAN      reduce using rule 41 (id -> ID .)
    DIFFERENT_THAN  reduce using rule 41 (id -> ID .)
    GREATER_THAN    reduce using rule 41 (id -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 41 (id -> ID .)
    OUTSTREAM       reduce using rule 41 (id -> ID .)
    RPAREN          reduce using rule 41 (id -> ID .)
    EQUAL           reduce using rule 41 (id -> ID .)
    COMMA           reduce using rule 41 (id -> ID .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20

state 9

    (3) program_block -> assignation . SEMICOLON program_block

    SEMICOLON       shift and go to state 21


state 10

    (29) type -> INT .

    ID              reduce using rule 29 (type -> INT .)


state 11

    (30) type -> DOUBLE .

    ID              reduce using rule 30 (type -> DOUBLE .)


state 12

    (4) program_block -> normal_function . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (29) type -> . INT
    (30) type -> . DOUBLE
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    DOUBLE          shift and go to state 11
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 12
    program_block                  shift and go to state 22
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 13

    (31) assignation -> id assignation_action_1 . EQUAL assignation_action_2 expression assignation_action_3

    EQUAL           shift and go to state 23


state 14

    (28) declaration -> type variables .

    SEMICOLON       reduce using rule 28 (declaration -> type variables .)


state 15

    (39) variables -> id . COMMA variables
    (40) variables -> id .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 40 (variables -> id .)


state 16

    (7) main_function -> FUNCTION MAIN . LPAREN RPAREN function_block

    LPAREN          shift and go to state 25


state 17

    (6) normal_function -> FUNCTION ID . LPAREN RPAREN function_block

    LPAREN          shift and go to state 26


state 18

    (2) program_block -> declaration SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (29) type -> . INT
    (30) type -> . DOUBLE
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    DOUBLE          shift and go to state 11
    ID              shift and go to state 8

    declaration                    shift and go to state 7
    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 12
    program_block                  shift and go to state 27
    type                           shift and go to state 5
    id                             shift and go to state 2

state 19

    (44) vector -> LBRACKET . integer RBRACKET
    (45) vector -> LBRACKET . ID RBRACKET
    (46) vector -> LBRACKET . empty RBRACKET
    (92) integer -> . NUMBER
    (93) empty -> .

    ID              shift and go to state 30
    NUMBER          shift and go to state 28
    RBRACKET        reduce using rule 93 (empty -> .)

    integer                        shift and go to state 29
    empty                          shift and go to state 31

state 20

    (42) id -> ID vector .
    (43) id -> ID vector . vector
    (44) vector -> . LBRACKET integer RBRACKET
    (45) vector -> . LBRACKET ID RBRACKET
    (46) vector -> . LBRACKET empty RBRACKET

    INSTREAM        reduce using rule 42 (id -> ID vector .)
    SEMICOLON       reduce using rule 42 (id -> ID vector .)
    TIMES           reduce using rule 42 (id -> ID vector .)
    DIVIDE          reduce using rule 42 (id -> ID vector .)
    MOD             reduce using rule 42 (id -> ID vector .)
    AND             reduce using rule 42 (id -> ID vector .)
    OR              reduce using rule 42 (id -> ID vector .)
    PLUS            reduce using rule 42 (id -> ID vector .)
    MINUS           reduce using rule 42 (id -> ID vector .)
    LESS_THAN       reduce using rule 42 (id -> ID vector .)
    LESS_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector .)
    EQUAL_THAN      reduce using rule 42 (id -> ID vector .)
    DIFFERENT_THAN  reduce using rule 42 (id -> ID vector .)
    GREATER_THAN    reduce using rule 42 (id -> ID vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 42 (id -> ID vector .)
    OUTSTREAM       reduce using rule 42 (id -> ID vector .)
    RPAREN          reduce using rule 42 (id -> ID vector .)
    EQUAL           reduce using rule 42 (id -> ID vector .)
    COMMA           reduce using rule 42 (id -> ID vector .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 32

state 21

    (3) program_block -> assignation SEMICOLON . program_block
    (2) program_block -> . declaration SEMICOLON program_block
    (3) program_block -> . assignation SEMICOLON program_block
    (4) program_block -> . normal_function program_block
    (5) program_block -> . main_function
    (28) declaration -> . type variables
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (6) normal_function -> . FUNCTION ID LPAREN RPAREN function_block
    (7) main_function -> . FUNCTION MAIN LPAREN RPAREN function_block
    (29) type -> . INT
    (30) type -> . DOUBLE
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    FUNCTION        shift and go to state 6
    INT             shift and go to state 10
    DOUBLE          shift and go to state 11
    ID              shift and go to state 8

    main_function                  shift and go to state 1
    assignation                    shift and go to state 9
    normal_function                shift and go to state 12
    program_block                  shift and go to state 33
    declaration                    shift and go to state 7
    type                           shift and go to state 5
    id                             shift and go to state 2

state 22

    (4) program_block -> normal_function program_block .

    $end            reduce using rule 4 (program_block -> normal_function program_block .)


state 23

    (31) assignation -> id assignation_action_1 EQUAL . assignation_action_2 expression assignation_action_3
    (33) assignation_action_2 -> .

    PLUS            reduce using rule 33 (assignation_action_2 -> .)
    MINUS           reduce using rule 33 (assignation_action_2 -> .)
    NOT             reduce using rule 33 (assignation_action_2 -> .)
    ID              reduce using rule 33 (assignation_action_2 -> .)
    NUMBER          reduce using rule 33 (assignation_action_2 -> .)
    LPAREN          reduce using rule 33 (assignation_action_2 -> .)

    assignation_action_2           shift and go to state 34

state 24

    (39) variables -> id COMMA . variables
    (39) variables -> . id COMMA variables
    (40) variables -> . id
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 8

    variables                      shift and go to state 35
    id                             shift and go to state 15

state 25

    (7) main_function -> FUNCTION MAIN LPAREN . RPAREN function_block

    RPAREN          shift and go to state 36


state 26

    (6) normal_function -> FUNCTION ID LPAREN . RPAREN function_block

    RPAREN          shift and go to state 37


state 27

    (2) program_block -> declaration SEMICOLON program_block .

    $end            reduce using rule 2 (program_block -> declaration SEMICOLON program_block .)


state 28

    (92) integer -> NUMBER .

    RBRACKET        reduce using rule 92 (integer -> NUMBER .)


state 29

    (44) vector -> LBRACKET integer . RBRACKET

    RBRACKET        shift and go to state 38


state 30

    (45) vector -> LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 39


state 31

    (46) vector -> LBRACKET empty . RBRACKET

    RBRACKET        shift and go to state 40


state 32

    (43) id -> ID vector vector .

    INSTREAM        reduce using rule 43 (id -> ID vector vector .)
    SEMICOLON       reduce using rule 43 (id -> ID vector vector .)
    TIMES           reduce using rule 43 (id -> ID vector vector .)
    DIVIDE          reduce using rule 43 (id -> ID vector vector .)
    MOD             reduce using rule 43 (id -> ID vector vector .)
    AND             reduce using rule 43 (id -> ID vector vector .)
    OR              reduce using rule 43 (id -> ID vector vector .)
    PLUS            reduce using rule 43 (id -> ID vector vector .)
    MINUS           reduce using rule 43 (id -> ID vector vector .)
    LESS_THAN       reduce using rule 43 (id -> ID vector vector .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (id -> ID vector vector .)
    EQUAL_THAN      reduce using rule 43 (id -> ID vector vector .)
    DIFFERENT_THAN  reduce using rule 43 (id -> ID vector vector .)
    GREATER_THAN    reduce using rule 43 (id -> ID vector vector .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (id -> ID vector vector .)
    OUTSTREAM       reduce using rule 43 (id -> ID vector vector .)
    RPAREN          reduce using rule 43 (id -> ID vector vector .)
    EQUAL           reduce using rule 43 (id -> ID vector vector .)
    COMMA           reduce using rule 43 (id -> ID vector vector .)


state 33

    (3) program_block -> assignation SEMICOLON program_block .

    $end            reduce using rule 3 (program_block -> assignation SEMICOLON program_block .)


state 34

    (31) assignation -> id assignation_action_1 EQUAL assignation_action_2 . expression assignation_action_3
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    integer                        shift and go to state 41
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    simple_expression              shift and go to state 48
    expression                     shift and go to state 52
    id                             shift and go to state 44

state 35

    (39) variables -> id COMMA variables .

    SEMICOLON       reduce using rule 39 (variables -> id COMMA variables .)


state 36

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 55

state 37

    (6) normal_function -> FUNCTION ID LPAREN RPAREN . function_block
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 56

state 38

    (44) vector -> LBRACKET integer RBRACKET .

    LBRACKET        reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    EQUAL           reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    COMMA           reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    SEMICOLON       reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    TIMES           reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    DIVIDE          reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    MOD             reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    AND             reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    OR              reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    PLUS            reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    MINUS           reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    LESS_THAN       reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    EQUAL_THAN      reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    DIFFERENT_THAN  reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    GREATER_THAN    reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    RPAREN          reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    OUTSTREAM       reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)
    INSTREAM        reduce using rule 44 (vector -> LBRACKET integer RBRACKET .)


state 39

    (45) vector -> LBRACKET ID RBRACKET .

    LBRACKET        reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    EQUAL           reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    COMMA           reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    SEMICOLON       reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    TIMES           reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    DIVIDE          reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    MOD             reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    AND             reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    OR              reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    PLUS            reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    MINUS           reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    LESS_THAN       reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    EQUAL_THAN      reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    DIFFERENT_THAN  reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    GREATER_THAN    reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    OUTSTREAM       reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)
    INSTREAM        reduce using rule 45 (vector -> LBRACKET ID RBRACKET .)


state 40

    (46) vector -> LBRACKET empty RBRACKET .

    LBRACKET        reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    EQUAL           reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    COMMA           reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    SEMICOLON       reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    TIMES           reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    DIVIDE          reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    MOD             reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    AND             reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    OR              reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    PLUS            reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    MINUS           reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    LESS_THAN       reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    LESS_OR_EQUAL_THAN reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    EQUAL_THAN      reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    DIFFERENT_THAN  reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    GREATER_THAN    reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    GREATER_OR_EQUAL_THAN reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    RPAREN          reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    OUTSTREAM       reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)
    INSTREAM        reduce using rule 46 (vector -> LBRACKET empty RBRACKET .)


state 41

    (90) number -> integer .

    TIMES           reduce using rule 90 (number -> integer .)
    DIVIDE          reduce using rule 90 (number -> integer .)
    MOD             reduce using rule 90 (number -> integer .)
    AND             reduce using rule 90 (number -> integer .)
    OR              reduce using rule 90 (number -> integer .)
    PLUS            reduce using rule 90 (number -> integer .)
    MINUS           reduce using rule 90 (number -> integer .)
    LESS_THAN       reduce using rule 90 (number -> integer .)
    LESS_OR_EQUAL_THAN reduce using rule 90 (number -> integer .)
    EQUAL_THAN      reduce using rule 90 (number -> integer .)
    DIFFERENT_THAN  reduce using rule 90 (number -> integer .)
    GREATER_THAN    reduce using rule 90 (number -> integer .)
    GREATER_OR_EQUAL_THAN reduce using rule 90 (number -> integer .)
    SEMICOLON       reduce using rule 90 (number -> integer .)
    RPAREN          reduce using rule 90 (number -> integer .)
    OUTSTREAM       reduce using rule 90 (number -> integer .)


state 42

    (76) simple_expression -> MINUS . term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 57
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 43

    (86) factor -> number . expression_action_1
    (94) expression_action_1 -> .

    TIMES           reduce using rule 94 (expression_action_1 -> .)
    DIVIDE          reduce using rule 94 (expression_action_1 -> .)
    MOD             reduce using rule 94 (expression_action_1 -> .)
    AND             reduce using rule 94 (expression_action_1 -> .)
    OR              reduce using rule 94 (expression_action_1 -> .)
    PLUS            reduce using rule 94 (expression_action_1 -> .)
    MINUS           reduce using rule 94 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 94 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 94 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 94 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 94 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 94 (expression_action_1 -> .)
    RPAREN          reduce using rule 94 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 94 (expression_action_1 -> .)

    expression_action_1            shift and go to state 58

state 44

    (85) factor -> id . expression_action_1
    (94) expression_action_1 -> .

    TIMES           reduce using rule 94 (expression_action_1 -> .)
    DIVIDE          reduce using rule 94 (expression_action_1 -> .)
    MOD             reduce using rule 94 (expression_action_1 -> .)
    AND             reduce using rule 94 (expression_action_1 -> .)
    OR              reduce using rule 94 (expression_action_1 -> .)
    PLUS            reduce using rule 94 (expression_action_1 -> .)
    MINUS           reduce using rule 94 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 94 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 94 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 94 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 94 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 94 (expression_action_1 -> .)
    RPAREN          reduce using rule 94 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 94 (expression_action_1 -> .)

    expression_action_1            shift and go to state 59

state 45

    (75) simple_expression -> PLUS . term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 60
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 46

    (80) term -> factor .

    TIMES           reduce using rule 80 (term -> factor .)
    DIVIDE          reduce using rule 80 (term -> factor .)
    MOD             reduce using rule 80 (term -> factor .)
    AND             reduce using rule 80 (term -> factor .)
    OR              reduce using rule 80 (term -> factor .)
    PLUS            reduce using rule 80 (term -> factor .)
    MINUS           reduce using rule 80 (term -> factor .)
    RPAREN          reduce using rule 80 (term -> factor .)
    LESS_THAN       reduce using rule 80 (term -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 80 (term -> factor .)
    EQUAL_THAN      reduce using rule 80 (term -> factor .)
    DIFFERENT_THAN  reduce using rule 80 (term -> factor .)
    GREATER_THAN    reduce using rule 80 (term -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 80 (term -> factor .)
    SEMICOLON       reduce using rule 80 (term -> factor .)
    OUTSTREAM       reduce using rule 80 (term -> factor .)


state 47

    (89) number -> real .

    TIMES           reduce using rule 89 (number -> real .)
    DIVIDE          reduce using rule 89 (number -> real .)
    MOD             reduce using rule 89 (number -> real .)
    AND             reduce using rule 89 (number -> real .)
    OR              reduce using rule 89 (number -> real .)
    PLUS            reduce using rule 89 (number -> real .)
    MINUS           reduce using rule 89 (number -> real .)
    LESS_THAN       reduce using rule 89 (number -> real .)
    LESS_OR_EQUAL_THAN reduce using rule 89 (number -> real .)
    EQUAL_THAN      reduce using rule 89 (number -> real .)
    DIFFERENT_THAN  reduce using rule 89 (number -> real .)
    GREATER_THAN    reduce using rule 89 (number -> real .)
    GREATER_OR_EQUAL_THAN reduce using rule 89 (number -> real .)
    SEMICOLON       reduce using rule 89 (number -> real .)
    RPAREN          reduce using rule 89 (number -> real .)
    OUTSTREAM       reduce using rule 89 (number -> real .)


state 48

    (67) expression -> simple_expression .
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4

    RPAREN          reduce using rule 67 (expression -> simple_expression .)
    LESS_THAN       reduce using rule 67 (expression -> simple_expression .)
    LESS_OR_EQUAL_THAN reduce using rule 67 (expression -> simple_expression .)
    EQUAL_THAN      reduce using rule 67 (expression -> simple_expression .)
    DIFFERENT_THAN  reduce using rule 67 (expression -> simple_expression .)
    GREATER_THAN    reduce using rule 67 (expression -> simple_expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 67 (expression -> simple_expression .)
    OUTSTREAM       reduce using rule 67 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 67 (expression -> simple_expression .)
    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61


state 49

    (91) real -> NUMBER . DOT NUMBER
    (92) integer -> NUMBER .

    DOT             shift and go to state 64
    TIMES           reduce using rule 92 (integer -> NUMBER .)
    DIVIDE          reduce using rule 92 (integer -> NUMBER .)
    MOD             reduce using rule 92 (integer -> NUMBER .)
    AND             reduce using rule 92 (integer -> NUMBER .)
    OR              reduce using rule 92 (integer -> NUMBER .)
    PLUS            reduce using rule 92 (integer -> NUMBER .)
    MINUS           reduce using rule 92 (integer -> NUMBER .)
    RPAREN          reduce using rule 92 (integer -> NUMBER .)
    LESS_THAN       reduce using rule 92 (integer -> NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 92 (integer -> NUMBER .)
    EQUAL_THAN      reduce using rule 92 (integer -> NUMBER .)
    DIFFERENT_THAN  reduce using rule 92 (integer -> NUMBER .)
    GREATER_THAN    reduce using rule 92 (integer -> NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 92 (integer -> NUMBER .)
    OUTSTREAM       reduce using rule 92 (integer -> NUMBER .)
    SEMICOLON       reduce using rule 92 (integer -> NUMBER .)


state 50

    (88) factor -> expression_action_6 . LPAREN expression RPAREN expression_action_7

    LPAREN          shift and go to state 65


state 51

    (74) simple_expression -> term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 69

state 52

    (31) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression . assignation_action_3
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (34) assignation_action_3 -> .

    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71
    SEMICOLON       reduce using rule 34 (assignation_action_3 -> .)
    RPAREN          reduce using rule 34 (assignation_action_3 -> .)

    assignation_action_3           shift and go to state 73

state 53

    (87) factor -> NOT . id expression_action_1
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 8

    id                             shift and go to state 78

state 54

    (8) function_block -> LBRACE . instruction RBRACE
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (93) empty -> .
    (47) function_call -> . ID LPAREN RPAREN
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (35) unary_operation -> . ID PLUS PLUS
    (36) unary_operation -> . ID MINUS MINUS
    (37) unary_operation -> . PLUS PLUS ID
    (38) unary_operation -> . MINUS MINUS ID
    (48) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (49) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (53) while_sentence -> . WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (57) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (60) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    RBRACE          reduce using rule 93 (empty -> .)
    ID              shift and go to state 95
    COUT            shift and go to state 80
    CIN             shift and go to state 94
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    IF              shift and go to state 96
    WHILE           shift and go to state 83
    DO              shift and go to state 79
    FOR             shift and go to state 93

    do_while_sentence              shift and go to state 81
    function_call                  shift and go to state 82
    proposition                    shift and go to state 84
    while_sentence                 shift and go to state 85
    id                             shift and go to state 2
    for_sentence                   shift and go to state 87
    print                          shift and go to state 89
    input                          shift and go to state 90
    unary_operation                shift and go to state 91
    empty                          shift and go to state 92
    assignation                    shift and go to state 97
    instruction                    shift and go to state 98
    if_sentence                    shift and go to state 99

state 55

    (7) main_function -> FUNCTION MAIN LPAREN RPAREN function_block .

    $end            reduce using rule 7 (main_function -> FUNCTION MAIN LPAREN RPAREN function_block .)


state 56

    (6) normal_function -> FUNCTION ID LPAREN RPAREN function_block .

    FUNCTION        reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    INT             reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    DOUBLE          reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)
    ID              reduce using rule 6 (normal_function -> FUNCTION ID LPAREN RPAREN function_block .)


state 57

    (76) simple_expression -> MINUS term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 100

state 58

    (86) factor -> number expression_action_1 .

    TIMES           reduce using rule 86 (factor -> number expression_action_1 .)
    DIVIDE          reduce using rule 86 (factor -> number expression_action_1 .)
    MOD             reduce using rule 86 (factor -> number expression_action_1 .)
    AND             reduce using rule 86 (factor -> number expression_action_1 .)
    OR              reduce using rule 86 (factor -> number expression_action_1 .)
    PLUS            reduce using rule 86 (factor -> number expression_action_1 .)
    MINUS           reduce using rule 86 (factor -> number expression_action_1 .)
    LESS_THAN       reduce using rule 86 (factor -> number expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 86 (factor -> number expression_action_1 .)
    EQUAL_THAN      reduce using rule 86 (factor -> number expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 86 (factor -> number expression_action_1 .)
    GREATER_THAN    reduce using rule 86 (factor -> number expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 86 (factor -> number expression_action_1 .)
    SEMICOLON       reduce using rule 86 (factor -> number expression_action_1 .)
    RPAREN          reduce using rule 86 (factor -> number expression_action_1 .)
    OUTSTREAM       reduce using rule 86 (factor -> number expression_action_1 .)


state 59

    (85) factor -> id expression_action_1 .

    TIMES           reduce using rule 85 (factor -> id expression_action_1 .)
    DIVIDE          reduce using rule 85 (factor -> id expression_action_1 .)
    MOD             reduce using rule 85 (factor -> id expression_action_1 .)
    AND             reduce using rule 85 (factor -> id expression_action_1 .)
    OR              reduce using rule 85 (factor -> id expression_action_1 .)
    PLUS            reduce using rule 85 (factor -> id expression_action_1 .)
    MINUS           reduce using rule 85 (factor -> id expression_action_1 .)
    LESS_THAN       reduce using rule 85 (factor -> id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 85 (factor -> id expression_action_1 .)
    EQUAL_THAN      reduce using rule 85 (factor -> id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 85 (factor -> id expression_action_1 .)
    GREATER_THAN    reduce using rule 85 (factor -> id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 85 (factor -> id expression_action_1 .)
    SEMICOLON       reduce using rule 85 (factor -> id expression_action_1 .)
    RPAREN          reduce using rule 85 (factor -> id expression_action_1 .)
    OUTSTREAM       reduce using rule 85 (factor -> id expression_action_1 .)


state 60

    (75) simple_expression -> PLUS term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 101

state 61

    (79) simple_expression -> simple_expression MINUS . expression_action_2 term expression_action_4
    (95) expression_action_2 -> .

    NOT             reduce using rule 95 (expression_action_2 -> .)
    ID              reduce using rule 95 (expression_action_2 -> .)
    NUMBER          reduce using rule 95 (expression_action_2 -> .)
    LPAREN          reduce using rule 95 (expression_action_2 -> .)

    expression_action_2            shift and go to state 102

state 62

    (78) simple_expression -> simple_expression PLUS . expression_action_2 term expression_action_4
    (95) expression_action_2 -> .

    NOT             reduce using rule 95 (expression_action_2 -> .)
    ID              reduce using rule 95 (expression_action_2 -> .)
    NUMBER          reduce using rule 95 (expression_action_2 -> .)
    LPAREN          reduce using rule 95 (expression_action_2 -> .)

    expression_action_2            shift and go to state 103

state 63

    (77) simple_expression -> simple_expression OR . expression_action_2 term expression_action_4
    (95) expression_action_2 -> .

    NOT             reduce using rule 95 (expression_action_2 -> .)
    ID              reduce using rule 95 (expression_action_2 -> .)
    NUMBER          reduce using rule 95 (expression_action_2 -> .)
    LPAREN          reduce using rule 95 (expression_action_2 -> .)

    expression_action_2            shift and go to state 104

state 64

    (91) real -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 105


state 65

    (88) factor -> expression_action_6 LPAREN . expression RPAREN expression_action_7
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    expression                     shift and go to state 106
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 48

state 66

    (84) term -> term AND . expression_action_3 factor expression_action_5
    (96) expression_action_3 -> .

    NOT             reduce using rule 96 (expression_action_3 -> .)
    ID              reduce using rule 96 (expression_action_3 -> .)
    NUMBER          reduce using rule 96 (expression_action_3 -> .)
    LPAREN          reduce using rule 96 (expression_action_3 -> .)

    expression_action_3            shift and go to state 107

state 67

    (82) term -> term DIVIDE . expression_action_3 factor expression_action_5
    (96) expression_action_3 -> .

    NOT             reduce using rule 96 (expression_action_3 -> .)
    ID              reduce using rule 96 (expression_action_3 -> .)
    NUMBER          reduce using rule 96 (expression_action_3 -> .)
    LPAREN          reduce using rule 96 (expression_action_3 -> .)

    expression_action_3            shift and go to state 108

state 68

    (81) term -> term TIMES . expression_action_3 factor expression_action_5
    (96) expression_action_3 -> .

    NOT             reduce using rule 96 (expression_action_3 -> .)
    ID              reduce using rule 96 (expression_action_3 -> .)
    NUMBER          reduce using rule 96 (expression_action_3 -> .)
    LPAREN          reduce using rule 96 (expression_action_3 -> .)

    expression_action_3            shift and go to state 109

state 69

    (74) simple_expression -> term expression_action_4 .

    OR              reduce using rule 74 (simple_expression -> term expression_action_4 .)
    PLUS            reduce using rule 74 (simple_expression -> term expression_action_4 .)
    MINUS           reduce using rule 74 (simple_expression -> term expression_action_4 .)
    LESS_THAN       reduce using rule 74 (simple_expression -> term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 74 (simple_expression -> term expression_action_4 .)
    EQUAL_THAN      reduce using rule 74 (simple_expression -> term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 74 (simple_expression -> term expression_action_4 .)
    GREATER_THAN    reduce using rule 74 (simple_expression -> term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 74 (simple_expression -> term expression_action_4 .)
    SEMICOLON       reduce using rule 74 (simple_expression -> term expression_action_4 .)
    RPAREN          reduce using rule 74 (simple_expression -> term expression_action_4 .)
    OUTSTREAM       reduce using rule 74 (simple_expression -> term expression_action_4 .)


state 70

    (83) term -> term MOD . expression_action_3 factor expression_action_5
    (96) expression_action_3 -> .

    NOT             reduce using rule 96 (expression_action_3 -> .)
    ID              reduce using rule 96 (expression_action_3 -> .)
    NUMBER          reduce using rule 96 (expression_action_3 -> .)
    LPAREN          reduce using rule 96 (expression_action_3 -> .)

    expression_action_3            shift and go to state 110

state 71

    (73) expression -> expression GREATER_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 111

state 72

    (70) expression -> expression EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 112

state 73

    (31) assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .

    SEMICOLON       reduce using rule 31 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .)
    RPAREN          reduce using rule 31 (assignation -> id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3 .)


state 74

    (72) expression -> expression GREATER_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 113

state 75

    (71) expression -> expression DIFFERENT_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 114

state 76

    (69) expression -> expression LESS_OR_EQUAL_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 115

state 77

    (68) expression -> expression LESS_THAN . expression_action_8 simple_expression expression_action_9
    (101) expression_action_8 -> .

    PLUS            reduce using rule 101 (expression_action_8 -> .)
    MINUS           reduce using rule 101 (expression_action_8 -> .)
    NOT             reduce using rule 101 (expression_action_8 -> .)
    ID              reduce using rule 101 (expression_action_8 -> .)
    NUMBER          reduce using rule 101 (expression_action_8 -> .)
    LPAREN          reduce using rule 101 (expression_action_8 -> .)

    expression_action_8            shift and go to state 116

state 78

    (87) factor -> NOT id . expression_action_1
    (94) expression_action_1 -> .

    TIMES           reduce using rule 94 (expression_action_1 -> .)
    DIVIDE          reduce using rule 94 (expression_action_1 -> .)
    MOD             reduce using rule 94 (expression_action_1 -> .)
    AND             reduce using rule 94 (expression_action_1 -> .)
    OR              reduce using rule 94 (expression_action_1 -> .)
    PLUS            reduce using rule 94 (expression_action_1 -> .)
    MINUS           reduce using rule 94 (expression_action_1 -> .)
    LESS_THAN       reduce using rule 94 (expression_action_1 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    EQUAL_THAN      reduce using rule 94 (expression_action_1 -> .)
    DIFFERENT_THAN  reduce using rule 94 (expression_action_1 -> .)
    GREATER_THAN    reduce using rule 94 (expression_action_1 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 94 (expression_action_1 -> .)
    SEMICOLON       reduce using rule 94 (expression_action_1 -> .)
    RPAREN          reduce using rule 94 (expression_action_1 -> .)
    OUTSTREAM       reduce using rule 94 (expression_action_1 -> .)

    expression_action_1            shift and go to state 117

state 79

    (57) do_while_sentence -> DO . do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (58) do_while_action_1 -> .

    LBRACE          reduce using rule 58 (do_while_action_1 -> .)

    do_while_action_1              shift and go to state 118

state 80

    (20) print -> COUT . output_expression
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    OUTSTREAM       shift and go to state 119

    output_expression              shift and go to state 120

state 81

    (18) proposition -> do_while_sentence .

    ID              reduce using rule 18 (proposition -> do_while_sentence .)
    COUT            reduce using rule 18 (proposition -> do_while_sentence .)
    CIN             reduce using rule 18 (proposition -> do_while_sentence .)
    PLUS            reduce using rule 18 (proposition -> do_while_sentence .)
    MINUS           reduce using rule 18 (proposition -> do_while_sentence .)
    IF              reduce using rule 18 (proposition -> do_while_sentence .)
    WHILE           reduce using rule 18 (proposition -> do_while_sentence .)
    DO              reduce using rule 18 (proposition -> do_while_sentence .)
    FOR             reduce using rule 18 (proposition -> do_while_sentence .)
    RBRACE          reduce using rule 18 (proposition -> do_while_sentence .)


state 82

    (11) proposition -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 121


state 83

    (53) while_sentence -> WHILE . while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (54) while_action_1 -> .

    LPAREN          reduce using rule 54 (while_action_1 -> .)

    while_action_1                 shift and go to state 122

state 84

    (9) instruction -> proposition . instruction
    (9) instruction -> . proposition instruction
    (10) instruction -> . empty
    (11) proposition -> . function_call SEMICOLON
    (12) proposition -> . assignation SEMICOLON
    (13) proposition -> . print SEMICOLON
    (14) proposition -> . input SEMICOLON
    (15) proposition -> . unary_operation SEMICOLON
    (16) proposition -> . if_sentence
    (17) proposition -> . while_sentence
    (18) proposition -> . do_while_sentence
    (19) proposition -> . for_sentence
    (93) empty -> .
    (47) function_call -> . ID LPAREN RPAREN
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (20) print -> . COUT output_expression
    (25) input -> . CIN input_expression
    (35) unary_operation -> . ID PLUS PLUS
    (36) unary_operation -> . ID MINUS MINUS
    (37) unary_operation -> . PLUS PLUS ID
    (38) unary_operation -> . MINUS MINUS ID
    (48) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (49) if_sentence -> . IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (53) while_sentence -> . WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3
    (57) do_while_sentence -> . DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (60) for_sentence -> . FOR LPAREN for_expression RPAREN function_block for_action_4
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    RBRACE          reduce using rule 93 (empty -> .)
    ID              shift and go to state 95
    COUT            shift and go to state 80
    CIN             shift and go to state 94
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    IF              shift and go to state 96
    WHILE           shift and go to state 83
    DO              shift and go to state 79
    FOR             shift and go to state 93

    do_while_sentence              shift and go to state 81
    function_call                  shift and go to state 82
    proposition                    shift and go to state 84
    while_sentence                 shift and go to state 85
    id                             shift and go to state 2
    for_sentence                   shift and go to state 87
    print                          shift and go to state 89
    input                          shift and go to state 90
    unary_operation                shift and go to state 91
    empty                          shift and go to state 92
    assignation                    shift and go to state 97
    instruction                    shift and go to state 123
    if_sentence                    shift and go to state 99

state 85

    (17) proposition -> while_sentence .

    ID              reduce using rule 17 (proposition -> while_sentence .)
    COUT            reduce using rule 17 (proposition -> while_sentence .)
    CIN             reduce using rule 17 (proposition -> while_sentence .)
    PLUS            reduce using rule 17 (proposition -> while_sentence .)
    MINUS           reduce using rule 17 (proposition -> while_sentence .)
    IF              reduce using rule 17 (proposition -> while_sentence .)
    WHILE           reduce using rule 17 (proposition -> while_sentence .)
    DO              reduce using rule 17 (proposition -> while_sentence .)
    FOR             reduce using rule 17 (proposition -> while_sentence .)
    RBRACE          reduce using rule 17 (proposition -> while_sentence .)


state 86

    (38) unary_operation -> MINUS . MINUS ID

    MINUS           shift and go to state 124


state 87

    (19) proposition -> for_sentence .

    ID              reduce using rule 19 (proposition -> for_sentence .)
    COUT            reduce using rule 19 (proposition -> for_sentence .)
    CIN             reduce using rule 19 (proposition -> for_sentence .)
    PLUS            reduce using rule 19 (proposition -> for_sentence .)
    MINUS           reduce using rule 19 (proposition -> for_sentence .)
    IF              reduce using rule 19 (proposition -> for_sentence .)
    WHILE           reduce using rule 19 (proposition -> for_sentence .)
    DO              reduce using rule 19 (proposition -> for_sentence .)
    FOR             reduce using rule 19 (proposition -> for_sentence .)
    RBRACE          reduce using rule 19 (proposition -> for_sentence .)


state 88

    (37) unary_operation -> PLUS . PLUS ID

    PLUS            shift and go to state 125


state 89

    (13) proposition -> print . SEMICOLON

    SEMICOLON       shift and go to state 126


state 90

    (14) proposition -> input . SEMICOLON

    SEMICOLON       shift and go to state 127


state 91

    (15) proposition -> unary_operation . SEMICOLON

    SEMICOLON       shift and go to state 128


state 92

    (10) instruction -> empty .

    RBRACE          reduce using rule 10 (instruction -> empty .)


state 93

    (60) for_sentence -> FOR . LPAREN for_expression RPAREN function_block for_action_4

    LPAREN          shift and go to state 129


state 94

    (25) input -> CIN . input_expression
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    INSTREAM        shift and go to state 130

    input_expression               shift and go to state 131

state 95

    (47) function_call -> ID . LPAREN RPAREN
    (35) unary_operation -> ID . PLUS PLUS
    (36) unary_operation -> ID . MINUS MINUS
    (41) id -> ID .
    (42) id -> ID . vector
    (43) id -> ID . vector vector
    (44) vector -> . LBRACKET integer RBRACKET
    (45) vector -> . LBRACKET ID RBRACKET
    (46) vector -> . LBRACKET empty RBRACKET

    LPAREN          shift and go to state 134
    PLUS            shift and go to state 133
    MINUS           shift and go to state 132
    EQUAL           reduce using rule 41 (id -> ID .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20

state 96

    (48) if_sentence -> IF . LPAREN expression RPAREN if_action_1 function_block empty if_action_2
    (49) if_sentence -> IF . LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3

    LPAREN          shift and go to state 135


state 97

    (12) proposition -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 136


state 98

    (8) function_block -> LBRACE instruction . RBRACE

    RBRACE          shift and go to state 137


state 99

    (16) proposition -> if_sentence .

    ID              reduce using rule 16 (proposition -> if_sentence .)
    COUT            reduce using rule 16 (proposition -> if_sentence .)
    CIN             reduce using rule 16 (proposition -> if_sentence .)
    PLUS            reduce using rule 16 (proposition -> if_sentence .)
    MINUS           reduce using rule 16 (proposition -> if_sentence .)
    IF              reduce using rule 16 (proposition -> if_sentence .)
    WHILE           reduce using rule 16 (proposition -> if_sentence .)
    DO              reduce using rule 16 (proposition -> if_sentence .)
    FOR             reduce using rule 16 (proposition -> if_sentence .)
    RBRACE          reduce using rule 16 (proposition -> if_sentence .)


state 100

    (76) simple_expression -> MINUS term expression_action_4 .

    OR              reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    PLUS            reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    MINUS           reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    LESS_THAN       reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    SEMICOLON       reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    RPAREN          reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 76 (simple_expression -> MINUS term expression_action_4 .)


state 101

    (75) simple_expression -> PLUS term expression_action_4 .

    OR              reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    PLUS            reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    MINUS           reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    LESS_THAN       reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    EQUAL_THAN      reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_THAN    reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    SEMICOLON       reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    RPAREN          reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)
    OUTSTREAM       reduce using rule 75 (simple_expression -> PLUS term expression_action_4 .)


state 102

    (79) simple_expression -> simple_expression MINUS expression_action_2 . term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 138
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 103

    (78) simple_expression -> simple_expression PLUS expression_action_2 . term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 139
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 104

    (77) simple_expression -> simple_expression OR expression_action_2 . term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 140
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 105

    (91) real -> NUMBER DOT NUMBER .

    TIMES           reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    DIVIDE          reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    MOD             reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    AND             reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    OR              reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    PLUS            reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    MINUS           reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL_THAN reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    EQUAL_THAN      reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    DIFFERENT_THAN  reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL_THAN reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    SEMICOLON       reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    RPAREN          reduce using rule 91 (real -> NUMBER DOT NUMBER .)
    OUTSTREAM       reduce using rule 91 (real -> NUMBER DOT NUMBER .)


state 106

    (88) factor -> expression_action_6 LPAREN expression . RPAREN expression_action_7
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 141
    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71


state 107

    (84) term -> term AND expression_action_3 . factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 142
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 108

    (82) term -> term DIVIDE expression_action_3 . factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 143
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 109

    (81) term -> term TIMES expression_action_3 . factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 144
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 110

    (83) term -> term MOD expression_action_3 . factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 145
    integer                        shift and go to state 41
    id                             shift and go to state 44

state 111

    (73) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 146

state 112

    (70) expression -> expression EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 147

state 113

    (72) expression -> expression GREATER_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 148

state 114

    (71) expression -> expression DIFFERENT_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 149

state 115

    (69) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 150

state 116

    (68) expression -> expression LESS_THAN expression_action_8 . simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    factor                         shift and go to state 46
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    simple_expression              shift and go to state 151

state 117

    (87) factor -> NOT id expression_action_1 .

    TIMES           reduce using rule 87 (factor -> NOT id expression_action_1 .)
    DIVIDE          reduce using rule 87 (factor -> NOT id expression_action_1 .)
    MOD             reduce using rule 87 (factor -> NOT id expression_action_1 .)
    AND             reduce using rule 87 (factor -> NOT id expression_action_1 .)
    OR              reduce using rule 87 (factor -> NOT id expression_action_1 .)
    PLUS            reduce using rule 87 (factor -> NOT id expression_action_1 .)
    MINUS           reduce using rule 87 (factor -> NOT id expression_action_1 .)
    LESS_THAN       reduce using rule 87 (factor -> NOT id expression_action_1 .)
    LESS_OR_EQUAL_THAN reduce using rule 87 (factor -> NOT id expression_action_1 .)
    EQUAL_THAN      reduce using rule 87 (factor -> NOT id expression_action_1 .)
    DIFFERENT_THAN  reduce using rule 87 (factor -> NOT id expression_action_1 .)
    GREATER_THAN    reduce using rule 87 (factor -> NOT id expression_action_1 .)
    GREATER_OR_EQUAL_THAN reduce using rule 87 (factor -> NOT id expression_action_1 .)
    SEMICOLON       reduce using rule 87 (factor -> NOT id expression_action_1 .)
    RPAREN          reduce using rule 87 (factor -> NOT id expression_action_1 .)
    OUTSTREAM       reduce using rule 87 (factor -> NOT id expression_action_1 .)


state 118

    (57) do_while_sentence -> DO do_while_action_1 . function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 152

state 119

    (21) output_expression -> OUTSTREAM . expression output_expression
    (22) output_expression -> OUTSTREAM . expression
    (23) output_expression -> OUTSTREAM . TEXT output_expression
    (24) output_expression -> OUTSTREAM . TEXT
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    TEXT            shift and go to state 153
    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    expression                     shift and go to state 154
    factor                         shift and go to state 46
    number                         shift and go to state 43
    expression_action_6            shift and go to state 50
    id                             shift and go to state 44
    integer                        shift and go to state 41
    simple_expression              shift and go to state 48

state 120

    (20) print -> COUT output_expression .

    SEMICOLON       reduce using rule 20 (print -> COUT output_expression .)


state 121

    (11) proposition -> function_call SEMICOLON .

    ID              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    COUT            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    CIN             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    PLUS            reduce using rule 11 (proposition -> function_call SEMICOLON .)
    MINUS           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    IF              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    WHILE           reduce using rule 11 (proposition -> function_call SEMICOLON .)
    DO              reduce using rule 11 (proposition -> function_call SEMICOLON .)
    FOR             reduce using rule 11 (proposition -> function_call SEMICOLON .)
    RBRACE          reduce using rule 11 (proposition -> function_call SEMICOLON .)


state 122

    (53) while_sentence -> WHILE while_action_1 . LPAREN expression RPAREN while_action_2 function_block while_action_3

    LPAREN          shift and go to state 155


state 123

    (9) instruction -> proposition instruction .

    RBRACE          reduce using rule 9 (instruction -> proposition instruction .)


state 124

    (38) unary_operation -> MINUS MINUS . ID

    ID              shift and go to state 156


state 125

    (37) unary_operation -> PLUS PLUS . ID

    ID              shift and go to state 157


state 126

    (13) proposition -> print SEMICOLON .

    ID              reduce using rule 13 (proposition -> print SEMICOLON .)
    COUT            reduce using rule 13 (proposition -> print SEMICOLON .)
    CIN             reduce using rule 13 (proposition -> print SEMICOLON .)
    PLUS            reduce using rule 13 (proposition -> print SEMICOLON .)
    MINUS           reduce using rule 13 (proposition -> print SEMICOLON .)
    IF              reduce using rule 13 (proposition -> print SEMICOLON .)
    WHILE           reduce using rule 13 (proposition -> print SEMICOLON .)
    DO              reduce using rule 13 (proposition -> print SEMICOLON .)
    FOR             reduce using rule 13 (proposition -> print SEMICOLON .)
    RBRACE          reduce using rule 13 (proposition -> print SEMICOLON .)


state 127

    (14) proposition -> input SEMICOLON .

    ID              reduce using rule 14 (proposition -> input SEMICOLON .)
    COUT            reduce using rule 14 (proposition -> input SEMICOLON .)
    CIN             reduce using rule 14 (proposition -> input SEMICOLON .)
    PLUS            reduce using rule 14 (proposition -> input SEMICOLON .)
    MINUS           reduce using rule 14 (proposition -> input SEMICOLON .)
    IF              reduce using rule 14 (proposition -> input SEMICOLON .)
    WHILE           reduce using rule 14 (proposition -> input SEMICOLON .)
    DO              reduce using rule 14 (proposition -> input SEMICOLON .)
    FOR             reduce using rule 14 (proposition -> input SEMICOLON .)
    RBRACE          reduce using rule 14 (proposition -> input SEMICOLON .)


state 128

    (15) proposition -> unary_operation SEMICOLON .

    ID              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    COUT            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    CIN             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    PLUS            reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    MINUS           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    IF              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    WHILE           reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    DO              reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    FOR             reduce using rule 15 (proposition -> unary_operation SEMICOLON .)
    RBRACE          reduce using rule 15 (proposition -> unary_operation SEMICOLON .)


state 129

    (60) for_sentence -> FOR LPAREN . for_expression RPAREN function_block for_action_4
    (61) for_expression -> . assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (62) for_expression -> . assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 8

    assignation                    shift and go to state 158
    for_expression                 shift and go to state 159
    id                             shift and go to state 2

state 130

    (26) input_expression -> INSTREAM . id input_expression
    (27) input_expression -> INSTREAM . id
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 8

    id                             shift and go to state 160

state 131

    (25) input -> CIN input_expression .

    SEMICOLON       reduce using rule 25 (input -> CIN input_expression .)


state 132

    (36) unary_operation -> ID MINUS . MINUS

    MINUS           shift and go to state 161


state 133

    (35) unary_operation -> ID PLUS . PLUS

    PLUS            shift and go to state 162


state 134

    (47) function_call -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 163


state 135

    (48) if_sentence -> IF LPAREN . expression RPAREN if_action_1 function_block empty if_action_2
    (49) if_sentence -> IF LPAREN . expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    term                           shift and go to state 51
    expression                     shift and go to state 164

state 136

    (12) proposition -> assignation SEMICOLON .

    ID              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    COUT            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    CIN             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    PLUS            reduce using rule 12 (proposition -> assignation SEMICOLON .)
    MINUS           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    IF              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    WHILE           reduce using rule 12 (proposition -> assignation SEMICOLON .)
    DO              reduce using rule 12 (proposition -> assignation SEMICOLON .)
    FOR             reduce using rule 12 (proposition -> assignation SEMICOLON .)
    RBRACE          reduce using rule 12 (proposition -> assignation SEMICOLON .)


state 137

    (8) function_block -> LBRACE instruction RBRACE .

    ID              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    COUT            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    CIN             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    PLUS            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    MINUS           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    IF              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    WHILE           reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    DO              reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FOR             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    RBRACE          reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    $end            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    FUNCTION        reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    INT             reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    DOUBLE          reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)
    ELSE            reduce using rule 8 (function_block -> LBRACE instruction RBRACE .)


state 138

    (79) simple_expression -> simple_expression MINUS expression_action_2 term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 165

state 139

    (78) simple_expression -> simple_expression PLUS expression_action_2 term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 166

state 140

    (77) simple_expression -> simple_expression OR expression_action_2 term . expression_action_4
    (81) term -> term . TIMES expression_action_3 factor expression_action_5
    (82) term -> term . DIVIDE expression_action_3 factor expression_action_5
    (83) term -> term . MOD expression_action_3 factor expression_action_5
    (84) term -> term . AND expression_action_3 factor expression_action_5
    (97) expression_action_4 -> .

    TIMES           shift and go to state 68
    DIVIDE          shift and go to state 67
    MOD             shift and go to state 70
    AND             shift and go to state 66
    OR              reduce using rule 97 (expression_action_4 -> .)
    PLUS            reduce using rule 97 (expression_action_4 -> .)
    MINUS           reduce using rule 97 (expression_action_4 -> .)
    LESS_THAN       reduce using rule 97 (expression_action_4 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    EQUAL_THAN      reduce using rule 97 (expression_action_4 -> .)
    DIFFERENT_THAN  reduce using rule 97 (expression_action_4 -> .)
    GREATER_THAN    reduce using rule 97 (expression_action_4 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 97 (expression_action_4 -> .)
    SEMICOLON       reduce using rule 97 (expression_action_4 -> .)
    RPAREN          reduce using rule 97 (expression_action_4 -> .)
    OUTSTREAM       reduce using rule 97 (expression_action_4 -> .)

    expression_action_4            shift and go to state 167

state 141

    (88) factor -> expression_action_6 LPAREN expression RPAREN . expression_action_7
    (100) expression_action_7 -> .

    TIMES           reduce using rule 100 (expression_action_7 -> .)
    DIVIDE          reduce using rule 100 (expression_action_7 -> .)
    MOD             reduce using rule 100 (expression_action_7 -> .)
    AND             reduce using rule 100 (expression_action_7 -> .)
    OR              reduce using rule 100 (expression_action_7 -> .)
    PLUS            reduce using rule 100 (expression_action_7 -> .)
    MINUS           reduce using rule 100 (expression_action_7 -> .)
    LESS_THAN       reduce using rule 100 (expression_action_7 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 100 (expression_action_7 -> .)
    EQUAL_THAN      reduce using rule 100 (expression_action_7 -> .)
    DIFFERENT_THAN  reduce using rule 100 (expression_action_7 -> .)
    GREATER_THAN    reduce using rule 100 (expression_action_7 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 100 (expression_action_7 -> .)
    SEMICOLON       reduce using rule 100 (expression_action_7 -> .)
    RPAREN          reduce using rule 100 (expression_action_7 -> .)
    OUTSTREAM       reduce using rule 100 (expression_action_7 -> .)

    expression_action_7            shift and go to state 168

state 142

    (84) term -> term AND expression_action_3 factor . expression_action_5
    (98) expression_action_5 -> .

    TIMES           reduce using rule 98 (expression_action_5 -> .)
    DIVIDE          reduce using rule 98 (expression_action_5 -> .)
    MOD             reduce using rule 98 (expression_action_5 -> .)
    AND             reduce using rule 98 (expression_action_5 -> .)
    OR              reduce using rule 98 (expression_action_5 -> .)
    PLUS            reduce using rule 98 (expression_action_5 -> .)
    MINUS           reduce using rule 98 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 98 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 98 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 98 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 98 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 98 (expression_action_5 -> .)
    RPAREN          reduce using rule 98 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 98 (expression_action_5 -> .)

    expression_action_5            shift and go to state 169

state 143

    (82) term -> term DIVIDE expression_action_3 factor . expression_action_5
    (98) expression_action_5 -> .

    TIMES           reduce using rule 98 (expression_action_5 -> .)
    DIVIDE          reduce using rule 98 (expression_action_5 -> .)
    MOD             reduce using rule 98 (expression_action_5 -> .)
    AND             reduce using rule 98 (expression_action_5 -> .)
    OR              reduce using rule 98 (expression_action_5 -> .)
    PLUS            reduce using rule 98 (expression_action_5 -> .)
    MINUS           reduce using rule 98 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 98 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 98 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 98 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 98 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 98 (expression_action_5 -> .)
    RPAREN          reduce using rule 98 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 98 (expression_action_5 -> .)

    expression_action_5            shift and go to state 170

state 144

    (81) term -> term TIMES expression_action_3 factor . expression_action_5
    (98) expression_action_5 -> .

    TIMES           reduce using rule 98 (expression_action_5 -> .)
    DIVIDE          reduce using rule 98 (expression_action_5 -> .)
    MOD             reduce using rule 98 (expression_action_5 -> .)
    AND             reduce using rule 98 (expression_action_5 -> .)
    OR              reduce using rule 98 (expression_action_5 -> .)
    PLUS            reduce using rule 98 (expression_action_5 -> .)
    MINUS           reduce using rule 98 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 98 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 98 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 98 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 98 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 98 (expression_action_5 -> .)
    RPAREN          reduce using rule 98 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 98 (expression_action_5 -> .)

    expression_action_5            shift and go to state 171

state 145

    (83) term -> term MOD expression_action_3 factor . expression_action_5
    (98) expression_action_5 -> .

    TIMES           reduce using rule 98 (expression_action_5 -> .)
    DIVIDE          reduce using rule 98 (expression_action_5 -> .)
    MOD             reduce using rule 98 (expression_action_5 -> .)
    AND             reduce using rule 98 (expression_action_5 -> .)
    OR              reduce using rule 98 (expression_action_5 -> .)
    PLUS            reduce using rule 98 (expression_action_5 -> .)
    MINUS           reduce using rule 98 (expression_action_5 -> .)
    LESS_THAN       reduce using rule 98 (expression_action_5 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    EQUAL_THAN      reduce using rule 98 (expression_action_5 -> .)
    DIFFERENT_THAN  reduce using rule 98 (expression_action_5 -> .)
    GREATER_THAN    reduce using rule 98 (expression_action_5 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 98 (expression_action_5 -> .)
    SEMICOLON       reduce using rule 98 (expression_action_5 -> .)
    RPAREN          reduce using rule 98 (expression_action_5 -> .)
    OUTSTREAM       reduce using rule 98 (expression_action_5 -> .)

    expression_action_5            shift and go to state 172

state 146

    (73) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 173

state 147

    (70) expression -> expression EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 174

state 148

    (72) expression -> expression GREATER_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 175

state 149

    (71) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 176

state 150

    (69) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 177

state 151

    (68) expression -> expression LESS_THAN expression_action_8 simple_expression . expression_action_9
    (77) simple_expression -> simple_expression . OR expression_action_2 term expression_action_4
    (78) simple_expression -> simple_expression . PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> simple_expression . MINUS expression_action_2 term expression_action_4
    (102) expression_action_9 -> .

    OR              shift and go to state 63
    PLUS            shift and go to state 62
    MINUS           shift and go to state 61
    LESS_THAN       reduce using rule 102 (expression_action_9 -> .)
    LESS_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    EQUAL_THAN      reduce using rule 102 (expression_action_9 -> .)
    DIFFERENT_THAN  reduce using rule 102 (expression_action_9 -> .)
    GREATER_THAN    reduce using rule 102 (expression_action_9 -> .)
    GREATER_OR_EQUAL_THAN reduce using rule 102 (expression_action_9 -> .)
    SEMICOLON       reduce using rule 102 (expression_action_9 -> .)
    RPAREN          reduce using rule 102 (expression_action_9 -> .)
    OUTSTREAM       reduce using rule 102 (expression_action_9 -> .)

    expression_action_9            shift and go to state 178

state 152

    (57) do_while_sentence -> DO do_while_action_1 function_block . WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON

    WHILE           shift and go to state 179


state 153

    (23) output_expression -> OUTSTREAM TEXT . output_expression
    (24) output_expression -> OUTSTREAM TEXT .
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 24 (output_expression -> OUTSTREAM TEXT .)
    OUTSTREAM       shift and go to state 119

    output_expression              shift and go to state 180

state 154

    (21) output_expression -> OUTSTREAM expression . output_expression
    (22) output_expression -> OUTSTREAM expression .
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (21) output_expression -> . OUTSTREAM expression output_expression
    (22) output_expression -> . OUTSTREAM expression
    (23) output_expression -> . OUTSTREAM TEXT output_expression
    (24) output_expression -> . OUTSTREAM TEXT

    SEMICOLON       reduce using rule 22 (output_expression -> OUTSTREAM expression .)
    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71
    OUTSTREAM       shift and go to state 119

    output_expression              shift and go to state 181

state 155

    (53) while_sentence -> WHILE while_action_1 LPAREN . expression RPAREN while_action_2 function_block while_action_3
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    term                           shift and go to state 51
    expression                     shift and go to state 182

state 156

    (38) unary_operation -> MINUS MINUS ID .

    RPAREN          reduce using rule 38 (unary_operation -> MINUS MINUS ID .)
    SEMICOLON       reduce using rule 38 (unary_operation -> MINUS MINUS ID .)


state 157

    (37) unary_operation -> PLUS PLUS ID .

    RPAREN          reduce using rule 37 (unary_operation -> PLUS PLUS ID .)
    SEMICOLON       reduce using rule 37 (unary_operation -> PLUS PLUS ID .)


state 158

    (61) for_expression -> assignation . for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (62) for_expression -> assignation . for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3
    (63) for_action_1 -> .

    SEMICOLON       reduce using rule 63 (for_action_1 -> .)

    for_action_1                   shift and go to state 183

state 159

    (60) for_sentence -> FOR LPAREN for_expression . RPAREN function_block for_action_4

    RPAREN          shift and go to state 184


state 160

    (26) input_expression -> INSTREAM id . input_expression
    (27) input_expression -> INSTREAM id .
    (26) input_expression -> . INSTREAM id input_expression
    (27) input_expression -> . INSTREAM id

    SEMICOLON       reduce using rule 27 (input_expression -> INSTREAM id .)
    INSTREAM        shift and go to state 130

    input_expression               shift and go to state 185

state 161

    (36) unary_operation -> ID MINUS MINUS .

    RPAREN          reduce using rule 36 (unary_operation -> ID MINUS MINUS .)
    SEMICOLON       reduce using rule 36 (unary_operation -> ID MINUS MINUS .)


state 162

    (35) unary_operation -> ID PLUS PLUS .

    RPAREN          reduce using rule 35 (unary_operation -> ID PLUS PLUS .)
    SEMICOLON       reduce using rule 35 (unary_operation -> ID PLUS PLUS .)


state 163

    (47) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 47 (function_call -> ID LPAREN RPAREN .)


state 164

    (48) if_sentence -> IF LPAREN expression . RPAREN if_action_1 function_block empty if_action_2
    (49) if_sentence -> IF LPAREN expression . RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 186
    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71


state 165

    (79) simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 79 (simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4 .)


state 166

    (78) simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .

    OR              reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 78 (simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4 .)


state 167

    (77) simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .

    OR              reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    PLUS            reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    MINUS           reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_THAN       reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    LESS_OR_EQUAL_THAN reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    EQUAL_THAN      reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    DIFFERENT_THAN  reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_THAN    reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    GREATER_OR_EQUAL_THAN reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    SEMICOLON       reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    RPAREN          reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)
    OUTSTREAM       reduce using rule 77 (simple_expression -> simple_expression OR expression_action_2 term expression_action_4 .)


state 168

    (88) factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .

    TIMES           reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIVIDE          reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MOD             reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    AND             reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OR              reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    PLUS            reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    MINUS           reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_THAN       reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    LESS_OR_EQUAL_THAN reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    EQUAL_THAN      reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    DIFFERENT_THAN  reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_THAN    reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    GREATER_OR_EQUAL_THAN reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    SEMICOLON       reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    RPAREN          reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)
    OUTSTREAM       reduce using rule 88 (factor -> expression_action_6 LPAREN expression RPAREN expression_action_7 .)


state 169

    (84) term -> term AND expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 84 (term -> term AND expression_action_3 factor expression_action_5 .)


state 170

    (82) term -> term DIVIDE expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 82 (term -> term DIVIDE expression_action_3 factor expression_action_5 .)


state 171

    (81) term -> term TIMES expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 81 (term -> term TIMES expression_action_3 factor expression_action_5 .)


state 172

    (83) term -> term MOD expression_action_3 factor expression_action_5 .

    TIMES           reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIVIDE          reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MOD             reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    AND             reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OR              reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    PLUS            reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    MINUS           reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    RPAREN          reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_THAN       reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    LESS_OR_EQUAL_THAN reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    EQUAL_THAN      reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    DIFFERENT_THAN  reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_THAN    reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    GREATER_OR_EQUAL_THAN reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    SEMICOLON       reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)
    OUTSTREAM       reduce using rule 83 (term -> term MOD expression_action_3 factor expression_action_5 .)


state 173

    (73) expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 73 (expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 174

    (70) expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 70 (expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 175

    (72) expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 72 (expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9 .)


state 176

    (71) expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 71 (expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9 .)


state 177

    (69) expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 69 (expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9 .)


state 178

    (68) expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .

    RPAREN          reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_THAN       reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    LESS_OR_EQUAL_THAN reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    EQUAL_THAN      reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    DIFFERENT_THAN  reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_THAN    reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    GREATER_OR_EQUAL_THAN reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    OUTSTREAM       reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)
    SEMICOLON       reduce using rule 68 (expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9 .)


state 179

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE . LPAREN expression RPAREN do_while_action_2 SEMICOLON

    LPAREN          shift and go to state 187


state 180

    (23) output_expression -> OUTSTREAM TEXT output_expression .

    SEMICOLON       reduce using rule 23 (output_expression -> OUTSTREAM TEXT output_expression .)


state 181

    (21) output_expression -> OUTSTREAM expression output_expression .

    SEMICOLON       reduce using rule 21 (output_expression -> OUTSTREAM expression output_expression .)


state 182

    (53) while_sentence -> WHILE while_action_1 LPAREN expression . RPAREN while_action_2 function_block while_action_3
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 188
    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71


state 183

    (61) for_expression -> assignation for_action_1 . SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3
    (62) for_expression -> assignation for_action_1 . SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 189


state 184

    (60) for_sentence -> FOR LPAREN for_expression RPAREN . function_block for_action_4
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 190

state 185

    (26) input_expression -> INSTREAM id input_expression .

    SEMICOLON       reduce using rule 26 (input_expression -> INSTREAM id input_expression .)


state 186

    (48) if_sentence -> IF LPAREN expression RPAREN . if_action_1 function_block empty if_action_2
    (49) if_sentence -> IF LPAREN expression RPAREN . if_action_1 function_block ELSE if_action_2 function_block if_action_3
    (50) if_action_1 -> .

    LBRACE          reduce using rule 50 (if_action_1 -> .)

    if_action_1                    shift and go to state 191

state 187

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN . expression RPAREN do_while_action_2 SEMICOLON
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    real                           shift and go to state 47
    term                           shift and go to state 51
    integer                        shift and go to state 41
    number                         shift and go to state 43
    id                             shift and go to state 44
    expression_action_6            shift and go to state 50
    factor                         shift and go to state 46
    simple_expression              shift and go to state 48
    expression                     shift and go to state 192

state 188

    (53) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN . while_action_2 function_block while_action_3
    (55) while_action_2 -> .

    LBRACE          reduce using rule 55 (while_action_2 -> .)

    while_action_2                 shift and go to state 193

state 189

    (61) for_expression -> assignation for_action_1 SEMICOLON . expression for_action_2 SEMICOLON assignation for_action_3
    (62) for_expression -> assignation for_action_1 SEMICOLON . expression for_action_2 SEMICOLON unary_operation for_action_3
    (67) expression -> . simple_expression
    (68) expression -> . expression LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> . expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> . expression EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> . expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> . expression GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> . expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (74) simple_expression -> . term expression_action_4
    (75) simple_expression -> . PLUS term expression_action_4
    (76) simple_expression -> . MINUS term expression_action_4
    (77) simple_expression -> . simple_expression OR expression_action_2 term expression_action_4
    (78) simple_expression -> . simple_expression PLUS expression_action_2 term expression_action_4
    (79) simple_expression -> . simple_expression MINUS expression_action_2 term expression_action_4
    (80) term -> . factor
    (81) term -> . term TIMES expression_action_3 factor expression_action_5
    (82) term -> . term DIVIDE expression_action_3 factor expression_action_5
    (83) term -> . term MOD expression_action_3 factor expression_action_5
    (84) term -> . term AND expression_action_3 factor expression_action_5
    (85) factor -> . id expression_action_1
    (86) factor -> . number expression_action_1
    (87) factor -> . NOT id expression_action_1
    (88) factor -> . expression_action_6 LPAREN expression RPAREN expression_action_7
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector
    (89) number -> . real
    (90) number -> . integer
    (99) expression_action_6 -> .
    (91) real -> . NUMBER DOT NUMBER
    (92) integer -> . NUMBER

    PLUS            shift and go to state 45
    MINUS           shift and go to state 42
    NOT             shift and go to state 53
    ID              shift and go to state 8
    LPAREN          reduce using rule 99 (expression_action_6 -> .)
    NUMBER          shift and go to state 49

    number                         shift and go to state 43
    simple_expression              shift and go to state 48
    id                             shift and go to state 44
    factor                         shift and go to state 46
    real                           shift and go to state 47
    term                           shift and go to state 51
    expression_action_6            shift and go to state 50
    integer                        shift and go to state 41
    expression                     shift and go to state 194

state 190

    (60) for_sentence -> FOR LPAREN for_expression RPAREN function_block . for_action_4
    (66) for_action_4 -> .

    ID              reduce using rule 66 (for_action_4 -> .)
    COUT            reduce using rule 66 (for_action_4 -> .)
    CIN             reduce using rule 66 (for_action_4 -> .)
    PLUS            reduce using rule 66 (for_action_4 -> .)
    MINUS           reduce using rule 66 (for_action_4 -> .)
    IF              reduce using rule 66 (for_action_4 -> .)
    WHILE           reduce using rule 66 (for_action_4 -> .)
    DO              reduce using rule 66 (for_action_4 -> .)
    FOR             reduce using rule 66 (for_action_4 -> .)
    RBRACE          reduce using rule 66 (for_action_4 -> .)

    for_action_4                   shift and go to state 195

state 191

    (48) if_sentence -> IF LPAREN expression RPAREN if_action_1 . function_block empty if_action_2
    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 . function_block ELSE if_action_2 function_block if_action_3
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 196

state 192

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression . RPAREN do_while_action_2 SEMICOLON
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9

    RPAREN          shift and go to state 197
    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71


state 193

    (53) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 . function_block while_action_3
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 198

state 194

    (61) for_expression -> assignation for_action_1 SEMICOLON expression . for_action_2 SEMICOLON assignation for_action_3
    (62) for_expression -> assignation for_action_1 SEMICOLON expression . for_action_2 SEMICOLON unary_operation for_action_3
    (68) expression -> expression . LESS_THAN expression_action_8 simple_expression expression_action_9
    (69) expression -> expression . LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (70) expression -> expression . EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (71) expression -> expression . DIFFERENT_THAN expression_action_8 simple_expression expression_action_9
    (72) expression -> expression . GREATER_THAN expression_action_8 simple_expression expression_action_9
    (73) expression -> expression . GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9
    (64) for_action_2 -> .

    LESS_THAN       shift and go to state 77
    LESS_OR_EQUAL_THAN shift and go to state 76
    EQUAL_THAN      shift and go to state 72
    DIFFERENT_THAN  shift and go to state 75
    GREATER_THAN    shift and go to state 74
    GREATER_OR_EQUAL_THAN shift and go to state 71
    SEMICOLON       reduce using rule 64 (for_action_2 -> .)

    for_action_2                   shift and go to state 199

state 195

    (60) for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .

    ID              reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    COUT            reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    CIN             reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    PLUS            reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    MINUS           reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    IF              reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    WHILE           reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    DO              reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    FOR             reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)
    RBRACE          reduce using rule 60 (for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4 .)


state 196

    (48) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block . empty if_action_2
    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block . ELSE if_action_2 function_block if_action_3
    (93) empty -> .

    ELSE            shift and go to state 200
    ID              reduce using rule 93 (empty -> .)
    COUT            reduce using rule 93 (empty -> .)
    CIN             reduce using rule 93 (empty -> .)
    PLUS            reduce using rule 93 (empty -> .)
    MINUS           reduce using rule 93 (empty -> .)
    IF              reduce using rule 93 (empty -> .)
    WHILE           reduce using rule 93 (empty -> .)
    DO              reduce using rule 93 (empty -> .)
    FOR             reduce using rule 93 (empty -> .)
    RBRACE          reduce using rule 93 (empty -> .)

    empty                          shift and go to state 201

state 197

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN . do_while_action_2 SEMICOLON
    (59) do_while_action_2 -> .

    SEMICOLON       reduce using rule 59 (do_while_action_2 -> .)

    do_while_action_2              shift and go to state 202

state 198

    (53) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block . while_action_3
    (56) while_action_3 -> .

    ID              reduce using rule 56 (while_action_3 -> .)
    COUT            reduce using rule 56 (while_action_3 -> .)
    CIN             reduce using rule 56 (while_action_3 -> .)
    PLUS            reduce using rule 56 (while_action_3 -> .)
    MINUS           reduce using rule 56 (while_action_3 -> .)
    IF              reduce using rule 56 (while_action_3 -> .)
    WHILE           reduce using rule 56 (while_action_3 -> .)
    DO              reduce using rule 56 (while_action_3 -> .)
    FOR             reduce using rule 56 (while_action_3 -> .)
    RBRACE          reduce using rule 56 (while_action_3 -> .)

    while_action_3                 shift and go to state 203

state 199

    (61) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 . SEMICOLON assignation for_action_3
    (62) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 . SEMICOLON unary_operation for_action_3

    SEMICOLON       shift and go to state 204


state 200

    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE . if_action_2 function_block if_action_3
    (51) if_action_2 -> .

    LBRACE          reduce using rule 51 (if_action_2 -> .)

    if_action_2                    shift and go to state 205

state 201

    (48) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty . if_action_2
    (51) if_action_2 -> .

    ID              reduce using rule 51 (if_action_2 -> .)
    COUT            reduce using rule 51 (if_action_2 -> .)
    CIN             reduce using rule 51 (if_action_2 -> .)
    PLUS            reduce using rule 51 (if_action_2 -> .)
    MINUS           reduce using rule 51 (if_action_2 -> .)
    IF              reduce using rule 51 (if_action_2 -> .)
    WHILE           reduce using rule 51 (if_action_2 -> .)
    DO              reduce using rule 51 (if_action_2 -> .)
    FOR             reduce using rule 51 (if_action_2 -> .)
    RBRACE          reduce using rule 51 (if_action_2 -> .)

    if_action_2                    shift and go to state 206

state 202

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 . SEMICOLON

    SEMICOLON       shift and go to state 207


state 203

    (53) while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .

    ID              reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    COUT            reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    CIN             reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    PLUS            reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    MINUS           reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    IF              reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    WHILE           reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    DO              reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    FOR             reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)
    RBRACE          reduce using rule 53 (while_sentence -> WHILE while_action_1 LPAREN expression RPAREN while_action_2 function_block while_action_3 .)


state 204

    (61) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON . assignation for_action_3
    (62) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON . unary_operation for_action_3
    (31) assignation -> . id assignation_action_1 EQUAL assignation_action_2 expression assignation_action_3
    (35) unary_operation -> . ID PLUS PLUS
    (36) unary_operation -> . ID MINUS MINUS
    (37) unary_operation -> . PLUS PLUS ID
    (38) unary_operation -> . MINUS MINUS ID
    (41) id -> . ID
    (42) id -> . ID vector
    (43) id -> . ID vector vector

    ID              shift and go to state 210
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86

    assignation                    shift and go to state 208
    unary_operation                shift and go to state 209
    id                             shift and go to state 2

state 205

    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 . function_block if_action_3
    (8) function_block -> . LBRACE instruction RBRACE

    LBRACE          shift and go to state 54

    function_block                 shift and go to state 211

state 206

    (48) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .

    ID              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    COUT            reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    CIN             reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    PLUS            reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    MINUS           reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    IF              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    WHILE           reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    DO              reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    FOR             reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)
    RBRACE          reduce using rule 48 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block empty if_action_2 .)


state 207

    (57) do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .

    ID              reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    COUT            reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    CIN             reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    PLUS            reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    MINUS           reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    IF              reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    WHILE           reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    DO              reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    FOR             reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)
    RBRACE          reduce using rule 57 (do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression RPAREN do_while_action_2 SEMICOLON .)


state 208

    (61) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation . for_action_3
    (65) for_action_3 -> .

    RPAREN          reduce using rule 65 (for_action_3 -> .)

    for_action_3                   shift and go to state 212

state 209

    (62) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation . for_action_3
    (65) for_action_3 -> .

    RPAREN          reduce using rule 65 (for_action_3 -> .)

    for_action_3                   shift and go to state 213

state 210

    (35) unary_operation -> ID . PLUS PLUS
    (36) unary_operation -> ID . MINUS MINUS
    (41) id -> ID .
    (42) id -> ID . vector
    (43) id -> ID . vector vector
    (44) vector -> . LBRACKET integer RBRACKET
    (45) vector -> . LBRACKET ID RBRACKET
    (46) vector -> . LBRACKET empty RBRACKET

    PLUS            shift and go to state 133
    MINUS           shift and go to state 132
    EQUAL           reduce using rule 41 (id -> ID .)
    LBRACKET        shift and go to state 19

    vector                         shift and go to state 20

state 211

    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block . if_action_3
    (52) if_action_3 -> .

    ID              reduce using rule 52 (if_action_3 -> .)
    COUT            reduce using rule 52 (if_action_3 -> .)
    CIN             reduce using rule 52 (if_action_3 -> .)
    PLUS            reduce using rule 52 (if_action_3 -> .)
    MINUS           reduce using rule 52 (if_action_3 -> .)
    IF              reduce using rule 52 (if_action_3 -> .)
    WHILE           reduce using rule 52 (if_action_3 -> .)
    DO              reduce using rule 52 (if_action_3 -> .)
    FOR             reduce using rule 52 (if_action_3 -> .)
    RBRACE          reduce using rule 52 (if_action_3 -> .)

    if_action_3                    shift and go to state 214

state 212

    (61) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3 .

    RPAREN          reduce using rule 61 (for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON assignation for_action_3 .)


state 213

    (62) for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3 .

    RPAREN          reduce using rule 62 (for_expression -> assignation for_action_1 SEMICOLON expression for_action_2 SEMICOLON unary_operation for_action_3 .)


state 214

    (49) if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .

    ID              reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    COUT            reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    CIN             reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    PLUS            reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    MINUS           reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    IF              reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    WHILE           reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    DO              reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    FOR             reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)
    RBRACE          reduce using rule 49 (if_sentence -> IF LPAREN expression RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3 .)

