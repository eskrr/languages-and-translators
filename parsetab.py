
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CIN COMMA COUT DIFFERENT_THAN DIVIDE DO DOT ELSE ENDL EQUAL EQUAL_THAN FLOAT FOR FUNCTION GREATER_OR_EQUAL_THAN GREATER_THAN ID IF INSTREAM INT LBRACE LBRACKET LESS_OR_EQUAL_THAN LESS_THAN LPAREN MAIN MINUS MOD NOT NUMBER OR OUTSTREAM PLUS RBRACE RBRACKET RPAREN SEMICOLON TEXT TIMES WHILEprogram : program_blockprogram_block : declaration SEMICOLON program_block \n                   | assignation SEMICOLON program_block\n                   | normal_function program_block\n                   | main_functionnormal_function : FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_actionmain_function : FUNCTION MAIN start_main_function_action LPAREN RPAREN function_blockstart_function_action : start_main_function_action : end_function_action : function_block : LBRACE instruction RBRACEinstruction : proposition instruction\n                 | emptyproposition : function_call SEMICOLON\n                 | assignation SEMICOLON\n                 | print SEMICOLON\n                 | input SEMICOLON\n                 | unary_operation SEMICOLON\n                 | if_sentence\n                 | while_sentence\n                 | do_while_sentence\n                 | for_sentenceprint : COUT output_expression\n     output_expression : OUTSTREAM expression print_action output_expression\n                       | OUTSTREAM expression print_action\n                       | OUTSTREAM TEXT print_action output_expression\n                       | OUTSTREAM TEXT print_action\n                       | OUTSTREAM ENDL print_action output_expression\n                       | OUTSTREAM ENDL print_action\n  print_action :input : CIN input_expression \n     input_expression : INSTREAM id input_action input_expression\n                      | INSTREAM id input_action  \n  input_action :declaration : type variablestype : INT\n          | FLOATassignation : id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3assignation_action_1 :assignation_action_2 :assignation_action_3 :unary_operation : ID PLUS PLUS\n                     | ID MINUS MINUS\n                     | PLUS PLUS ID\n                     | MINUS MINUS ID\n  variables   : id COMMA variables\n                 | id\n                 id : ID\n        | ID vector\n        | ID vector vector\n  vector : LBRACKET integer RBRACKET\n            | LBRACKET ID RBRACKET  \n            | LBRACKET empty RBRACKET\n  function_call : ID function_call_action LPAREN RPARENfunction_call_action :if_sentence : IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2\n                 | IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3\n  if_action_1 :if_action_2 : if_action_3 :while_sentence : WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3while_action_1 : while_action_2 : while_action_3 : do_while_sentence :  DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLONdo_while_action_1 : do_while_action_2 : for_sentence : FOR LPAREN for_expression RPAREN function_block for_action_4for_expression : assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3\n                    | assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3for_action_1 :for_action_2 :for_action_3 :for_action_4 :expression_1 : expression\n                  | expression AND expression_action_3 expression expression_action_5   expression : simple_expression\n                | expression LESS_THAN expression_action_8 simple_expression expression_action_9   \n                | expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9   \n                | expression EQUAL_THAN expression_action_8 simple_expression expression_action_9   \n                | expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9   \n                | expression GREATER_THAN expression_action_8 simple_expression expression_action_9   \n                | expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9simple_expression : term expression_action_4\n                       | PLUS term expression_action_4\n                       | MINUS term expression_action_4\n                       | simple_expression OR expression_action_2 term expression_action_4\n                       | simple_expression PLUS expression_action_2 term expression_action_4\n                       | simple_expression MINUS expression_action_2 term expression_action_4term : factor\n          | term TIMES expression_action_3 factor expression_action_5\n          | term DIVIDE expression_action_3 factor expression_action_5\n          | term MOD expression_action_3 factor expression_action_5factor : id expression_action_1\n            | number expression_action_1\n            | NOT id expression_action_1\n            | expression_action_6 LPAREN expression RPAREN expression_action_7number : real\n            | integerreal : NUMBER DOT NUMBERinteger : NUMBERempty :expression_action_1 :expression_action_2 :expression_action_3 :expression_action_4 :expression_action_5 :expression_action_6 :expression_action_7 :expression_action_8 :expression_action_9 :'
    
_lr_action_items = {'DO':([79,102,105,106,108,120,139,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[100,-21,100,-20,-22,-19,-14,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'COUT':([79,102,105,106,108,120,139,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[101,-21,101,-20,-22,-19,-14,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'CIN':([79,102,105,106,108,120,139,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[115,-21,115,-20,-22,-19,-14,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'TEXT':([137,],[171,]),'EQUAL':([2,8,13,20,32,38,39,40,116,220,],[-39,-48,23,-49,-50,-51,-52,-53,-48,-48,]),'LBRACKET':([8,20,38,39,40,116,220,],[19,19,-51,-52,-53,19,19,]),'WHILE':([79,102,105,106,108,120,139,144,145,146,154,155,170,200,206,207,209,212,214,217,218,222,225,],[104,-21,104,-20,-22,-19,-14,-16,-17,-18,-15,-11,184,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'DIFFERENT_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,75,-106,-95,-94,-106,-84,-103,-86,-85,-100,75,-96,-106,-106,-106,-107,-107,-107,-109,75,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,75,]),'LESS_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,77,-106,-95,-94,-106,-84,-103,-86,-85,-100,77,-96,-106,-106,-106,-107,-107,-107,-109,77,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,77,]),'MINUS':([8,20,23,32,34,38,39,40,41,43,44,45,47,48,49,51,57,61,62,63,68,70,71,72,73,74,75,76,77,78,79,82,86,87,92,93,94,95,96,97,98,99,102,105,106,107,108,116,120,122,123,124,125,126,127,128,130,131,132,133,134,135,137,139,144,145,146,152,153,154,155,156,157,158,159,160,161,162,174,194,199,200,206,207,209,212,214,215,217,218,220,222,225,],[-48,-49,-40,-50,42,-51,-52,-53,-99,58,-103,-103,-90,-98,-101,-106,-106,-95,-94,-106,-84,42,-105,-110,-110,-110,-110,-110,-110,-103,107,-86,-85,-100,42,42,42,42,42,42,42,-96,-21,107,-20,142,-22,152,-19,-106,-106,-106,-107,-107,-107,-109,58,58,58,58,58,58,42,-14,-16,-17,-18,182,42,-15,-11,-89,-88,-87,-92,-91,-93,-97,42,42,42,-74,-68,-102,-64,-59,-61,107,-56,-65,152,-60,-57,]),'DOT':([49,],[64,]),'RBRACE':([79,102,105,106,108,113,119,120,139,141,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[-102,-21,-102,-20,-22,-13,155,-19,-14,-12,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'RPAREN':([8,20,32,36,37,38,39,40,41,43,44,45,47,48,49,50,51,53,57,61,62,63,65,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,163,164,165,166,167,168,169,175,176,178,180,181,182,183,188,203,219,221,223,224,],[-48,-49,-50,55,56,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-41,-106,-75,-106,-95,-94,-106,-38,-84,-103,-86,-85,-100,128,-96,-106,-106,-106,-107,-107,-107,-109,-107,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-76,-80,-83,-79,-81,-82,-78,-45,-44,190,-42,192,-43,193,198,208,-73,-73,-69,-70,]),'SEMICOLON':([7,8,9,14,15,20,32,35,38,39,40,41,43,44,45,47,48,49,50,51,53,57,61,62,63,65,68,78,82,86,87,99,103,110,111,112,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,175,176,177,179,180,182,185,186,187,189,191,192,195,196,197,201,205,208,210,213,],[18,-48,21,-35,-47,-49,-50,-46,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-41,-106,-75,-106,-95,-94,-106,-38,-84,-103,-86,-85,-100,-96,139,144,145,146,154,-106,-106,-106,-107,-107,-107,-109,-107,-111,-111,-111,-111,-111,-111,-23,-31,-89,-88,-87,-92,-91,-93,-97,-76,-80,-83,-79,-81,-82,-78,-30,-30,-30,-45,-44,-71,-34,-42,-43,-27,-29,-25,199,-33,-54,-26,-28,-24,-32,-72,-67,215,218,]),'ENDL':([137,],[172,]),'PLUS':([8,20,23,32,34,38,39,40,41,43,44,45,47,48,49,51,57,61,62,63,68,70,71,72,73,74,75,76,77,78,79,82,86,87,92,93,94,95,96,97,98,99,102,105,106,108,109,116,120,122,123,124,125,126,127,128,130,131,132,133,134,135,137,139,144,145,146,150,153,154,155,156,157,158,159,160,161,162,174,194,199,200,206,207,209,212,214,215,217,218,220,222,225,],[-48,-49,-40,-50,46,-51,-52,-53,-99,59,-103,-103,-90,-98,-101,-106,-106,-95,-94,-106,-84,46,-105,-110,-110,-110,-110,-110,-110,-103,109,-86,-85,-100,46,46,46,46,46,46,46,-96,-21,109,-20,-22,143,150,-19,-106,-106,-106,-107,-107,-107,-109,59,59,59,59,59,59,46,-14,-16,-17,-18,180,46,-15,-11,-89,-88,-87,-92,-91,-93,-97,46,46,46,-74,-68,-102,-64,-59,-61,109,-56,-65,150,-60,-57,]),'COMMA':([8,15,20,32,38,39,40,],[-48,24,-49,-50,-51,-52,-53,]),'INSTREAM':([8,20,32,38,39,40,115,179,191,],[-48,-49,-50,-51,-52,-53,148,-34,148,]),'$end':([1,3,4,22,27,33,80,155,],[-5,0,-1,-4,-2,-3,-7,-11,]),'FUNCTION':([0,11,18,21,81,121,155,],[6,6,6,6,-10,-6,-11,]),'DIVIDE':([8,20,32,38,39,40,41,44,45,47,48,49,51,57,61,62,63,78,87,99,122,123,124,125,126,127,128,159,160,161,162,],[-48,-49,-50,-51,-52,-53,-99,-103,-103,-90,-98,-101,66,66,-95,-94,66,-103,-100,-96,66,66,66,-107,-107,-107,-109,-92,-91,-93,-97,]),'FOR':([79,102,105,106,108,120,139,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[114,-21,114,-20,-22,-19,-14,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'NUMBER':([19,23,34,42,46,58,59,60,64,66,67,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[28,-40,49,49,49,-104,-104,-104,87,-105,-105,-105,49,-105,-110,-110,-110,-110,-110,-110,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'OUTSTREAM':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,57,61,62,63,68,78,82,86,87,99,101,122,123,124,125,126,127,128,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,171,172,173,185,186,187,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,-106,-95,-94,-106,-84,-103,-86,-85,-100,-96,137,-106,-106,-106,-107,-107,-107,-109,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,-30,-30,-30,137,137,137,]),'TIMES':([8,20,32,38,39,40,41,44,45,47,48,49,51,57,61,62,63,78,87,99,122,123,124,125,126,127,128,159,160,161,162,],[-48,-49,-50,-51,-52,-53,-99,-103,-103,-90,-98,-101,67,67,-95,-94,67,-103,-100,-96,67,67,67,-107,-107,-107,-109,-92,-91,-93,-97,]),'LPAREN':([16,17,23,25,26,34,42,46,52,58,59,60,66,67,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,92,93,94,95,96,97,98,104,114,116,117,137,140,151,153,174,184,194,199,],[-9,-8,-40,36,37,-108,-108,-108,70,-104,-104,-104,-105,-105,-105,-108,-105,-110,-110,-110,-110,-110,-110,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-62,147,-55,153,-108,174,181,-108,-108,194,-108,-108,]),'GREATER_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,76,-106,-95,-94,-106,-84,-103,-86,-85,-100,76,-96,-106,-106,-106,-107,-107,-107,-109,76,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,76,]),'ELSE':([155,207,],[-11,211,]),'ID':([0,5,6,10,11,12,18,19,21,23,24,34,42,46,54,58,59,60,66,67,69,70,71,72,73,74,75,76,77,79,81,83,84,85,88,89,90,92,93,94,95,96,97,98,102,105,106,108,120,121,137,139,142,143,144,145,146,147,148,153,154,155,174,194,199,200,206,207,209,212,214,215,217,218,222,225,],[8,8,17,-36,8,-37,8,30,8,-40,8,8,8,8,8,-104,-104,-104,-105,-105,-105,8,-105,-110,-110,-110,-110,-110,-110,116,-10,8,8,8,8,8,8,8,8,8,8,8,8,8,-21,116,-20,-22,-19,-6,8,-14,175,176,-16,-17,-18,8,8,8,-15,-11,8,8,8,-74,-68,-102,-64,-59,-61,220,-56,-65,-60,-57,]),'IF':([79,102,105,106,108,120,139,144,145,146,154,155,200,206,207,209,212,214,217,218,222,225,],[117,-21,117,-20,-22,-19,-14,-16,-17,-18,-15,-11,-74,-68,-102,-64,-59,-61,-56,-65,-60,-57,]),'AND':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,99,122,123,124,125,126,127,128,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,71,-106,-95,-94,-106,-84,-103,-86,-85,-100,-96,-106,-106,-106,-107,-107,-107,-109,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,]),'GREATER_OR_EQUAL_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,73,-106,-95,-94,-106,-84,-103,-86,-85,-100,73,-96,-106,-106,-106,-107,-107,-107,-109,73,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,73,]),'LBRACE':([55,56,100,136,190,193,198,202,204,211,216,],[79,79,-66,79,79,-58,-63,79,79,-59,79,]),'EQUAL_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,72,-106,-95,-94,-106,-84,-103,-86,-85,-100,72,-96,-106,-106,-106,-107,-107,-107,-109,72,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,72,]),'INT':([0,11,18,21,81,121,155,],[10,10,10,10,-10,-6,-11,]),'FLOAT':([0,11,18,21,81,121,155,],[12,12,12,12,-10,-6,-11,]),'NOT':([23,34,42,46,58,59,60,66,67,69,70,71,72,73,74,75,76,77,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[-40,54,54,54,-104,-104,-104,-105,-105,-105,54,-105,-110,-110,-110,-110,-110,-110,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'RBRACKET':([19,28,29,30,31,],[-102,-101,38,39,40,]),'MAIN':([6,],[16,]),'LESS_OR_EQUAL_THAN':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,53,57,61,62,63,68,78,82,86,87,91,99,122,123,124,125,126,127,128,129,130,131,132,133,134,135,156,157,158,159,160,161,162,164,165,166,167,168,169,173,],[-48,-49,-50,-51,-52,-53,-99,-77,-103,-103,-90,-98,-101,-106,74,-106,-95,-94,-106,-84,-103,-86,-85,-100,74,-96,-106,-106,-106,-107,-107,-107,-109,74,-111,-111,-111,-111,-111,-111,-89,-88,-87,-92,-91,-93,-97,-80,-83,-79,-81,-82,-78,74,]),'OR':([8,20,32,38,39,40,41,43,44,45,47,48,49,51,57,61,62,63,68,78,82,86,87,99,122,123,124,125,126,127,128,130,131,132,133,134,135,156,157,158,159,160,161,162,],[-48,-49,-50,-51,-52,-53,-99,60,-103,-103,-90,-98,-101,-106,-106,-95,-94,-106,-84,-103,-86,-85,-100,-96,-106,-106,-106,-107,-107,-107,-109,60,60,60,60,60,60,-89,-88,-87,-92,-91,-93,-97,]),'MOD':([8,20,32,38,39,40,41,44,45,47,48,49,51,57,61,62,63,78,87,99,122,123,124,125,126,127,128,159,160,161,162,],[-48,-49,-50,-51,-52,-53,-99,-103,-103,-90,-98,-101,69,69,-95,-94,69,-103,-100,-96,69,69,69,-107,-107,-107,-109,-92,-91,-93,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_function':([0,11,18,21,],[1,1,1,1,]),'do_while_sentence':([79,105,],[102,102,]),'assignation_action_2':([23,],[34,]),'assignation_action_3':([50,],[65,]),'variables':([5,24,],[14,35,]),'assignation_action_1':([2,],[13,]),'do_while_action_1':([100,],[136,]),'number':([34,42,46,70,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'function_call':([79,105,],[103,103,]),'proposition':([79,105,],[105,105,]),'do_while_action_2':([208,],[213,]),'if_action_2':([211,212,],[216,217,]),'while_sentence':([79,105,],[106,106,]),'simple_expression':([34,70,92,93,94,95,96,97,98,137,153,174,194,199,],[43,43,43,130,131,132,133,134,135,43,43,43,43,43,]),'id':([0,5,11,18,21,24,34,42,46,54,70,79,83,84,85,88,89,90,92,93,94,95,96,97,98,105,137,147,148,153,174,194,199,215,],[2,15,2,2,2,15,45,45,45,78,45,2,45,45,45,45,45,45,45,45,45,45,45,45,45,2,45,2,179,45,45,45,45,2,]),'expression_action_2':([58,59,60,],[83,84,85,]),'end_function_action':([81,],[121,]),'instruction':([79,105,],[119,141,]),'if_action_1':([193,],[202,]),'start_main_function_action':([16,],[25,]),'if_action_3':([222,],[225,]),'program':([0,],[3,]),'factor':([34,42,46,70,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[47,47,47,47,47,47,47,125,126,127,47,47,47,47,47,47,47,47,47,47,47,47,]),'print':([79,105,],[110,110,]),'input':([79,105,],[111,111,]),'type':([0,11,18,21,],[5,5,5,5,]),'empty':([19,79,105,207,],[31,113,113,212,]),'real':([34,42,46,70,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'unary_operation':([79,105,215,],[112,112,221,]),'function_call_action':([116,],[151,]),'input_action':([179,],[191,]),'for_expression':([147,],[178,]),'while_action_3':([209,],[214,]),'expression_1':([34,153,174,194,199,],[50,183,188,203,205,]),'program_block':([0,11,18,21,],[4,22,27,33,]),'for_action_1':([177,],[189,]),'while_action_2':([198,],[204,]),'expression_action_5':([125,126,127,129,],[159,160,161,163,]),'start_function_action':([17,],[26,]),'expression_action_7':([128,],[162,]),'expression_action_6':([34,42,46,70,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expression_action_1':([44,45,78,],[61,62,99,]),'while_action_1':([104,],[140,]),'expression_action_3':([66,67,69,71,],[88,89,90,92,]),'declaration':([0,11,18,21,],[7,7,7,7,]),'function_block':([55,56,136,190,202,204,216,],[80,81,170,200,207,209,222,]),'integer':([19,34,42,46,70,83,84,85,88,89,90,92,93,94,95,96,97,98,137,153,174,194,199,],[29,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'expression_action_9':([130,131,132,133,134,135,],[164,165,166,167,168,169,]),'expression_action_8':([72,73,74,75,76,77,],[93,94,95,96,97,98,]),'for_action_3':([219,221,],[223,224,]),'for_action_2':([205,],[210,]),'term':([34,42,46,70,83,84,85,92,93,94,95,96,97,98,137,153,174,194,199,],[51,57,63,51,122,123,124,51,51,51,51,51,51,51,51,51,51,51,51,]),'assignation':([0,11,18,21,79,105,147,215,],[9,9,9,9,118,118,177,219,]),'expression_action_4':([51,57,63,122,123,124,],[68,82,86,156,157,158,]),'if_sentence':([79,105,],[120,120,]),'normal_function':([0,11,18,21,],[11,11,11,11,]),'input_expression':([115,191,],[149,201,]),'output_expression':([101,185,186,187,],[138,195,196,197,]),'vector':([8,20,116,220,],[20,32,20,20,]),'print_action':([171,172,173,],[185,186,187,]),'expression':([34,70,92,137,153,174,194,199,],[53,91,129,173,53,53,53,53,]),'for_sentence':([79,105,],[108,108,]),'for_action_4':([200,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_block','program',1,'p_program','eskr_yacc.py',34),
  ('program_block -> declaration SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',37),
  ('program_block -> assignation SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',38),
  ('program_block -> normal_function program_block','program_block',2,'p_program_block','eskr_yacc.py',39),
  ('program_block -> main_function','program_block',1,'p_program_block','eskr_yacc.py',40),
  ('normal_function -> FUNCTION ID start_function_action LPAREN RPAREN function_block end_function_action','normal_function',7,'p_normal_function','eskr_yacc.py',43),
  ('main_function -> FUNCTION MAIN start_main_function_action LPAREN RPAREN function_block','main_function',6,'p_main_function','eskr_yacc.py',46),
  ('start_function_action -> <empty>','start_function_action',0,'p_start_function_action','eskr_yacc.py',49),
  ('start_main_function_action -> <empty>','start_main_function_action',0,'p_start_main_function_action','eskr_yacc.py',54),
  ('end_function_action -> <empty>','end_function_action',0,'p_end_function_action','eskr_yacc.py',59),
  ('function_block -> LBRACE instruction RBRACE','function_block',3,'p_function_block','eskr_yacc.py',64),
  ('instruction -> proposition instruction','instruction',2,'p_instruction','eskr_yacc.py',67),
  ('instruction -> empty','instruction',1,'p_instruction','eskr_yacc.py',68),
  ('proposition -> function_call SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',71),
  ('proposition -> assignation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',72),
  ('proposition -> print SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',73),
  ('proposition -> input SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',74),
  ('proposition -> unary_operation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',75),
  ('proposition -> if_sentence','proposition',1,'p_proposition','eskr_yacc.py',76),
  ('proposition -> while_sentence','proposition',1,'p_proposition','eskr_yacc.py',77),
  ('proposition -> do_while_sentence','proposition',1,'p_proposition','eskr_yacc.py',78),
  ('proposition -> for_sentence','proposition',1,'p_proposition','eskr_yacc.py',79),
  ('print -> COUT output_expression','print',2,'p_print','eskr_yacc.py',82),
  ('output_expression -> OUTSTREAM expression print_action output_expression','output_expression',4,'p_print','eskr_yacc.py',83),
  ('output_expression -> OUTSTREAM expression print_action','output_expression',3,'p_print','eskr_yacc.py',84),
  ('output_expression -> OUTSTREAM TEXT print_action output_expression','output_expression',4,'p_print','eskr_yacc.py',85),
  ('output_expression -> OUTSTREAM TEXT print_action','output_expression',3,'p_print','eskr_yacc.py',86),
  ('output_expression -> OUTSTREAM ENDL print_action output_expression','output_expression',4,'p_print','eskr_yacc.py',87),
  ('output_expression -> OUTSTREAM ENDL print_action','output_expression',3,'p_print','eskr_yacc.py',88),
  ('print_action -> <empty>','print_action',0,'p_print_action','eskr_yacc.py',92),
  ('input -> CIN input_expression','input',2,'p_input','eskr_yacc.py',104),
  ('input_expression -> INSTREAM id input_action input_expression','input_expression',4,'p_input','eskr_yacc.py',105),
  ('input_expression -> INSTREAM id input_action','input_expression',3,'p_input','eskr_yacc.py',106),
  ('input_action -> <empty>','input_action',0,'p_input_action','eskr_yacc.py',110),
  ('declaration -> type variables','declaration',2,'p_declaration','eskr_yacc.py',117),
  ('type -> INT','type',1,'p_type','eskr_yacc.py',127),
  ('type -> FLOAT','type',1,'p_type','eskr_yacc.py',128),
  ('assignation -> id assignation_action_1 EQUAL assignation_action_2 expression_1 assignation_action_3','assignation',6,'p_assignation','eskr_yacc.py',132),
  ('assignation_action_1 -> <empty>','assignation_action_1',0,'p_assignation_action_1','eskr_yacc.py',135),
  ('assignation_action_2 -> <empty>','assignation_action_2',0,'p_assignation_action_2','eskr_yacc.py',144),
  ('assignation_action_3 -> <empty>','assignation_action_3',0,'p_assignation_action_3','eskr_yacc.py',149),
  ('unary_operation -> ID PLUS PLUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',156),
  ('unary_operation -> ID MINUS MINUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',157),
  ('unary_operation -> PLUS PLUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',158),
  ('unary_operation -> MINUS MINUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',159),
  ('variables -> id COMMA variables','variables',3,'p_variables','eskr_yacc.py',165),
  ('variables -> id','variables',1,'p_variables','eskr_yacc.py',166),
  ('id -> ID','id',1,'p_id','eskr_yacc.py',174),
  ('id -> ID vector','id',2,'p_id','eskr_yacc.py',175),
  ('id -> ID vector vector','id',3,'p_id','eskr_yacc.py',176),
  ('vector -> LBRACKET integer RBRACKET','vector',3,'p_vector','eskr_yacc.py',181),
  ('vector -> LBRACKET ID RBRACKET','vector',3,'p_vector','eskr_yacc.py',182),
  ('vector -> LBRACKET empty RBRACKET','vector',3,'p_vector','eskr_yacc.py',183),
  ('function_call -> ID function_call_action LPAREN RPAREN','function_call',4,'p_function_call','eskr_yacc.py',187),
  ('function_call_action -> <empty>','function_call_action',0,'p_function_call_action','eskr_yacc.py',190),
  ('if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block empty if_action_2','if_sentence',8,'p_if_sentence','eskr_yacc.py',196),
  ('if_sentence -> IF LPAREN expression_1 RPAREN if_action_1 function_block ELSE if_action_2 function_block if_action_3','if_sentence',10,'p_if_sentence','eskr_yacc.py',197),
  ('if_action_1 -> <empty>','if_action_1',0,'p_if_action_1','eskr_yacc.py',201),
  ('if_action_2 -> <empty>','if_action_2',0,'p_if_action_2','eskr_yacc.py',207),
  ('if_action_3 -> <empty>','if_action_3',0,'p_if_action_3','eskr_yacc.py',217),
  ('while_sentence -> WHILE while_action_1 LPAREN expression_1 RPAREN while_action_2 function_block while_action_3','while_sentence',8,'p_while_sentence','eskr_yacc.py',223),
  ('while_action_1 -> <empty>','while_action_1',0,'p_while_action_1','eskr_yacc.py',226),
  ('while_action_2 -> <empty>','while_action_2',0,'p_while_action_2','eskr_yacc.py',231),
  ('while_action_3 -> <empty>','while_action_3',0,'p_while_action_3','eskr_yacc.py',237),
  ('do_while_sentence -> DO do_while_action_1 function_block WHILE LPAREN expression_1 RPAREN do_while_action_2 SEMICOLON','do_while_sentence',9,'p_do_while_sentence','eskr_yacc.py',244),
  ('do_while_action_1 -> <empty>','do_while_action_1',0,'p_do_while_action_1','eskr_yacc.py',247),
  ('do_while_action_2 -> <empty>','do_while_action_2',0,'p_do_while_action_2','eskr_yacc.py',252),
  ('for_sentence -> FOR LPAREN for_expression RPAREN function_block for_action_4','for_sentence',6,'p_for_sentence','eskr_yacc.py',257),
  ('for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON assignation for_action_3','for_expression',8,'p_for_expression','eskr_yacc.py',260),
  ('for_expression -> assignation for_action_1 SEMICOLON expression_1 for_action_2 SEMICOLON unary_operation for_action_3','for_expression',8,'p_for_expression','eskr_yacc.py',261),
  ('for_action_1 -> <empty>','for_action_1',0,'p_for_action_1','eskr_yacc.py',264),
  ('for_action_2 -> <empty>','for_action_2',0,'p_for_action_2','eskr_yacc.py',269),
  ('for_action_3 -> <empty>','for_action_3',0,'p_for_action_3','eskr_yacc.py',281),
  ('for_action_4 -> <empty>','for_action_4',0,'p_for_action_4','eskr_yacc.py',287),
  ('expression_1 -> expression','expression_1',1,'p_expression_1','eskr_yacc.py',293),
  ('expression_1 -> expression AND expression_action_3 expression expression_action_5','expression_1',5,'p_expression_1','eskr_yacc.py',294),
  ('expression -> simple_expression','expression',1,'p_expression','eskr_yacc.py',297),
  ('expression -> expression LESS_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',298),
  ('expression -> expression LESS_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',299),
  ('expression -> expression EQUAL_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',300),
  ('expression -> expression DIFFERENT_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',301),
  ('expression -> expression GREATER_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',302),
  ('expression -> expression GREATER_OR_EQUAL_THAN expression_action_8 simple_expression expression_action_9','expression',5,'p_expression','eskr_yacc.py',303),
  ('simple_expression -> term expression_action_4','simple_expression',2,'p_simple_expression','eskr_yacc.py',306),
  ('simple_expression -> PLUS term expression_action_4','simple_expression',3,'p_simple_expression','eskr_yacc.py',307),
  ('simple_expression -> MINUS term expression_action_4','simple_expression',3,'p_simple_expression','eskr_yacc.py',308),
  ('simple_expression -> simple_expression OR expression_action_2 term expression_action_4','simple_expression',5,'p_simple_expression','eskr_yacc.py',309),
  ('simple_expression -> simple_expression PLUS expression_action_2 term expression_action_4','simple_expression',5,'p_simple_expression','eskr_yacc.py',310),
  ('simple_expression -> simple_expression MINUS expression_action_2 term expression_action_4','simple_expression',5,'p_simple_expression','eskr_yacc.py',311),
  ('term -> factor','term',1,'p_term','eskr_yacc.py',314),
  ('term -> term TIMES expression_action_3 factor expression_action_5','term',5,'p_term','eskr_yacc.py',315),
  ('term -> term DIVIDE expression_action_3 factor expression_action_5','term',5,'p_term','eskr_yacc.py',316),
  ('term -> term MOD expression_action_3 factor expression_action_5','term',5,'p_term','eskr_yacc.py',317),
  ('factor -> id expression_action_1','factor',2,'p_factor','eskr_yacc.py',322),
  ('factor -> number expression_action_1','factor',2,'p_factor','eskr_yacc.py',323),
  ('factor -> NOT id expression_action_1','factor',3,'p_factor','eskr_yacc.py',324),
  ('factor -> expression_action_6 LPAREN expression RPAREN expression_action_7','factor',5,'p_factor','eskr_yacc.py',325),
  ('number -> real','number',1,'p_number','eskr_yacc.py',333),
  ('number -> integer','number',1,'p_number','eskr_yacc.py',334),
  ('real -> NUMBER DOT NUMBER','real',3,'p_real','eskr_yacc.py',338),
  ('integer -> NUMBER','integer',1,'p_integer','eskr_yacc.py',342),
  ('empty -> <empty>','empty',0,'p_empty','eskr_yacc.py',346),
  ('expression_action_1 -> <empty>','expression_action_1',0,'p_expression_action_1','eskr_yacc.py',355),
  ('expression_action_2 -> <empty>','expression_action_2',0,'p_expression_action_2','eskr_yacc.py',360),
  ('expression_action_3 -> <empty>','expression_action_3',0,'p_expression_action_3','eskr_yacc.py',365),
  ('expression_action_4 -> <empty>','expression_action_4',0,'p_expression_action_4','eskr_yacc.py',370),
  ('expression_action_5 -> <empty>','expression_action_5',0,'p_expression_action_5','eskr_yacc.py',381),
  ('expression_action_6 -> <empty>','expression_action_6',0,'p_expression_action_6','eskr_yacc.py',392),
  ('expression_action_7 -> <empty>','expression_action_7',0,'p_expression_action_7','eskr_yacc.py',397),
  ('expression_action_8 -> <empty>','expression_action_8',0,'p_expression_action_8','eskr_yacc.py',402),
  ('expression_action_9 -> <empty>','expression_action_9',0,'p_expression_action_9','eskr_yacc.py',407),
]
