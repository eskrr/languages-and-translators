
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionAND CIN COMMA COUT DIFFERENT_THAN DIVIDE DO DOT DOUBLE ELSE EQUAL EQUAL_THAN FOR FUNCTION GREATER_OR_EQUAL_THAN GREATER_THAN ID IF INSTREAM INT LBRACE LBRACKET LESS_OR_EQUAL_THAN LESS_THAN LPAREN MAIN MINUS MOD NOT NUMBER OR OUTSTREAM PLUS RBRACE RBRACKET RPAREN SEMICOLON TEXT TIMES WHILEprogram : program_blockprogram_block : declaration SEMICOLON program_block \n                   | assignation SEMICOLON program_block\n                   | normal_function program_block\n                   | main_functionnormal_function : FUNCTION ID LPAREN RPAREN function_blockmain_function : FUNCTION MAIN LPAREN RPAREN function_blockfunction_block : LBRACE instruction RBRACEinstruction : proposition instruction\n                 | emptyproposition : function_call SEMICOLON\n                 | assignation SEMICOLON\n                 | print SEMICOLON\n                 | input SEMICOLON\n                 | unary_operation SEMICOLON\n                 | if_sentence\n                 | while_sentence\n                 | do_while_sentence\n                 | for_sentenceprint : COUT output_expression\n     output_expression : OUTSTREAM expression output_expression\n                       | OUTSTREAM expression\n                       | OUTSTREAM TEXT output_expression\n                       | OUTSTREAM TEXT\n  input : CIN input_expression\n     input_expression : INSTREAM id input_expression\n                      | INSTREAM id\n  declaration : type variables EQUAL expression\n                 | type variablestype : INT\n          | DOUBLEassignation : variables EQUAL expression\n                 | variablesunary_operation : ID PLUS PLUS\n                     | ID MINUS MINUS\n                     | PLUS PLUS ID\n                     | MINUS MINUS ID\n  variables   : id COMMA variables\n                 | id\n                 id : ID\n        | ID vector\n        | ID vector vector\n  vector : LBRACKET integer RBRACKET\n            | LBRACKET ID RBRACKET  \n            | LBRACKET empty RBRACKET\n  function_call : ID LPAREN RPARENif_sentence : IF LPAREN expression RPAREN function_block empty\n                 | IF LPAREN expression RPAREN function_block ELSE function_block\n  while_sentence : WHILE LPAREN expression RPAREN function_blockdo_while_sentence :  DO function_block WHILE LPAREN expression RPAREN SEMICOLONfor_sentence : FOR LPAREN for_expression RPAREN function_blockfor_expression : declaration SEMICOLON expression SEMICOLON assignation\n                    | declaration SEMICOLON expression SEMICOLON unary_operationexpression : simple_expression\n                | expression LESS_THAN simple_expression   \n                | expression LESS_OR_EQUAL_THAN simple_expression   \n                | expression EQUAL_THAN simple_expression   \n                | expression DIFFERENT_THAN simple_expression   \n                | expression GREATER_THAN simple_expression   \n                | expression GREATER_OR_EQUAL_THAN simple_expressionsimple_expression : term\n                       | PLUS term\n                       | MINUS term\n                       | simple_expression OR expression_action_2 term\n                       | simple_expression PLUS expression_action_2 term\n                       | simple_expression MINUS expression_action_2 termterm : factor\n          | term TIMES expression_action_3 factor\n          | term DIVIDE expression_action_3 factor\n          | term MOD expression_action_3 factor\n          | term AND expression_action_3 factorfactor : id expression_action_1\n            | number expression_action_1\n            | NOT id expression_action_1\n            | LPAREN expression RPARENnumber : real\n            | integerreal : NUMBER DOT NUMBERinteger : NUMBERempty :expression_action_1 :expression_action_2 :expression_action_3 :'
    
_lr_action_items = {'NUMBER':([0,1,5,6,17,18,19,23,24,25,26,27,28,31,32,33,34,35,36,38,39,40,42,43,44,45,],[9,9,9,9,-82,-82,-82,41,-83,-83,-83,-83,46,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LBRACKET':([12,29,65,66,67,],[28,28,-43,-44,-45,]),'DIFFERENT_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,33,33,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'LESS_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,35,35,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'MINUS':([0,1,2,3,4,7,8,9,10,11,12,16,20,21,22,29,30,31,32,33,34,35,36,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[5,5,-81,17,-81,-67,-76,-79,-61,-77,-40,-73,-72,-63,-62,-41,-81,5,5,5,5,5,5,-75,-78,-42,-74,17,17,17,17,17,17,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'DOT':([9,],[23,]),'RPAREN':([2,3,4,7,8,9,10,11,12,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,37,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'PLUS':([0,1,2,3,4,7,8,9,10,11,12,16,20,21,22,29,30,31,32,33,34,35,36,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[6,6,-81,18,-81,-67,-76,-79,-61,-77,-40,-73,-72,-63,-62,-41,-81,6,6,6,6,6,6,-75,-78,-42,-74,18,18,18,18,18,18,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'$end':([2,3,4,7,8,9,10,11,12,14,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,0,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'DIVIDE':([2,4,7,8,9,10,11,12,16,20,21,22,29,30,37,41,50,51,58,59,60,61,62,63,64,65,66,67,],[-81,-81,-67,-76,-79,25,-77,-40,-73,-72,25,25,-41,-81,-75,-78,-42,-74,25,25,25,-71,-69,-68,-70,-43,-44,-45,]),'TIMES':([2,4,7,8,9,10,11,12,16,20,21,22,29,30,37,41,50,51,58,59,60,61,62,63,64,65,66,67,],[-81,-81,-67,-76,-79,26,-77,-40,-73,-72,26,26,-41,-81,-75,-78,-42,-74,26,26,26,-71,-69,-68,-70,-43,-44,-45,]),'LPAREN':([0,1,5,6,17,18,19,24,25,26,27,31,32,33,34,35,36,38,39,40,42,43,44,45,],[1,1,1,1,-82,-82,-82,-83,-83,-83,-83,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'GREATER_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,34,34,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'ID':([0,1,5,6,13,17,18,19,24,25,26,27,28,31,32,33,34,35,36,38,39,40,42,43,44,45,],[12,12,12,12,12,-82,-82,-82,-83,-83,-83,-83,48,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'AND':([2,4,7,8,9,10,11,12,16,20,21,22,29,30,37,41,50,51,58,59,60,61,62,63,64,65,66,67,],[-81,-81,-67,-76,-79,24,-77,-40,-73,-72,24,24,-41,-81,-75,-78,-42,-74,24,24,24,-71,-69,-68,-70,-43,-44,-45,]),'GREATER_OR_EQUAL_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,31,31,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'EQUAL_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,32,32,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'NOT':([0,1,5,6,17,18,19,24,25,26,27,31,32,33,34,35,36,38,39,40,42,43,44,45,],[13,13,13,13,-82,-82,-82,-83,-83,-83,-83,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RBRACKET':([28,46,47,48,49,],[-80,-79,65,66,67,]),'LESS_OR_EQUAL_THAN':([2,3,4,7,8,9,10,11,12,14,15,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,-54,-81,-67,-76,-79,-61,-77,-40,36,36,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,-60,-57,-58,-59,-55,-56,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'OR':([2,3,4,7,8,9,10,11,12,16,20,21,22,29,30,37,41,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-81,19,-81,-67,-76,-79,-61,-77,-40,-73,-72,-63,-62,-41,-81,-75,-78,-42,-74,19,19,19,19,19,19,-66,-65,-64,-71,-69,-68,-70,-43,-44,-45,]),'MOD':([2,4,7,8,9,10,11,12,16,20,21,22,29,30,37,41,50,51,58,59,60,61,62,63,64,65,66,67,],[-81,-81,-67,-76,-79,27,-77,-40,-73,-72,27,27,-41,-81,-75,-78,-42,-74,27,27,27,-71,-69,-68,-70,-43,-44,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'real':([0,1,5,6,31,32,33,34,35,36,38,39,40,42,43,44,45,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'term':([0,1,5,6,31,32,33,34,35,36,38,39,40,],[10,10,21,22,10,10,10,10,10,10,58,59,60,]),'expression_action_2':([17,18,19,],[38,39,40,]),'number':([0,1,5,6,31,32,33,34,35,36,38,39,40,42,43,44,45,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'vector':([12,29,],[29,50,]),'expression_action_1':([2,4,30,],[16,20,51,]),'expression_action_3':([24,25,26,27,],[42,43,44,45,]),'factor':([0,1,5,6,31,32,33,34,35,36,38,39,40,42,43,44,45,],[7,7,7,7,7,7,7,7,7,7,7,7,7,61,62,63,64,]),'integer':([0,1,5,6,28,31,32,33,34,35,36,38,39,40,42,43,44,45,],[11,11,11,11,47,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'simple_expression':([0,1,31,32,33,34,35,36,],[3,3,52,53,54,55,56,57,]),'expression':([0,1,],[14,15,]),'id':([0,1,5,6,13,31,32,33,34,35,36,38,39,40,42,43,44,45,],[4,4,4,4,30,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'empty':([28,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('program -> program_block','program',1,'p_program','eskr_yacc.py',13),
  ('program_block -> declaration SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',21),
  ('program_block -> assignation SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',22),
  ('program_block -> normal_function program_block','program_block',2,'p_program_block','eskr_yacc.py',23),
  ('program_block -> main_function','program_block',1,'p_program_block','eskr_yacc.py',24),
  ('normal_function -> FUNCTION ID LPAREN RPAREN function_block','normal_function',5,'p_normal_function','eskr_yacc.py',32),
  ('main_function -> FUNCTION MAIN LPAREN RPAREN function_block','main_function',5,'p_main_function','eskr_yacc.py',40),
  ('function_block -> LBRACE instruction RBRACE','function_block',3,'p_function_block','eskr_yacc.py',48),
  ('instruction -> proposition instruction','instruction',2,'p_instruction','eskr_yacc.py',56),
  ('instruction -> empty','instruction',1,'p_instruction','eskr_yacc.py',57),
  ('proposition -> function_call SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',65),
  ('proposition -> assignation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',66),
  ('proposition -> print SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',67),
  ('proposition -> input SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',68),
  ('proposition -> unary_operation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',69),
  ('proposition -> if_sentence','proposition',1,'p_proposition','eskr_yacc.py',70),
  ('proposition -> while_sentence','proposition',1,'p_proposition','eskr_yacc.py',71),
  ('proposition -> do_while_sentence','proposition',1,'p_proposition','eskr_yacc.py',72),
  ('proposition -> for_sentence','proposition',1,'p_proposition','eskr_yacc.py',73),
  ('print -> COUT output_expression','print',2,'p_print','eskr_yacc.py',81),
  ('output_expression -> OUTSTREAM expression output_expression','output_expression',3,'p_print','eskr_yacc.py',82),
  ('output_expression -> OUTSTREAM expression','output_expression',2,'p_print','eskr_yacc.py',83),
  ('output_expression -> OUTSTREAM TEXT output_expression','output_expression',3,'p_print','eskr_yacc.py',84),
  ('output_expression -> OUTSTREAM TEXT','output_expression',2,'p_print','eskr_yacc.py',85),
  ('input -> CIN input_expression','input',2,'p_input','eskr_yacc.py',89),
  ('input_expression -> INSTREAM id input_expression','input_expression',3,'p_input','eskr_yacc.py',90),
  ('input_expression -> INSTREAM id','input_expression',2,'p_input','eskr_yacc.py',91),
  ('declaration -> type variables EQUAL expression','declaration',4,'p_declaration','eskr_yacc.py',95),
  ('declaration -> type variables','declaration',2,'p_declaration','eskr_yacc.py',96),
  ('type -> INT','type',1,'p_type','eskr_yacc.py',110),
  ('type -> DOUBLE','type',1,'p_type','eskr_yacc.py',111),
  ('assignation -> variables EQUAL expression','assignation',3,'p_assignation','eskr_yacc.py',115),
  ('assignation -> variables','assignation',1,'p_assignation','eskr_yacc.py',116),
  ('unary_operation -> ID PLUS PLUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',125),
  ('unary_operation -> ID MINUS MINUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',126),
  ('unary_operation -> PLUS PLUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',127),
  ('unary_operation -> MINUS MINUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',128),
  ('variables -> id COMMA variables','variables',3,'p_variables','eskr_yacc.py',137),
  ('variables -> id','variables',1,'p_variables','eskr_yacc.py',138),
  ('id -> ID','id',1,'p_id','eskr_yacc.py',152),
  ('id -> ID vector','id',2,'p_id','eskr_yacc.py',153),
  ('id -> ID vector vector','id',3,'p_id','eskr_yacc.py',154),
  ('vector -> LBRACKET integer RBRACKET','vector',3,'p_vector','eskr_yacc.py',159),
  ('vector -> LBRACKET ID RBRACKET','vector',3,'p_vector','eskr_yacc.py',160),
  ('vector -> LBRACKET empty RBRACKET','vector',3,'p_vector','eskr_yacc.py',161),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','eskr_yacc.py',165),
  ('if_sentence -> IF LPAREN expression RPAREN function_block empty','if_sentence',6,'p_if_sentence','eskr_yacc.py',173),
  ('if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block','if_sentence',7,'p_if_sentence','eskr_yacc.py',174),
  ('while_sentence -> WHILE LPAREN expression RPAREN function_block','while_sentence',5,'p_while_sentence','eskr_yacc.py',183),
  ('do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON','do_while_sentence',7,'p_do_while_sentence','eskr_yacc.py',191),
  ('for_sentence -> FOR LPAREN for_expression RPAREN function_block','for_sentence',5,'p_for_sentence','eskr_yacc.py',199),
  ('for_expression -> declaration SEMICOLON expression SEMICOLON assignation','for_expression',5,'p_for_expression','eskr_yacc.py',207),
  ('for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation','for_expression',5,'p_for_expression','eskr_yacc.py',208),
  ('expression -> simple_expression','expression',1,'p_expression','eskr_yacc.py',216),
  ('expression -> expression LESS_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',217),
  ('expression -> expression LESS_OR_EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',218),
  ('expression -> expression EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',219),
  ('expression -> expression DIFFERENT_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',220),
  ('expression -> expression GREATER_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',221),
  ('expression -> expression GREATER_OR_EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',222),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','eskr_yacc.py',230),
  ('simple_expression -> PLUS term','simple_expression',2,'p_simple_expression','eskr_yacc.py',231),
  ('simple_expression -> MINUS term','simple_expression',2,'p_simple_expression','eskr_yacc.py',232),
  ('simple_expression -> simple_expression OR expression_action_2 term','simple_expression',4,'p_simple_expression','eskr_yacc.py',233),
  ('simple_expression -> simple_expression PLUS expression_action_2 term','simple_expression',4,'p_simple_expression','eskr_yacc.py',234),
  ('simple_expression -> simple_expression MINUS expression_action_2 term','simple_expression',4,'p_simple_expression','eskr_yacc.py',235),
  ('term -> factor','term',1,'p_term','eskr_yacc.py',243),
  ('term -> term TIMES expression_action_3 factor','term',4,'p_term','eskr_yacc.py',244),
  ('term -> term DIVIDE expression_action_3 factor','term',4,'p_term','eskr_yacc.py',245),
  ('term -> term MOD expression_action_3 factor','term',4,'p_term','eskr_yacc.py',246),
  ('term -> term AND expression_action_3 factor','term',4,'p_term','eskr_yacc.py',247),
  ('factor -> id expression_action_1','factor',2,'p_factor','eskr_yacc.py',255),
  ('factor -> number expression_action_1','factor',2,'p_factor','eskr_yacc.py',256),
  ('factor -> NOT id expression_action_1','factor',3,'p_factor','eskr_yacc.py',257),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','eskr_yacc.py',258),
  ('number -> real','number',1,'p_number','eskr_yacc.py',266),
  ('number -> integer','number',1,'p_number','eskr_yacc.py',267),
  ('real -> NUMBER DOT NUMBER','real',3,'p_real','eskr_yacc.py',276),
  ('integer -> NUMBER','integer',1,'p_integer','eskr_yacc.py',285),
  ('empty -> <empty>','empty',0,'p_empty','eskr_yacc.py',294),
  ('expression_action_1 -> <empty>','expression_action_1',0,'p_expression_action_1','eskr_yacc.py',308),
  ('expression_action_2 -> <empty>','expression_action_2',0,'p_expression_action_2','eskr_yacc.py',315),
  ('expression_action_3 -> <empty>','expression_action_3',0,'p_expression_action_3','eskr_yacc.py',322),
]
