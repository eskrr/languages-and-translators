
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CIN COMMA COUT DIFFERENT_THAN DIVIDE DO DOT ELSE EQUAL EQUAL_THAN FOR FUNCTION GREATER_OR_EQUAL_THAN GREATER_THAN ID IF INSTREAM LBRACE LBRACKET LESS_OR_EQUAL_THAN LESS_THAN LPAREN MAIN MINUS MOD NOT NUMBER OR OUTSTREAM PLUS RBRACE RBRACKET RPAREN SEMICOLON TEXT TIMES VAR WHILEprogram : program_blockprogram_block : declaration SEMICOLON program_block \n                     | assignation SEMICOLON program_block\n                     | normal_function program_block\n                     | main_functionnormal_function : FUNCTION ID LPAREN RPAREN function_blockmain_function : FUNCTION MAIN LPAREN RPAREN function_blockfunction_block : LBRACE instruction RBRACEinstruction : proposition instruction\n                   | emptyproposition : function_call SEMICOLON\n                   | assignation SEMICOLON\n                   | print SEMICOLON\n                   | input SEMICOLON\n                   | unary_operation SEMICOLON\n                   | if_sentence\n                   | while_sentence\n                   | do_while_sentence\n                   | for_sentenceprint : COUT output_expression\n     output_expression : OUTSTREAM expression output_expression\n                       | OUTSTREAM expression\n                       | OUTSTREAM TEXT output_expression\n                       | OUTSTREAM TEXT\n  input : CIN input_expression\n     input_expression : INSTREAM id input_expression\n                      | INSTREAM id\n  declaration : VAR assignationassignation : variables EQUAL expression\n                   | variablesunary_operation : ID PLUS PLUS\n                       | ID MINUS MINUS\n                       | PLUS PLUS ID\n                       | MINUS MINUS ID\n    variables   : id COMMA variables\n                   | id\n                   id : ID\n          | ID vector\n          | ID vector vector\n    vector : LBRACKET integer RBRACKET\n              | LBRACKET ID RBRACKET  \n              | LBRACKET empty RBRACKET\n    function_call : ID LPAREN RPARENif_sentence : IF LPAREN expression RPAREN function_block empty\n                   | IF LPAREN expression RPAREN function_block ELSE function_block\n    while_sentence : WHILE LPAREN expression RPAREN function_blockdo_while_sentence :  DO function_block WHILE LPAREN expression RPAREN SEMICOLONfor_sentence : FOR LPAREN for_expression RPAREN function_blockfor_expression : declaration SEMICOLON expression SEMICOLON assignation\n                      | declaration SEMICOLON expression SEMICOLON unary_operationexpression : simple_expression\n                  | expression LESS_THAN simple_expression   \n                  | expression LESS_OR_EQUAL_THAN simple_expression   \n                  | expression EQUAL_THAN simple_expression   \n                  | expression DIFFERENT_THAN simple_expression   \n                  | expression GREATER_THAN simple_expression   \n                  | expression GREATER_OR_EQUAL_THAN simple_expressionsimple_expression : term\n                         | PLUS term\n                         | MINUS term\n                         | simple_expression OR term\n                         | simple_expression PLUS term\n                         | simple_expression MINUS termterm : factor\n            | term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | term AND factorfactor : id\n              | number\n              | function_call\n              | NOT factor\n              | LPAREN expression RPARENnumber : real\n              | integerreal : NUMBER DOT NUMBERinteger : NUMBERempty :'
    
_lr_action_items = {'DO':([71,92,95,96,98,110,114,119,120,121,128,129,151,152,154,158,159,163,],[90,-18,90,-17,-19,-16,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'COUT':([71,92,95,96,98,110,114,119,120,121,128,129,151,152,154,158,159,163,],[91,-18,91,-17,-19,-16,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'CIN':([71,92,95,96,98,110,114,119,120,121,128,129,151,152,154,158,159,163,],[105,-18,105,-17,-19,-16,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'TEXT':([112,],[131,]),'NUMBER':([15,20,28,29,35,38,49,50,51,54,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[32,42,32,32,32,32,32,32,32,77,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ELSE':([129,154,],[-8,157,]),'LBRACKET':([11,21,37,68,69,70,106,162,],[20,20,20,-40,-41,-42,20,20,]),'GREATER_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,65,-39,-60,-59,65,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,65,65,65,65,65,]),'WHILE':([71,92,95,96,98,110,111,114,119,120,121,128,129,151,152,154,158,159,163,],[94,-18,94,-17,-19,-16,130,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'DIFFERENT_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,64,-39,-60,-59,64,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,64,64,64,64,64,]),'LESS_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,67,-39,-60,-59,67,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,67,67,67,67,67,]),'MINUS':([15,21,25,26,27,30,31,32,33,34,35,36,37,46,52,53,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,97,98,106,110,112,114,115,119,120,121,125,127,128,129,142,147,151,152,154,156,158,159,162,163,],[28,-38,-71,51,-69,-64,-74,-77,-58,-70,28,-75,-37,-39,-60,-59,-72,28,28,28,28,28,28,-40,-41,-42,97,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,51,51,51,51,51,51,-18,97,-17,117,-19,125,-16,28,-11,28,-13,-14,-15,139,28,-12,-8,28,28,-46,-48,-78,97,-44,-47,125,-45,]),'DOT':([32,],[54,]),'RBRACE':([71,92,95,96,98,103,109,110,114,116,119,120,121,128,129,151,152,154,158,159,163,],[-78,-18,-78,-17,-19,-10,129,-16,-11,-9,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'RPAREN':([4,6,11,21,22,23,25,26,27,30,31,32,33,34,36,37,39,40,46,52,53,59,60,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,133,134,135,136,139,140,141,150,160,161,162,],[-30,-36,-37,-38,47,48,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,-29,-35,-39,-60,-59,82,83,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,145,-34,-33,146,-32,-31,149,155,-49,-50,-37,]),'SEMICOLON':([3,4,6,9,11,19,21,25,26,27,30,31,32,33,34,36,37,39,40,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,100,101,102,106,108,113,124,131,132,134,135,137,138,139,140,143,144,148,153,155,],[14,-30,-36,18,-37,-28,-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,-29,-35,-39,-60,-59,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,114,119,120,121,-37,128,-20,-25,-24,-22,-34,-33,147,-27,-32,-31,-23,-21,-26,156,159,]),'COMMA':([6,11,21,46,68,69,70,106,162,],[17,-37,-38,-39,-40,-41,-42,-37,-37,]),'PLUS':([15,21,25,26,27,30,31,32,33,34,35,36,37,46,52,53,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,98,99,106,110,112,114,115,119,120,121,126,127,128,129,142,147,151,152,154,156,158,159,162,163,],[29,-38,-71,49,-69,-64,-74,-77,-58,-70,29,-75,-37,-39,-60,-59,-72,29,29,29,29,29,29,-40,-41,-42,99,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,49,49,49,49,49,49,-18,99,-17,-19,118,126,-16,29,-11,29,-13,-14,-15,140,29,-12,-8,29,29,-46,-48,-78,99,-44,-47,126,-45,]),'INSTREAM':([11,21,46,68,69,70,105,138,],[-37,-38,-39,-40,-41,-42,123,123,]),'$end':([2,7,8,16,24,41,72,129,],[-5,-1,0,-4,-3,-2,-7,-8,]),'FUNCTION':([0,5,14,18,73,129,],[1,1,1,1,-6,-8,]),'DIVIDE':([21,25,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,],[-38,-71,-69,-64,-74,-77,56,-70,-75,-37,-39,56,56,-72,-40,-41,-42,56,56,56,-76,-68,-66,-65,-67,-73,-43,]),'FOR':([71,92,95,96,98,110,114,119,120,121,128,129,151,152,154,158,159,163,],[104,-18,104,-17,-19,-16,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'OUTSTREAM':([21,25,26,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,131,132,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,-39,-60,-59,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,112,112,112,]),'EQUAL':([4,6,11,21,40,46,68,69,70,106,162,],[15,-36,-37,-38,-35,-39,-40,-41,-42,-37,-37,]),'LPAREN':([12,13,15,28,29,35,37,38,49,50,51,55,56,57,58,62,63,64,65,66,67,94,104,106,107,112,115,127,130,142,147,],[22,23,35,35,35,35,60,35,35,35,35,35,35,35,35,35,35,35,35,35,35,115,122,60,127,35,35,35,142,35,35,]),'VAR':([0,5,14,18,73,122,129,],[10,10,10,10,-6,10,-8,]),'TIMES':([21,25,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,],[-38,-71,-69,-64,-74,-77,57,-70,-75,-37,-39,57,57,-72,-40,-41,-42,57,57,57,-76,-68,-66,-65,-67,-73,-43,]),'ID':([0,1,5,10,14,15,17,18,20,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,71,73,92,95,96,98,110,112,114,115,117,118,119,120,121,123,127,128,129,142,147,151,152,154,156,158,159,163,],[11,13,11,11,11,37,11,11,44,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,106,-6,-18,106,-17,-19,-16,37,-11,37,134,135,-13,-14,-15,11,37,-12,-8,37,37,-46,-48,-78,162,-44,-47,-45,]),'IF':([71,92,95,96,98,110,114,119,120,121,128,129,151,152,154,158,159,163,],[107,-18,107,-17,-19,-16,-11,-13,-14,-15,-12,-8,-46,-48,-78,-44,-47,-45,]),'AND':([21,25,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,],[-38,-71,-69,-64,-74,-77,55,-70,-75,-37,-39,55,55,-72,-40,-41,-42,55,55,55,-76,-68,-66,-65,-67,-73,-43,]),'GREATER_OR_EQUAL_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,62,-39,-60,-59,62,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,62,62,62,62,62,]),'LBRACE':([47,48,90,145,146,149,157,],[71,71,71,71,71,71,71,]),'EQUAL_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,63,-39,-60,-59,63,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,63,63,63,63,63,]),'NOT':([15,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'RBRACKET':([20,42,43,44,45,],[-78,-77,68,69,70,]),'MAIN':([1,],[12,]),'LESS_OR_EQUAL_THAN':([21,25,26,27,30,31,32,33,34,36,37,39,46,52,53,59,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,132,133,141,150,153,],[-38,-71,-51,-69,-64,-74,-77,-58,-70,-75,-37,66,-39,-60,-59,66,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,-57,-54,-55,-56,-53,-52,66,66,66,66,66,]),'OR':([21,25,26,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-38,-71,50,-69,-64,-74,-77,-58,-70,-75,-37,-39,-60,-59,-72,-40,-41,-42,-62,-61,-63,-76,-68,-66,-65,-67,-73,-43,50,50,50,50,50,50,]),'MOD':([21,25,27,30,31,32,33,34,36,37,46,52,53,61,68,69,70,74,75,76,77,78,79,80,81,82,83,],[-38,-71,-69,-64,-74,-77,58,-70,-75,-37,-39,58,58,-72,-40,-41,-42,58,58,58,-76,-68,-66,-65,-67,-73,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_function':([0,5,14,18,],[2,2,2,2,]),'do_while_sentence':([71,95,],[92,92,]),'variables':([0,5,10,14,17,18,71,95,156,],[4,4,4,4,40,4,4,4,4,]),'number':([15,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'function_call':([15,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,71,95,112,115,127,142,147,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,93,93,25,25,25,25,25,]),'proposition':([71,95,],[95,95,]),'while_sentence':([71,95,],[96,96,]),'simple_expression':([15,35,62,63,64,65,66,67,112,115,127,142,147,],[26,26,84,85,86,87,88,89,26,26,26,26,26,]),'id':([0,5,10,14,15,17,18,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,71,95,112,115,123,127,142,147,156,],[6,6,6,6,27,6,6,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,6,6,27,27,138,27,27,27,6,]),'instruction':([71,95,],[109,116,]),'program':([0,],[8,]),'program_block':([0,5,14,18,],[7,16,24,41,]),'print':([71,95,],[100,100,]),'input':([71,95,],[101,101,]),'unary_operation':([71,95,156,],[102,102,161,]),'empty':([20,71,95,154,],[45,103,103,158,]),'real':([15,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'for_expression':([122,],[136,]),'factor':([15,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[30,30,30,30,61,30,30,30,78,79,80,81,30,30,30,30,30,30,30,30,30,30,30,]),'declaration':([0,5,14,18,122,],[9,9,9,9,137,]),'function_block':([47,48,90,145,146,149,157,],[72,73,111,151,152,154,163,]),'integer':([15,20,28,29,35,38,49,50,51,55,56,57,58,62,63,64,65,66,67,112,115,127,142,147,],[36,43,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'term':([15,28,29,35,49,50,51,62,63,64,65,66,67,112,115,127,142,147,],[33,52,53,33,74,75,76,33,33,33,33,33,33,33,33,33,33,33,]),'assignation':([0,5,10,14,18,71,95,156,],[3,3,19,3,3,108,108,160,]),'if_sentence':([71,95,],[110,110,]),'normal_function':([0,5,14,18,],[5,5,5,5,]),'input_expression':([105,138,],[124,148,]),'output_expression':([91,131,132,],[113,143,144,]),'vector':([11,21,37,106,162,],[21,46,21,21,21,]),'expression':([15,35,112,115,127,142,147,],[39,59,132,133,141,150,153,]),'for_sentence':([71,95,],[98,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_block','program',1,'p_program','eskr_yacc.py',10),
  ('program_block -> declaration SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',18),
  ('program_block -> assignation SEMICOLON program_block','program_block',3,'p_program_block','eskr_yacc.py',19),
  ('program_block -> normal_function program_block','program_block',2,'p_program_block','eskr_yacc.py',20),
  ('program_block -> main_function','program_block',1,'p_program_block','eskr_yacc.py',21),
  ('normal_function -> FUNCTION ID LPAREN RPAREN function_block','normal_function',5,'p_normal_function','eskr_yacc.py',29),
  ('main_function -> FUNCTION MAIN LPAREN RPAREN function_block','main_function',5,'p_main_function','eskr_yacc.py',37),
  ('function_block -> LBRACE instruction RBRACE','function_block',3,'p_function_block','eskr_yacc.py',45),
  ('instruction -> proposition instruction','instruction',2,'p_instruction','eskr_yacc.py',53),
  ('instruction -> empty','instruction',1,'p_instruction','eskr_yacc.py',54),
  ('proposition -> function_call SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',62),
  ('proposition -> assignation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',63),
  ('proposition -> print SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',64),
  ('proposition -> input SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',65),
  ('proposition -> unary_operation SEMICOLON','proposition',2,'p_proposition','eskr_yacc.py',66),
  ('proposition -> if_sentence','proposition',1,'p_proposition','eskr_yacc.py',67),
  ('proposition -> while_sentence','proposition',1,'p_proposition','eskr_yacc.py',68),
  ('proposition -> do_while_sentence','proposition',1,'p_proposition','eskr_yacc.py',69),
  ('proposition -> for_sentence','proposition',1,'p_proposition','eskr_yacc.py',70),
  ('print -> COUT output_expression','print',2,'p_print','eskr_yacc.py',78),
  ('output_expression -> OUTSTREAM expression output_expression','output_expression',3,'p_print','eskr_yacc.py',79),
  ('output_expression -> OUTSTREAM expression','output_expression',2,'p_print','eskr_yacc.py',80),
  ('output_expression -> OUTSTREAM TEXT output_expression','output_expression',3,'p_print','eskr_yacc.py',81),
  ('output_expression -> OUTSTREAM TEXT','output_expression',2,'p_print','eskr_yacc.py',82),
  ('input -> CIN input_expression','input',2,'p_input','eskr_yacc.py',86),
  ('input_expression -> INSTREAM id input_expression','input_expression',3,'p_input','eskr_yacc.py',87),
  ('input_expression -> INSTREAM id','input_expression',2,'p_input','eskr_yacc.py',88),
  ('declaration -> VAR assignation','declaration',2,'p_declaration','eskr_yacc.py',92),
  ('assignation -> variables EQUAL expression','assignation',3,'p_assignation','eskr_yacc.py',100),
  ('assignation -> variables','assignation',1,'p_assignation','eskr_yacc.py',101),
  ('unary_operation -> ID PLUS PLUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',109),
  ('unary_operation -> ID MINUS MINUS','unary_operation',3,'p_unary_operation','eskr_yacc.py',110),
  ('unary_operation -> PLUS PLUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',111),
  ('unary_operation -> MINUS MINUS ID','unary_operation',3,'p_unary_operation','eskr_yacc.py',112),
  ('variables -> id COMMA variables','variables',3,'p_variables','eskr_yacc.py',121),
  ('variables -> id','variables',1,'p_variables','eskr_yacc.py',122),
  ('id -> ID','id',1,'p_id','eskr_yacc.py',131),
  ('id -> ID vector','id',2,'p_id','eskr_yacc.py',132),
  ('id -> ID vector vector','id',3,'p_id','eskr_yacc.py',133),
  ('vector -> LBRACKET integer RBRACKET','vector',3,'p_vector','eskr_yacc.py',137),
  ('vector -> LBRACKET ID RBRACKET','vector',3,'p_vector','eskr_yacc.py',138),
  ('vector -> LBRACKET empty RBRACKET','vector',3,'p_vector','eskr_yacc.py',139),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','eskr_yacc.py',143),
  ('if_sentence -> IF LPAREN expression RPAREN function_block empty','if_sentence',6,'p_if_sentence','eskr_yacc.py',151),
  ('if_sentence -> IF LPAREN expression RPAREN function_block ELSE function_block','if_sentence',7,'p_if_sentence','eskr_yacc.py',152),
  ('while_sentence -> WHILE LPAREN expression RPAREN function_block','while_sentence',5,'p_while_sentence','eskr_yacc.py',161),
  ('do_while_sentence -> DO function_block WHILE LPAREN expression RPAREN SEMICOLON','do_while_sentence',7,'p_do_while_sentence','eskr_yacc.py',169),
  ('for_sentence -> FOR LPAREN for_expression RPAREN function_block','for_sentence',5,'p_for_sentence','eskr_yacc.py',177),
  ('for_expression -> declaration SEMICOLON expression SEMICOLON assignation','for_expression',5,'p_for_expression','eskr_yacc.py',185),
  ('for_expression -> declaration SEMICOLON expression SEMICOLON unary_operation','for_expression',5,'p_for_expression','eskr_yacc.py',186),
  ('expression -> simple_expression','expression',1,'p_expression','eskr_yacc.py',194),
  ('expression -> expression LESS_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',195),
  ('expression -> expression LESS_OR_EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',196),
  ('expression -> expression EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',197),
  ('expression -> expression DIFFERENT_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',198),
  ('expression -> expression GREATER_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',199),
  ('expression -> expression GREATER_OR_EQUAL_THAN simple_expression','expression',3,'p_expression','eskr_yacc.py',200),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','eskr_yacc.py',208),
  ('simple_expression -> PLUS term','simple_expression',2,'p_simple_expression','eskr_yacc.py',209),
  ('simple_expression -> MINUS term','simple_expression',2,'p_simple_expression','eskr_yacc.py',210),
  ('simple_expression -> simple_expression OR term','simple_expression',3,'p_simple_expression','eskr_yacc.py',211),
  ('simple_expression -> simple_expression PLUS term','simple_expression',3,'p_simple_expression','eskr_yacc.py',212),
  ('simple_expression -> simple_expression MINUS term','simple_expression',3,'p_simple_expression','eskr_yacc.py',213),
  ('term -> factor','term',1,'p_term','eskr_yacc.py',221),
  ('term -> term TIMES factor','term',3,'p_term','eskr_yacc.py',222),
  ('term -> term DIVIDE factor','term',3,'p_term','eskr_yacc.py',223),
  ('term -> term MOD factor','term',3,'p_term','eskr_yacc.py',224),
  ('term -> term AND factor','term',3,'p_term','eskr_yacc.py',225),
  ('factor -> id','factor',1,'p_factor','eskr_yacc.py',233),
  ('factor -> number','factor',1,'p_factor','eskr_yacc.py',234),
  ('factor -> function_call','factor',1,'p_factor','eskr_yacc.py',235),
  ('factor -> NOT factor','factor',2,'p_factor','eskr_yacc.py',236),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','eskr_yacc.py',237),
  ('number -> real','number',1,'p_number','eskr_yacc.py',245),
  ('number -> integer','number',1,'p_number','eskr_yacc.py',246),
  ('real -> NUMBER DOT NUMBER','real',3,'p_real','eskr_yacc.py',254),
  ('integer -> NUMBER','integer',1,'p_integer','eskr_yacc.py',262),
  ('empty -> <empty>','empty',0,'p_empty','eskr_yacc.py',271),
]
